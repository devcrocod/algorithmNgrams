========================= CLASS #1 =============================
(0) {0} [132]: <?xml version="1.0" encoding="utf-8" ?> <plainxml> ====== ArmEvent.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(1125) {275574} [275670]: @since 3.105 ====== DeviceData.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(1469) {354350} [354437]: ====== DragDetectEvent.java ====== Copyright (c) 2000, 2008 IBM Corporation and others.
(1500) {358732} [358809]: ====== Event.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(1658) {391214} [391288]: ====== FillData.java ====== Copyright (c) 2005 IBM Corporation and others.
(1828) {422453} [422539]: ====== FormAttachment.java ====== Copyright (c) 2000, 2008 IBM Corporation and others.
(2775) {679433} [679526]: ====== JPEGQuantizationTable.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(2889) {699093} [699179]: ====== LineAttributes.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(3076) {737489} [737568]: ====== LZWNode.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(3373) {805569} [805651]: ====== PaintEvent.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(3535) {835720} [835803]: ====== PngDeflater.java ====== Copyright (c) 2000, 2008 IBM Corporation and others.
(3588) {839869} [839957]: ====== PngFileReadState.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(3597) {841477} [841561]: ====== PngIendChunk.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(3600) {841922} [842006]: ====== PngIhdrChunk.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(3651) {845406} [845490]: ====== PngTrnsChunk.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(3661) {846244} [846321]: ====== Point.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(3768) {876634} [876714]: ====== Resource.java ====== Copyright (c) 2000, 2010 IBM Corporation and others.
(4998) {1124003} [1124087]: ====== SWTException.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(6348) {1457948} [1458031]: ====== VerifyEvent.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
*****************************************************************
========================= CLASS #2 =============================
(1) {133} [153]: All rights reserved.
(5) {893} [913]: All rights reserved.
(11) {1941} [1961]: All rights reserved.
(63) {8933} [8953]: All rights reserved.
(121) {22636} [22656]: All rights reserved.
(163) {30770} [30790]: All rights reserved.
(185) {37184} [37204]: All rights reserved.
(214) {47604} [47624]: All rights reserved.
(280) {59271} [59291]: All rights reserved.
(295) {63499} [63519]: All rights reserved.
(404) {94196} [94216]: All rights reserved.
(425) {97310} [97330]: All rights reserved.
(517) {118774} [118794]: All rights reserved.
(789) {197374} [197394]: All rights reserved.
(797) {198634} [198654]: All rights reserved.
(801) {199393} [199413]: All rights reserved.
(808) {200630} [200650]: All rights reserved.
(849) {210810} [210830]: All rights reserved.
(890) {223817} [223837]: All rights reserved.
(923) {234707} [234727]: All rights reserved.
(969) {245307} [245327]: All rights reserved.
(1027) {260081} [260101]: All rights reserved.
(1029) {260465} [260485]: All rights reserved.
(1126) {275671} [275691]: All rights reserved.
(1128) {276049} [276069]: All rights reserved.
(1156) {283216} [283236]: All rights reserved.
(1176) {287423} [287443]: All rights reserved.
(1424) {348163} [348183]: All rights reserved.
(1428) {348913} [348933]: All rights reserved.
(1434) {349933} [349953]: All rights reserved.
(1470) {354438} [354458]: All rights reserved.
(1474) {355198} [355218]: All rights reserved.
(1480) {356253} [356273]: All rights reserved.
(1501) {358810} [358830]: All rights reserved.
(1541) {365561} [365581]: All rights reserved.
(1545) {366118} [366138]: All rights reserved.
(1553) {367256} [367276]: All rights reserved.
(1575) {374009} [374029]: All rights reserved.
(1579) {374807} [374827]: All rights reserved.
(1601) {381475} [381495]: All rights reserved.
(1607) {382683} [382703]: All rights reserved.
(1651) {390168} [390188]: All rights reserved.
(1659) {391289} [391309]: All rights reserved.
(1661) {391671} [391691]: All rights reserved.
(1683) {394799} [394819]: All rights reserved.
(1691) {395930} [395950]: All rights reserved.
(1695) {396686} [396706]: All rights reserved.
(1703) {398058} [398078]: All rights reserved.
(1735) {404553} [404573]: All rights reserved.
(1782) {413374} [413394]: All rights reserved.
(1803) {418692} [418712]: All rights reserved.
(1829) {422540} [422560]: All rights reserved.
(1873) {430602} [430622]: All rights reserved.
(1893) {433756} [433776]: All rights reserved.
(1918) {438792} [438812]: All rights reserved.
(2154) {502142} [502162]: All rights reserved.
(2160) {503102} [503122]: All rights reserved.
(2190) {507964} [507984]: All rights reserved.
(2199) {509236} [509256]: All rights reserved.
(2201) {509620} [509640]: All rights reserved.
(2212) {512011} [512031]: All rights reserved.
(2316) {527794} [527814]: All rights reserved.
(2343) {532110} [532130]: All rights reserved.
(2365) {536349} [536369]: All rights reserved.
(2369) {537104} [537124]: All rights reserved.
(2375) {538219} [538239]: All rights reserved.
(2490) {563043} [563063]: All rights reserved.
(2642) {648353} [648373]: All rights reserved.
(2645) {648856} [648876]: All rights reserved.
(2650) {649593} [649613]: All rights reserved.
(2655) {650324} [650344]: All rights reserved.
(2657) {650707} [650727]: All rights reserved.
(2685) {659914} [659934]: All rights reserved.
(2691) {662186} [662206]: All rights reserved.
(2698) {663353} [663373]: All rights reserved.
(2732) {670101} [670121]: All rights reserved.
(2751) {675216} [675236]: All rights reserved.
(2753) {675619} [675639]: All rights reserved.
(2755) {676002} [676022]: All rights reserved.
(2757) {676385} [676405]: All rights reserved.
(2760) {676964} [676984]: All rights reserved.
(2762) {677350} [677370]: All rights reserved.
(2765) {677935} [677955]: All rights reserved.
(2767) {678322} [678342]: All rights reserved.
(2769) {678710} [678730]: All rights reserved.
(2776) {679527} [679547]: All rights reserved.
(2778) {679918} [679938]: All rights reserved.
(2780) {680304} [680324]: All rights reserved.
(2782) {680687} [680707]: All rights reserved.
(2784) {681075} [681095]: All rights reserved.
(2786) {681470} [681490]: All rights reserved.
(2788) {681852} [681872]: All rights reserved.
(2796) {683007} [683027]: All rights reserved.
(2823) {686721} [686741]: All rights reserved.
(2831) {688122} [688142]: All rights reserved.
(2864) {694898} [694918]: All rights reserved.
(2881) {698011} [698031]: All rights reserved.
(2883) {698401} [698421]: All rights reserved.
(2890) {699180} [699200]: All rights reserved.
(2907) {702085} [702105]: All rights reserved.
(2939) {708995} [709015]: All rights reserved.
(3048) {734328} [734348]: All rights reserved.
(3057) {736096} [736116]: All rights reserved.
(3077) {737569} [737589]: All rights reserved.
(3079) {737945} [737965]: All rights reserved.
(3153) {761372} [761392]: All rights reserved.
(3161) {762498} [762518]: All rights reserved.
(3173) {764564} [764584]: All rights reserved.
(3179) {765756} [765776]: All rights reserved.
(3183) {766502} [766522]: All rights reserved.
(3264) {785933} [785953]: All rights reserved.
(3271) {787001} [787021]: All rights reserved.
(3290) {791167} [791187]: All rights reserved.
(3294) {791912} [791932]: All rights reserved.
(3300) {792931} [792951]: All rights reserved.
(3310) {794640} [794660]: All rights reserved.
(3320) {796134} [796154]: All rights reserved.
(3330) {798388} [798408]: All rights reserved.
(3338) {799783} [799803]: All rights reserved.
(3344) {800809} [800829]: All rights reserved.
(3354) {802364} [802384]: All rights reserved.
(3362) {803908} [803928]: All rights reserved.
(3368) {804956} [804976]: All rights reserved.
(3374) {805652} [805672]: All rights reserved.
(3380) {807317} [807337]: All rights reserved.
(3386) {808363} [808383]: All rights reserved.
(3404) {812374} [812394]: All rights reserved.
(3452) {824870} [824890]: All rights reserved.
(3455) {825439} [825459]: All rights reserved.
(3481) {831616} [831636]: All rights reserved.
(3529) {834728} [834748]: All rights reserved.
(3531) {835121} [835141]: All rights reserved.
(3536) {835804} [835824]: All rights reserved.
(3538) {836186} [836206]: All rights reserved.
(3540) {836571} [836591]: All rights reserved.
(3589) {839958} [839978]: All rights reserved.
(3591) {840345} [840365]: All rights reserved.
(3593) {840733} [840753]: All rights reserved.
(3595) {841117} [841137]: All rights reserved.
(3598) {841562} [841582]: All rights reserved.
(3601) {842007} [842027]: All rights reserved.
(3641) {843943} [843963]: All rights reserved.
(3643) {844331} [844351]: All rights reserved.
(3645) {844715} [844735]: All rights reserved.
(3652) {845491} [845511]: All rights reserved.
(3662) {846322} [846342]: All rights reserved.
(3674) {848732} [848752]: All rights reserved.
(3697) {855019} [855039]: All rights reserved.
(3725) {862534} [862554]: All rights reserved.
(3769) {876715} [876735]: All rights reserved.
(3785) {879198} [879218]: All rights reserved.
(3800) {883745} [883765]: All rights reserved.
(3815) {887888} [887908]: All rights reserved.
(3834) {890857} [890877]: All rights reserved.
(3867) {896135} [896155]: All rights reserved.
(3870) {896732} [896752]: All rights reserved.
(3885) {900941} [900961]: All rights reserved.
(3913) {909252} [909272]: All rights reserved.
(3930) {914860} [914880]: All rights reserved.
(4001) {932576} [932596]: All rights reserved.
(4019) {935185} [935205]: All rights reserved.
(4023) {936171} [936191]: All rights reserved.
(4031) {937353} [937373]: All rights reserved.
(4050) {940567} [940587]: All rights reserved.
(4066) {942702} [942722]: All rights reserved.
(4168) {968500} [968520]: All rights reserved.
(4182) {970101} [970121]: All rights reserved.
(4189) {971226} [971246]: All rights reserved.
(4198) {972677} [972697]: All rights reserved.
(4245) {984587} [984607]: All rights reserved.
(4301) {1000885} [1000905]: All rights reserved.
(4964) {1119758} [1119778]: All rights reserved.
(4992) {1123254} [1123274]: All rights reserved.
(4999) {1124088} [1124108]: All rights reserved.
(5024) {1127188} [1127208]: All rights reserved.
(5041) {1129673} [1129693]: All rights reserved.
(5080) {1139549} [1139569]: All rights reserved.
(5110) {1147377} [1147397]: All rights reserved.
(5274) {1187757} [1187777]: All rights reserved.
(5321) {1200436} [1200456]: All rights reserved.
(5373) {1218364} [1218384]: All rights reserved.
(5384) {1221496} [1221516]: All rights reserved.
(5420) {1231736} [1231756]: All rights reserved.
(5579) {1265859} [1265879]: All rights reserved.
(5688) {1291206} [1291226]: All rights reserved.
(5713) {1295685} [1295705]: All rights reserved.
(5715) {1296071} [1296091]: All rights reserved.
(5717) {1296550} [1296570]: All rights reserved.
(5719) {1296942} [1296962]: All rights reserved.
(5721) {1297321} [1297341]: All rights reserved.
(5745) {1303469} [1303489]: All rights reserved.
(5808) {1319894} [1319914]: All rights reserved.
(5839) {1329891} [1329911]: All rights reserved.
(5855) {1332198} [1332218]: All rights reserved.
(5864) {1333750} [1333770]: All rights reserved.
(5872) {1335018} [1335038]: All rights reserved.
(5890) {1337615} [1337635]: All rights reserved.
(5926) {1347629} [1347649]: All rights reserved.
(5961) {1357741} [1357761]: All rights reserved.
(5997) {1363737} [1363757]: All rights reserved.
(6006) {1365122} [1365142]: All rights reserved.
(6016) {1367713} [1367733]: All rights reserved.
(6043) {1377447} [1377467]: All rights reserved.
(6174) {1412172} [1412192]: All rights reserved.
(6182) {1413313} [1413333]: All rights reserved.
(6228) {1425902} [1425922]: All rights reserved.
(6232) {1426654} [1426674]: All rights reserved.
(6310) {1452953} [1452973]: All rights reserved.
(6317) {1454081} [1454101]: All rights reserved.
(6328) {1455723} [1455743]: All rights reserved.
(6349) {1458032} [1458052]: All rights reserved.
(6357) {1459227} [1459247]: All rights reserved.
(6365) {1460516} [1460536]: All rights reserved.
(6461) {1481552} [1481572]: All rights reserved.
(6474) {1482784} [1482804]: All rights reserved.
*****************************************************************
========================= CLASS #3 =============================
(2) {154} [533]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are sent as a result of a widget such as a menu item being armed.
(6) {914} [1404]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation Lars Vogel &lt;Lars.Vogel@vogella.com&gt; - Bug 502576 ------------ Classes which implement this interface provide a method that deals with the event that is generated when a widget, such as a menu item, is armed.
(12) {1962} [2277]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Adds a language listener.
(39) {6003} [6056]: ------------ Removes the specified language listener.
(64) {8954} [9462]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation Conrad Groth - Bug 23837 [FEEP] Button, do not respect foreground and background color on Windows ------------ Instances of this class represent a selectable user interface object that issues notification when pressed and released.
(122) {22657} [23071]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class represent entry points into Java which can be invoked from operating system level callback routines.
(164) {30791} [31154]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class provide a surface for drawing arbitrary graphics.
(186) {37205} [37592]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class provide an i-beam that is typically used as the insertion point for text.
(215) {47625} [48014]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class manage the operating system resources that implement SWT's RGB color model.
(281) {59292} [59681]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class allow the user to select a color from a predefined set of available colors.
(296) {63520} [64035]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation Lars Vogel &lt;Lars.Vogel@vogella.com&gt; - Bug 483540 ------------ Instances of this class are controls that allow the user to choose an item from a list of items, or optionally enter a new value by typing it into an editable text field.
(405) {94217} [94627]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ This class is a placeholder for utility methods commonly used on J2SE platforms but not supported on some J2ME profiles.
(426) {97331} [97705]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are controls which are capable of containing other controls.
(518) {118795} [119234]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation Stefan Xenos (Google) - bug 468854 - Add a requestLayout method to Control ------------ Control is the abstract superclass of all windowed user interface classes.
(790) {197395} [197821]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ This adapter class provides default implementations for the methods described by the &lt;code&gt;ControlListener&lt;/code&gt; interface.
(798) {198655} [199025]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are sent as a result of controls being moved or resized.
(802) {199414} [199836]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Classes which implement this interface provide methods that deal with the events that are generated by moving and resizing controls.
(809) {200651} [201032]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class provide an area for dynamically positioning the items they contain.
(850) {210831} [211271]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are selectable user interface objects that represent the dynamically positionable areas of a &lt;code&gt;CoolBar&lt;/code&gt;.
(891) {223838} [224239]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class manage operating system resources that specify the appearance of the on-screen pointer.
(924) {234728} [235140]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are selectable user interface objects that allow the user to enter and modify date or time values.
(970) {245328} [245754]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class provide the appearance and behavior of &lt;code&gt;Shells&lt;/code&gt;, but are not top level shells or dialogs.
(1028) {260102} [260464]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: Stefan Xenos (Google) - initial API and implementation ====== Device.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(1030) {260486} [260887]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ This class is the abstract superclass of all device objects, such as the Display device and the Printer device.
(1127) {275692} [276048]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ====== Dialog.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(1129) {276070} [276458]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ This class is the abstract superclass of the classes that represent the built in platform dialogs.
(1157) {283237} [283617]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class allow the user to navigate the file system and select a directory.
(1177) {287444} [287850]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are responsible for managing the connection between SWT and the underlying operating system.
(1425) {348184} [348545]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are sent as a result of widgets being disposed.
(1429) {348934} [349405]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation Lars Vogel &lt;Lars.Vogel@vogella.com&gt; - Bug 502576 ------------ Classes which implement this interface provide a method that deals with the event that is generated when a widget is disposed.
(1435) {349954} [350305]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ This class hold common constants and utility functions w.r.t.
(1468) {354307} [354348]: ------------ AutoScale ImageDataProvider.
(1471) {354459} [354812]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are sent as a result of a drag gesture.
(1475) {355219} [355696]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation Lars Vogel &lt;Lars.Vogel@vogella.com&gt; - Bug 502576 ------------ Classes which implement this interface provide methods that deal with the events that are generated when a drag gesture is detected.
(1481) {356274} [356738]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Implementers of &lt;code&gt;Drawable&lt;/code&gt; can have a graphics context (GC) created for them, and then they can be drawn on by sending messages to their associated GC.
(1502) {358831} [359215]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class provide a description of a particular event which occurred within SWT.
(1542) {365582} [365971]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class implement a simple look up mechanism that maps an event type to a listener.
(1544) {366032} [366117]: ====== ExpandAdapter.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(1546) {366139} [366564]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ This adapter class provides default implementations for the methods described by the &lt;code&gt;ExpandListener&lt;/code&gt; interface.
(1554) {367277} [367641]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class support the layout of selectable expand bar items.
(1576) {374030} [374433]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are sent as a result of &lt;code&gt;ExpandItem&lt;/code&gt;s being expanded or collapsed.
(1580) {374828} [375237]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class represent a selectable user interface object that represents a expandable item in a expand bar.
(1602) {381496} [382205]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Classes which implement this interface provide methods that deal with the expanding and collapsing of &lt;code&gt;ExpandItem&lt;/code&gt;s. &lt;p&gt; After creating an instance of a class that implements this interface it can be added to a &lt;code&gt;ExpandBar&lt;/code&gt; control using the &lt;code&gt;addExpandListener&lt;/code&gt; method and removed using the &lt;code&gt;removeExpandListener&lt;/code&gt; method.
(1608) {382704} [383093]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class allow the user to navigate the file system and select or enter a file name.
(1652) {390189} [390583]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Abstract factory class for loading/unloading images from files or streams in various image file formats.
(1660) {391310} [391670]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ====== FillLayout.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(1662) {391692} [392047]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ &lt;code&gt;FillLayout&lt;/code&gt; is the simplest layout class.
(1665) {392235} [392326]: &lt;code&gt;FillLayout&lt;/code&gt; does not wrap, but you can specify margins and spacing.
(1667) {392450} [392564]: &lt;code&gt;FillLayout&lt;/code&gt; can also be used when a &lt;code&gt;Composite&lt;/code&gt; only has one child.
(1684) {394820} [395244]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ This adapter class provides default implementations for the methods described by the &lt;code&gt;FocusListener&lt;/code&gt; interface.
(1692) {395951} [396322]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are sent as a result of widgets gaining and losing focus.
(1696) {396707} [397184]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation Lars Vogel &lt;Lars.Vogel@vogella.com&gt; - Bug 506538 ------------ Classes which implement this interface provide methods that deal with the events that are generated as controls gain and lose focus.
(1704) {398079} [398475]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class manage operating system resources that define how text looks when it is displayed.
(1736) {404574} [404920]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class describe operating system fonts.
(1783) {413395} [413780]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class allow the user to select a font from all available fonts in the system.
(1804) {418713} [419162]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class provide measurement information about fonts including ascent, descent, height, leading space between rows, and average character width.
(1830) {422561} [422962]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are used to define the edges of a control within a &lt;code&gt;FormLayout&lt;/code&gt;.
(1874) {430623} [431026]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are used to define the attachments of a control in a &lt;code&gt;FormLayout&lt;/code&gt;.
(1894) {433777} [434286]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class control the position and size of the children of a composite control by using &lt;code&gt;FormAttachments&lt;/code&gt; to optionally configure the left, top, right and bottom edges of each child.
(1919) {438813} [439216]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Class &lt;code&gt;GC&lt;/code&gt; is where all of the drawing capabilities that are supported by SWT are located.
(2155) {502163} [502555]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are descriptions of GCs in terms of unallocated platform-specific data fields.
(2161) {503123} [503513]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are sent in response to touch-based gestures that are triggered by the user.
(2191) {507985} [508513]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation Lars Vogel &lt;Lars.Vogel@vogella.com&gt; - Bug 502576 ------------ Classes which implement this interface provide methods that deal with the events that are generated as gestures are triggered by the user interacting with a touch pad or touch screen.
(2200) {509257} [509619]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ====== GlyphMetrics.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(2202) {509641} [509979]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class represent glyph metrics.
(2213) {512032} [512434]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ &lt;code&gt;GridData&lt;/code&gt; is the layout data object associated with &lt;code&gt;GridLayout&lt;/code&gt;.
(2217) {513547} [513718]: Every control in a &lt;code&gt;Composite&lt;/code&gt; that is managed by a &lt;code&gt;GridLayout&lt;/code&gt; must have a unique &lt;code&gt;GridData&lt;/code&gt; object.
(2218) {513719} [513885]: If the layout data for a control in a &lt;code&gt;GridLayout&lt;/code&gt; is null at layout time, a unique &lt;code&gt;GridData&lt;/code&gt; object is created for it.
(2317) {527815} [528208]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class lay out the control children of a &lt;code&gt;Composite&lt;/code&gt; in a grid.
(2344) {532131} [532493]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class provide an etched border with an optional title.
(2366) {536370} [536742]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are sent as a result of help being requested for a widget.
(2370) {537125} [537643]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation Lars Vogel &lt;Lars.Vogel@vogella.com&gt; - Bug 502576 ------------ Classes which implement this interface provide a method that deals with the event that is generated when help is requested for a control, typically when the user presses F1.
(2373) {537964} [538082]: &lt;/p&gt; @see HelpEvent ------------ Sent when help is requested for a control, typically when the user presses F1.
(2376) {538240} [538625]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are graphics which have been prepared for display on a specific device.
(2489) {562961} [563042]: ====== ImageData.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(2491) {563064} [563424]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are device-independent descriptions of images.
(2643) {648374} [648770]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Internal class that separates ImageData from ImageLoader to allow removal of ImageLoader from the toolkit.
(2646) {648877} [649316]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Interface to provide a callback mechanism to get information about images when the application is moved from a low DPI monitor to a high DPI monitor.
(2651) {649614} [650053]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Interface to provide a callback mechanism to get information about images when the application is moved from a low DPI monitor to a high DPI monitor.
(2656) {650345} [650706]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ====== ImageLoader.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(2658) {650728} [651109]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are used to load images from, and save images to, a file or stream.
(2686) {659935} [660311]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are sent as a result of the incremental loading of image data.
(2692) {662207} [662605]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Classes which implement this interface provide methods that deal with the incremental loading of image data.
(2693) {662606} [662865]: &lt;p&gt; After creating an instance of a class that implements this interface it can be added to an image loader using the &lt;code&gt;addImageLoaderListener&lt;/code&gt; method and removed using the &lt;code&gt;removeImageLoaderListener&lt;/code&gt; method.
(2699) {663374} [663719]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class represent input method editors.
(2733) {670122} [670529]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ This class is the abstract superclass of all non-windowed user interface objects that occur within specific controls.
(2752) {675237} [675618]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ====== JPEGArithmeticConditioningTable.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(2754) {675640} [676001]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ====== JPEGComment.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(2756) {676023} [676384]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ====== JPEGDecoder.java ====== Copyright (c) 2000, 2014 IBM Corporation and others.
(2758) {676406} [676811]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html This source file is based in part on the work of the Independent JPEG Group (IJG) and is made available under the terms contained in the about_files/IJG_README file accompanying this program.
(2759) {676813} [676963]: Contributors: IBM Corporation - initial API and implementation ====== JPEGEndOfImage.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(2761) {676985} [677349]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ====== JPEGFileFormat.java ====== Copyright (c) 2000, 2014 IBM Corporation and others.
(2763) {677371} [677776]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html This source file is based in part on the work of the Independent JPEG Group (IJG) and is made available under the terms contained in the about_files/IJG_README file accompanying this program.
(2764) {677778} [677934]: Contributors: IBM Corporation - initial API and implementation ====== JPEGFixedSizeSegment.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(2766) {677956} [678321]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ====== JPEGFrameHeader.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(2768) {678343} [678709]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ====== JPEGHuffmanTable.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(2770) {678731} [679175]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ JPEGHuffmanTable class actually represents two types of object: 1) A DHT (Define Huffman Tables) segment, which may represent as many as 4 Huffman tables.
(2777) {679548} [679917]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ====== JPEGRestartInterval.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(2779) {679939} [680303]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ====== JPEGScanHeader.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(2781) {680325} [680686]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ====== JPEGSegment.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(2783) {680708} [681074]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ====== JPEGStartOfImage.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(2785) {681096} [681469]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ====== JPEGVariableSizeSegment.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(2787) {681491} [681851]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ====== KeyAdapter.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(2789) {681873} [682295]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ This adapter class provides default implementations for the methods described by the &lt;code&gt;KeyListener&lt;/code&gt; interface.
(2797) {683028} [683414]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are sent as a result of keys being pressed and released on the keyboard.
(2824) {686742} [687230]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation Lars Vogel &lt;Lars.Vogel@vogella.com&gt; - Bug 507185 ------------ Classes which implement this interface provide methods that deal with the events that are generated as keys are pressed on the system keyboard.
(2832) {688143} [688538]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class represent a non-selectable user interface object that displays a string or image.
(2865) {694919} [695287]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ A layout controls the position and size of the children of a composite widget.
(2882) {698032} [698400]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ====== LEDataOutputStream.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(2884) {698422} [698828]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Write the specified number of bytes of the given byte array, starting at the specified offset, to the output stream.
(2885) {698829} [698884]: ------------ Write the given byte to the output stream.
(2886) {698829} [698884]: ------------ Write the given byte to the output stream.
(2887) {698941} [699017]: ------------ Write the four bytes of the given integer to the output stream.
(2888) {699018} [699091]: ------------ Write the two bytes of the given short to the output stream.
(2891) {699201} [699593]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ &lt;code&gt;LineAttributes&lt;/code&gt; defines a set of line attributes that can be modified in a GC.
(2908) {702106} [702575]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation Conrad Groth - Bug 401015 - [CSS] Add support for styling hyperlinks in Links ------------ Instances of this class represent a selectable user interface object that displays a text with links.
(2940) {709016} [709457]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class represent a selectable user interface object that displays a list of strings and issues notification when a string is selected.
(3049) {734349} [734802]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Implementers of &lt;code&gt;Listener&lt;/code&gt; provide a simple &lt;code&gt;handleEvent()&lt;/code&gt; method that is used internally by SWT to dispatch events.
(3058) {736117} [736424]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Decode the input.
(3060) {736531} [736561]: ------------ Encode the image.
(3067) {737038} [737085]: ------------ Output aCode to the output stream.
(3078) {737590} [737944]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ====== Menu.java ====== Copyright (c) 2000, 2014 IBM Corporation and others.
(3080) {737966} [738331]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are user interface objects that contain menu items.
(3090) {740451} [740570]: &lt;p&gt; After constructing a menu, it can be set into its parent using &lt;code&gt;parent.setMenu(menu)&lt;/code&gt;.
(3096) {741847} [742042]: &lt;/p&gt;&lt;p&gt; After constructing a menu or menuBar, it can be set into its parent using &lt;code&gt;parent.setMenu(menu)&lt;/code&gt; or &lt;code&gt;parent.setMenuBar(menuBar)&lt;/code&gt;.
(3098) {742957} [743094]: &lt;p&gt; After constructing a drop-down menu, it can be set into its parentMenu using &lt;code&gt;parentMenu.setMenu(menu)&lt;/code&gt;.
(3100) {743864} [744001]: &lt;p&gt; After constructing a drop-down menu, it can be set into its parentItem using &lt;code&gt;parentItem.setMenu(menu)&lt;/code&gt;.
(3154) {761393} [761816]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ This adapter class provides default implementations for the methods described by the &lt;code&gt;MenuListener&lt;/code&gt; interface.
(3162) {762519} [762921]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are sent whenever the platform- specific trigger for showing a context menu is detected.
(3174) {764585} [765104]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation Lars Vogel &lt;Lars.Vogel@vogella.com&gt; - Bug 502576 ------------ Classes which implement this interface provide methods that deal with the events that are generated when the platform-specific trigger for showing a context menu is detected.
(3180) {765777} [766144]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are sent as a result of menus being shown and hidden.
(3184) {766523} [766933]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class represent a selectable user interface object that issues notification when pressed and released.
(3253) {783952} [784025]: &lt;/p&gt; &lt;p&gt; Accelerator text is indicated by the '\t' character.
(3265) {785954} [786346]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Classes which implement this interface provide methods that deal with the hiding and showing of menus.
(3266) {786347} [786583]: &lt;p&gt; After creating an instance of a class that implements this interface it can be added to a menu using the &lt;code&gt;addMenuListener&lt;/code&gt; method and removed using the &lt;code&gt;removeMenuListener&lt;/code&gt; method.
(3272) {787022} [787372]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are used to inform or warn the user.
(3291) {791188} [791546]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are sent as a result of text being modified.
(3295) {791933} [792402]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation Lars Vogel &lt;Lars.Vogel@vogella.com&gt; - Bug 502576 ------------ Classes which implement this interface provide a method that deals with the events that are generated when text is modified.
(3301) {792952} [793295]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are descriptions of monitors.
(3311) {794661} [795085]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ This adapter class provides default implementations for the methods described by the &lt;code&gt;MouseListener&lt;/code&gt; interface.
(3321) {796155} [796515]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are sent whenever mouse related actions occur.
(3331) {798409} [798828]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Classes which implement this interface provide methods that deal with the events that are generated as mouse buttons are pressed.
(3339) {799804} [800278]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation Lars Vogel &lt;Lars.Vogel@vogella.com&gt; - Bug 502576 ------------ Classes which implement this interface provide a method that deals with the events that are generated as the mouse pointer moves.
(3345) {800830} [801259]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ This adapter class provides default implementations for the methods described by the &lt;code&gt;MouseTrackListener&lt;/code&gt; interface.
(3355) {802385} [802829]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Classes which implement this interface provide methods that deal with the events that are generated as the mouse pointer passes (or hovers) over controls.
(3363) {803929} [804350]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Classes which implement this interface provide a method that deals with the event that is generated as the mouse wheel is scrolled.
(3369) {804977} [805361]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Answer a byte array containing the BMP representation of the given device independent palette.
(3375) {805673} [806059]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are sent as a result of visible areas of controls requiring re-painting.
(3381) {807338} [807820]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation Lars Vogel &lt;Lars.Vogel@vogella.com&gt; - Bug 502576 ------------ Classes which implement this interface provide methods that deal with the events that are generated when the control needs to be painted.
(3387) {808384} [808794]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation Lars Vogel &lt;Lars.Vogel@vogella.com&gt; - Bug 483460 ------------ Instances of this class describe the color data used by an image.
(3405) {812395} [812771]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class represent paths through the two-dimensional coordinate system.
(3453) {824891} [825239]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class describe device-independent paths.
(3456) {825460} [825814]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class represent patterns to use while drawing.
(3482) {831637} [831980]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Construct a PngChunk using the reference bytes given.
(3483) {831981} [832055]: ------------ Construct a PngChunk with the specified number of data bytes.
(3530) {834749} [835120]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ====== PngDecodingDataStream.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(3532) {835142} [835543]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ This method should be called when the image decoder thinks that all of the compressed image data has been read.
(3537) {835825} [836185]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ====== PngEncoder.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(3539) {836207} [836570]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ====== PNGFileFormat.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(3541) {836592} [836907]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Skip over signature data.
(3566) {838619} [838634]: ------------ 1.
(3590) {839979} [840344]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ====== PngHuffmanTable.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(3592) {840366} [840732]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ====== PngHuffmanTables.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(3594) {840754} [841116]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ====== PngIdatChunk.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(3596) {841138} [841475]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Answer whether the chunk is a valid IDAT chunk.
(3599) {841583} [841920]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Answer whether the chunk is a valid IEND chunk.
(3602) {842028} [842371]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Construct a PNGChunk using the reference bytes given.
(3637) {843630} [843690]: ------------ Answer whether the chunk is a valid IHDR chunk.
(3642) {843964} [844330]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ====== PngLzBlockReader.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(3644) {844352} [844714]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ====== PngPlteChunk.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(3646) {844736} [845067]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Get the number of colors in this palette.
(3650) {845344} [845404]: ------------ Answer whether the chunk is a valid PLTE chunk.
(3653) {845512} [845849]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Answer whether the chunk is a valid tRNS chunk.
(3663) {846343} [846705]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class represent places on the (x, y) coordinate plane.
(3675) {848753} [849182]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of the receiver represent an unselectable user interface object that is used to display progress, typically in the form of a bar.
(3698) {855040} [855413]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class represent rectangular areas in an (x, y) coordinate system.
(3726) {862555} [862978]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class represent areas of an x-y coordinate system that are aggregates of the areas covered by a number of polygons.
(3770) {876736} [877097]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ This class is the abstract superclass of all graphics resource objects.
(3786) {879219} [879627]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are descriptions of colors in terms of the primary additive color model (red, green and blue).
(3801) {883766} [884181]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are descriptions of colors in terms of the primary additive color model (red, green, blue and alpha).
(3816) {887909} [888381]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Each control controlled by a &lt;code&gt;RowLayout&lt;/code&gt; can have its initial width and height specified by setting a &lt;code&gt;RowData&lt;/code&gt; object into the control.
(3835) {890878} [891395]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class determine the size and position of the children of a &lt;code&gt;Composite&lt;/code&gt; by placing them either in horizontal rows or vertical columns within the parent &lt;code&gt;Composite&lt;/code&gt;.
(3839) {891720} [891945]: In addition, the height and width of each control in a &lt;code&gt;RowLayout&lt;/code&gt; can be specified by setting a &lt;code&gt;RowData&lt;/code&gt; object into the control using &lt;code&gt;setLayoutData ()&lt;/code&gt;.
(3868) {896156} [896653]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are used to ensure that an application cannot interfere with the locking mechanism used to implement asynchronous and synchronous communication between widgets and background threads.
(3871) {896753} [897205]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of the receiver represent a selectable user interface object that allows the user to drag a rubber banded outline of the sash within the parent control.
(3886) {900962} [901373]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of the receiver represent a selectable user interface object that present a range of continuous numeric values.
(3914) {909273} [909672]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ This class is the abstract superclass of all classes which represent controls that have standard scroll bars.
(3931) {914881} [915284]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are selectable user interface objects that represent a range of positive, numeric values.
(3953) {920133} [920167]: &lt;code&gt;SWT.HOME&lt;/code&gt;.
(3954) {920168} [920201]: &lt;code&gt;SWT.END&lt;/code&gt;.
(3955) {920202} [920242]: &lt;code&gt;SWT.ARROW_DOWN&lt;/code&gt;.
(3956) {920243} [920281]: &lt;code&gt;SWT.ARROW_UP&lt;/code&gt;.
(3957) {920282} [920321]: &lt;code&gt;SWT.PAGE_DOWN&lt;/code&gt;.
(3958) {920322} [920359]: &lt;code&gt;SWT.PAGE_UP&lt;/code&gt;.
(4002) {932597} [932964]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ This event is sent to SegmentListeners when a text content is to be modified.
(4020) {935206} [935628]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation Lars Vogel &lt;Lars.Vogel@vogella.com&gt; - Bug 502576 ------------ This listener interface may be implemented in order to receive SegmentEvents.
(4024) {936192} [936620]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ This adapter class provides default implementations for the methods described by the &lt;code&gt;SelectionListener&lt;/code&gt; interface.
(4032) {937374} [937735]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are sent as a result of widgets being selected.
(4051) {940588} [941069]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation Lars Vogel &lt;Lars.Vogel@vogella.com&gt; - Bug 441116 ------------ Classes which implement this interface provide methods that deal with the events that are generated when selection occurs in a control.
(4067) {942723} [943111]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class represent the "windows" which the desktop or "window manager" is managing.
(4169) {968521} [968945]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ This adapter class provides default implementations for the methods described by the &lt;code&gt;ShellListener&lt;/code&gt; interface.
(4183) {970122} [970497]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are sent as a result of operations being performed on shells.
(4190) {971247} [971899]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Classes which implement this interface provide methods that deal with changes in state of &lt;code&gt;Shell&lt;/code&gt;s. &lt;p&gt; After creating an instance of a class that implements this interface it can be added to a shell using the &lt;code&gt;addShellListener&lt;/code&gt; method and removed using the &lt;code&gt;removeShellListener&lt;/code&gt; method.
(4199) {972698} [973101]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are selectable user interface objects that represent a range of positive, numeric values.
(4215) {977185} [977219]: &lt;code&gt;SWT.HOME&lt;/code&gt;.
(4216) {977220} [977253]: &lt;code&gt;SWT.END&lt;/code&gt;.
(4217) {977254} [977294]: &lt;code&gt;SWT.ARROW_DOWN&lt;/code&gt;.
(4218) {977295} [977333]: &lt;code&gt;SWT.ARROW_UP&lt;/code&gt;.
(4219) {977334} [977373]: &lt;code&gt;SWT.PAGE_DOWN&lt;/code&gt;.
(4220) {977374} [977411]: &lt;code&gt;SWT.PAGE_UP&lt;/code&gt;.
(4246) {984608} [985015]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are selectable user interface objects that allow the user to enter and modify numeric values.
(4302) {1000906} [1001385]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation Lars Vogel &lt;Lars.Vogel@vogella.com&gt; - Bug 455263 ------------ This class provides access to a small number of SWT system-wide methods, and in addition defines the public constants provided by SWT.
(4965) {1119779} [1120147]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ This error is thrown whenever an unrecoverable error occurs internally in SWT.
(4993) {1123275} [1123651]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ This interface is the cross-platform version of the java.util.EventListener interface.
(5000) {1124109} [1124486]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ This runtime exception is thrown whenever a recoverable error occurs internally in SWT.
(5025) {1127209} [1127568]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class provide synchronization support for displays.
(5042) {1129694} [1130055]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class implement the notebook user interface metaphor.
(5081) {1139570} [1139979]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class represent a selectable user interface object corresponding to a tab for a page in a tab folder.
(5111) {1147398} [1147904]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation Roland Oldenburg &lt;r.oldenburg@hsp-software.de&gt; - Bug 292199 ------------ Instances of this class implement a selectable user interface object that displays a list of images and strings and issues notification when selected.
(5275) {1187778} [1188129]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class represent a column in a table widget.
(5322) {1200457} [1200851]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class represent a selectable user interface object that represents an item in a table.
(5374) {1218385} [1218783]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation Tasktop Technologies - initial API and implementation ------------ Instances of this class represent the system task bar.
(5385) {1221517} [1221907]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation Tasktop Technologies - initial API and implementation ------------ Instances of this class represent a task item.
(5421) {1231757} [1232154]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are selectable user interface objects that allow the user to enter and modify text.
(5580) {1265880} [1266254]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ &lt;code&gt;TextLayout&lt;/code&gt; is a graphic object that represents styled text.
(5689) {1291227} [1291615]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ &lt;code&gt;TextStyle&lt;/code&gt; defines a set of styles that can be applied to a range of text.
(5714) {1295706} [1296070]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ====== TIFFFileFormat.java ====== Copyright (c) 2000, 2009 IBM Corporation and others.
(5716) {1296092} [1296549]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Baseline TIFF decoder revision 6.0 Extension T4-encoding CCITT T.4 1D ====== TIFFModifiedHuffmanCodec.java ====== Copyright (c) 2000, 2005 IBM Corporation and others.
(5718) {1296571} [1296941]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ====== TIFFRandomFileAccess.java ====== Copyright (c) 2000, 2005 IBM Corporation and others.
(5720) {1296963} [1297320]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ====== ToolBar.java ====== Copyright (c) 2000, 2014 IBM Corporation and others.
(5722) {1297342} [1297704]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class support the layout of selectable tool bar items.
(5746) {1303490} [1303888]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class represent a selectable user interface object that represents a button in a tool bar.
(5809) {1319915} [1320294]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class represent popup windows that are used to inform or warn the user.
(5840) {1329912} [1330294]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are created in response to a touch-based input device being touched.
(5856) {1332219} [1332598]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are sent in response to a touch-based input source being touched.
(5865) {1333771} [1334264]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation Lars Vogel &lt;Lars.Vogel@vogella.com&gt; - Bug 502576 ------------ Classes which implement this interface provide methods that deal with the events that are generated as touches occur on a touch-aware input surface.
(5873) {1335039} [1335439]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class represent sources of touch input that generate &lt;code&gt;Touch&lt;/code&gt; objects.
(5891) {1337636} [1338086]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class implement rubber banding rectangles that are drawn onto a parent &lt;code&gt;Composite&lt;/code&gt; or &lt;code&gt;Display&lt;/code&gt;.
(5927) {1347650} [1348061]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class represent transformation matrices for points expressed as (x, y) pairs of floating point numbers.
(5962) {1357762} [1358125]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are sent as a result of widget traversal actions.
(5969) {1359177} [1359256]: &lt;/p&gt;&lt;p&gt; How can the traversal event be used to implement traversal?
(5979) {1360497} [1360582]: &lt;/p&gt;&lt;p&gt; How can the traversal event be used to override system traversal?
(5998) {1363758} [1364247]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation Lars Vogel &lt;Lars.Vogel@vogella.com&gt; - Bug 502576 ------------ Classes which implement this interface provide a method that deals with the events that are generated when a traverse event occurs in a control.
(6001) {1364580} [1364671]: &lt;/p&gt; @see TraverseEvent ------------ Sent when a traverse event occurs in a control.
(6007) {1365143} [1365550]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class represent the system tray that is part of the task bar status area on some operating systems.
(6017) {1367734} [1368126]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class represent icons that can be placed on the system tray or task bar status area.
(6044) {1377468} [1377926]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class provide a selectable user interface object that displays a hierarchy of items and issues notification when an item in the hierarchy is selected.
(6175) {1412193} [1412616]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ This adapter class provides default implementations for the methods described by the &lt;code&gt;TreeListener&lt;/code&gt; interface.
(6183) {1413334} [1413684]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class represent a column in a tree widget.
(6229) {1425923} [1426296]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are sent as a result of trees being expanded and collapsed.
(6233) {1426675} [1427093]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class represent a selectable user interface object that represents a hierarchy of tree items in a tree widget.
(6311) {1452974} [1453380]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Classes which implement this interface provide methods that deal with the expanding and collapsing of tree branches.
(6312) {1453381} [1453625]: &lt;p&gt; After creating an instance of a class that implements this interface it can be added to a tree control using the &lt;code&gt;addTreeListener&lt;/code&gt; method and removed using the &lt;code&gt;removeTreeListener&lt;/code&gt; method.
(6318) {1454102} [1454460]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ This is the super class for all typed event classes provided by SWT.
(6329) {1455744} [1456211]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are &lt;em&gt;internal SWT implementation&lt;/em&gt; objects which provide a mapping between the typed and untyped listener mechanisms that SWT supports.
(6350) {1458053} [1458586]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Instances of this class are sent as a result of widgets handling keyboard events @see VerifyListener @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ the range of text being modified.
(6358) {1459248} [1459729]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation Lars Vogel &lt;Lars.Vogel@vogella.com&gt; - Bug 502576 ------------ Classes which implement this interface provide a method that deals with the events that are generated when text is about to be modified.
(6366) {1460537} [1460895]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ This class is the abstract superclass of all user interface objects.
(6462) {1481573} [1481982]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Compress numBytes bytes of image data from src, storing in dest (starting at 0), using the technique specified by comp.
(6465) {1482083} [1482190]: ------------ Answer a byte array containing the BMP representation of the given device independent palette.
(6475) {1482805} [1483213]: This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation ------------ Answer the size in bytes of the file representation of the given icon ------------ Load one icon from the byte stream.
*****************************************************************
========================= CLASS #4 =============================
(3) {535} [752]: @see ArmListener @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ Constructs a new instance of this class based on the information in the given untyped event.
(69) {10141} [10503]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/snippets/#button"&gt;Button snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: ControlExample&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @noextend This class is not intended to be subclassed by clients.
(167) {31599} [31996]: &lt;/p&gt; @see Composite @see &lt;a href="http://www.eclipse.org/swt/snippets/#canvas"&gt;Canvas snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: ControlExample&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ Prevents uninitialized instances from being created outside the package.
(188) {37855} [38227]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/snippets/#caret"&gt;Caret snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: ControlExample, Canvas tab&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @noextend This class is not intended to be subclassed by clients.
(218) {48428} [48974]: &lt;/p&gt; @see RGB @see RGBA @see Device#getSystemColor @see &lt;a href="http://www.eclipse.org/swt/snippets/#color"&gt;Color and RGB snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: PaintExample&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ the handle to the OS color resource (Warning: This field is platform dependent) &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This field is &lt;em&gt;not&lt;/em&gt; part of the SWT public API.
(221) {49151} [49232]: &lt;/p&gt; * @noreference This field is not intended to be referenced by clients.
(270) {57928} [58066]: &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This method is &lt;em&gt;not&lt;/em&gt; part of the public API for &lt;code&gt;Color&lt;/code&gt;.
(275) {58568} [58706]: &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This method is &lt;em&gt;not&lt;/em&gt; part of the public API for &lt;code&gt;Color&lt;/code&gt;.
(283) {59944} [60227]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: ControlExample, Dialog tab&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @noextend This class is not intended to be subclassed by clients.
(304) {65366} [65736]: &lt;/p&gt; @see List @see &lt;a href="http://www.eclipse.org/swt/snippets/#combo"&gt;Combo snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: ControlExample&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @noextend This class is not intended to be subclassed by clients.
(328) {70750} [70849]: &lt;/p&gt; &lt;p&gt; &lt;b&gt;Warning&lt;/b&gt;: This API is currently only implemented on Windows.
(348) {75806} [75839]: &lt;p&gt; Indexing is zero based.
(362) {80027} [80060]: &lt;p&gt; Indexing is zero based.
(407) {94716} [94811]: &lt;/p&gt; &lt;p&gt; IMPORTANT: some of the methods have been modified from their J2SE parents.
(432) {98944} [99245]: &lt;/p&gt; @see Canvas @see &lt;a href="http://www.eclipse.org/swt/snippets/#composite"&gt;Composite snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ Prevents uninitialized instances from being created outside the package.
(459) {107144} [107233]: &lt;/p&gt; &lt;p&gt; This is equivalent to calling &lt;code&gt;layout(true)&lt;/code&gt;.
(521) {119904} [120268]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/snippets/#control"&gt;Control snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: ControlExample&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @noextend This class is not intended to be subclassed by clients.
(522) {120269} [120462]: ------------ the handle to the OS resource (Warning: This field is platform dependent) &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This field is &lt;em&gt;not&lt;/em&gt; part of the SWT public API.
(525) {120639} [120720]: &lt;/p&gt; * @noreference This field is not intended to be referenced by clients.
(536) {124852} [124961]: &lt;/p&gt; &lt;p&gt; &lt;b&gt;Warning&lt;/b&gt;: This API is currently only implemented on Windows and Cocoa.
(554) {132049} [132158]: &lt;/p&gt; &lt;p&gt; &lt;b&gt;Warning&lt;/b&gt;: This API is currently only implemented on Windows and Cocoa.
(630) {150509} [150649]: &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This method is &lt;em&gt;not&lt;/em&gt; part of the public API for &lt;code&gt;Control&lt;/code&gt;.
(635) {151067} [151207]: &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This method is &lt;em&gt;not&lt;/em&gt; part of the public API for &lt;code&gt;Control&lt;/code&gt;.
(752) {186142} [186241]: &lt;/p&gt; &lt;p&gt; &lt;b&gt;Warning&lt;/b&gt;: This API is currently only implemented on Windows.
(792) {197984} [198283]: &lt;/p&gt; @see ControlListener @see ControlEvent @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ Sent when the location (x, y) of a control changes relative to its parent (or relative to the display, for &lt;code&gt;Shell&lt;/code&gt;s).
(799) {199027} [199248]: @see ControlListener @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ Constructs a new instance of this class based on the information in the given untyped event.
(805) {200159} [200362]: &lt;/p&gt; @see ControlAdapter @see ControlEvent ------------ Sent when the location (x, y) of a control changes relative to its parent (or relative to the display, for &lt;code&gt;Shell&lt;/code&gt;s).
(814) {201765} [202129]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/snippets/#coolbar"&gt;CoolBar snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: ControlExample&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @noextend This class is not intended to be subclassed by clients.
(852) {211540} [211712]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @noextend This class is not intended to be subclassed by clients.
(895) {225141} [225539]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/snippets/#cursor"&gt;Cursor snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ the handle to the OS cursor resource (Warning: This field is platform dependent) &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This field is &lt;em&gt;not&lt;/em&gt; part of the SWT public API.
(898) {225716} [225797]: &lt;/p&gt; * @noreference This field is not intended to be referenced by clients.
(918) {234060} [234199]: &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This method is &lt;em&gt;not&lt;/em&gt; part of the public API for &lt;code&gt;Cursor&lt;/code&gt;.
(929) {235896} [236274]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/snippets/#datetime"&gt;DateTime snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: ControlExample&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @since 3.3 @noextend This class is not intended to be subclassed by clients.
(973) {245993} [246058]: Instead, the class &lt;code&gt;Shell&lt;/code&gt; should be used.
(981) {248554} [248784]: &lt;/p&gt; @see #getMinimized @see #getMaximized @see Shell @see SWT @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @noextend This class is not intended to be subclassed by clients.
(982) {248785} [248870]: ------------ Prevents uninitialized instances from being created outside the package.
(1032) {261015} [261281]: @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ Palette (Warning: This field is platform dependent) &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This field is &lt;em&gt;not&lt;/em&gt; part of the SWT public API.
(1035) {261458} [261539]: &lt;/p&gt; * @noreference This field is not intended to be referenced by clients.
(1053) {264017} [264086]: &lt;p&gt; This method is called before &lt;code&gt;init&lt;/code&gt;.
(1057) {264484} [264555]: &lt;p&gt; This method is called after &lt;code&gt;release&lt;/code&gt;.
(1096) {271733} [271803]: &lt;p&gt; This method is called after &lt;code&gt;create&lt;/code&gt;.
(1099) {272036} [272175]: &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This method is &lt;em&gt;not&lt;/em&gt; part of the public API for &lt;code&gt;Device&lt;/code&gt;.
(1104) {272593} [272732]: &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This method is &lt;em&gt;not&lt;/em&gt; part of the public API for &lt;code&gt;Device&lt;/code&gt;.
(1118) {274541} [274614]: &lt;/p&gt; This method is called before &lt;code&gt;destroy&lt;/code&gt;.
(1140) {278516} [278808]: &lt;/p&gt; @see Shell @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: ControlExample&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ Constructs a new instance of this class given only its parent.
(1146) {280284} [280372]: &lt;p&gt; IMPORTANT: See the comment in &lt;code&gt;Widget.checkSubclass()&lt;/code&gt;.
(1159) {283880} [284272]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/snippets/#directorydialog"&gt;DirectoryDialog snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: ControlExample, Dialog tab&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @noextend This class is not intended to be subclassed by clients.
(1160) {284273} [284348]: ------------ Constructs a new instance of this class given only its parent.
(1195) {290778} [291138]: &lt;/p&gt; @see #syncExec @see #asyncExec @see #wake @see #readAndDispatch @see #sleep @see Device#dispose @see &lt;a href="http://www.eclipse.org/swt/snippets/#display"&gt;Display snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @noextend This class is not intended to be subclassed by clients.
(1196) {291139} [291337]: ------------ the handle to the OS message queue (Warning: This field is platform dependent) &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This field is &lt;em&gt;not&lt;/em&gt; part of the SWT public API.
(1199) {291514} [291595]: &lt;/p&gt; * @noreference This field is not intended to be referenced by clients.
(1234) {305424} [305512]: &lt;p&gt; IMPORTANT: See the comment in &lt;code&gt;Widget.checkSubclass()&lt;/code&gt;.
(1238) {306202} [306271]: &lt;p&gt; This method is called before &lt;code&gt;init&lt;/code&gt;.
(1241) {306534} [306605]: &lt;p&gt; This method is called after &lt;code&gt;release&lt;/code&gt;.
(1247) {307616} [307711]: &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This method should not be called from application code.
(1251) {308444} [308539]: &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This method should not be called from application code.
(1314) {325184} [325324]: &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This method is &lt;em&gt;not&lt;/em&gt; part of the public API for &lt;code&gt;Display&lt;/code&gt;.
(1319) {325993} [326063]: &lt;p&gt; This method is called after &lt;code&gt;create&lt;/code&gt;.
(1321) {326166} [326306]: &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This method is &lt;em&gt;not&lt;/em&gt; part of the public API for &lt;code&gt;Display&lt;/code&gt;.
(1364) {336810} [336883]: &lt;/p&gt; This method is called before &lt;code&gt;destroy&lt;/code&gt;.
(1388) {342144} [342371]: @see &lt;a href="http://msdn.microsoft.com/en-us/library/windows/desktop/dd378459%28v=vs.85%29.aspx#HOW"&gt;AppUserModelID (Windows)&lt;/a&gt; &lt;/p&gt;&lt;p&gt; Specifying &lt;code&gt;null&lt;/code&gt; for the name clears it.
(1426) {348547} [348768]: @see DisposeListener @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ Constructs a new instance of this class based on the information in the given untyped event.
(1432) {349721} [349797]: &lt;/p&gt; @see DisposeEvent ------------ Sent when the widget is disposed.
(1439) {350625} [350721]: &lt;/p&gt; @since 3.105 ------------ System property that controls the autoScale functionality.
(1472) {354814} [355050]: @see DragDetectListener @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @since 3.3 ------------ Constructs a new instance of this class based on the information in the given untyped event.
(1478) {356018} [356113]: &lt;/p&gt; @see DragDetectEvent @since 3.3 ------------ Sent when a drag gesture is detected.
(1483) {356836} [356946]: &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This interface is &lt;em&gt;not&lt;/em&gt; part of the SWT public API.
(1487) {357212} [357353]: &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This method is &lt;em&gt;not&lt;/em&gt; part of the public API for &lt;code&gt;Drawable&lt;/code&gt;.
(1492) {357771} [357912]: &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This method is &lt;em&gt;not&lt;/em&gt; part of the public API for &lt;code&gt;Drawable&lt;/code&gt;.
(1548) {366726} [366926]: &lt;/p&gt; @see ExpandListener @see ExpandEvent @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @since 3.2 ------------ Sent when an item is collapsed.
(1557) {368072} [368524]: &lt;/p&gt; @see ExpandItem @see ExpandEvent @see ExpandListener @see ExpandAdapter @see &lt;a href="http://www.eclipse.org/swt/snippets/#expandbar"&gt;ExpandBar snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: ControlExample&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @since 3.2 @noextend This class is not intended to be subclassed by clients.
(1577) {374435} [374667]: @see ExpandListener @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @since 3.2 ------------ Constructs a new instance of this class based on the information in the given untyped event.
(1582) {375520} [375719]: &lt;/p&gt; @see ExpandBar @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @since 3.2 @noextend This class is not intended to be subclassed by clients.
(1604) {382326} [382430]: &lt;/p&gt; @see ExpandAdapter @see ExpandEvent @since 3.2 ------------ Sent when an item is collapsed.
(1611) {383448} [383830]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/snippets/#filedialog"&gt;FileDialog snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: ControlExample, Dialog tab&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @noextend This class is not intended to be subclassed by clients.
(1612) {383831} [383906]: ------------ Constructs a new instance of this class given only its parent.
(1671) {393132} [393543]: &lt;pre&gt; FillLayout fillLayout = new FillLayout(); fillLayout.type = SWT.VERTICAL; shell.setLayout(fillLayout); &lt;/pre&gt; &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: LayoutExample&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ type specifies how controls will be positioned within the layout.
(1680) {394452} [394520]: ------------ Constructs a new instance of this class given the type.
(1686) {395405} [395591]: &lt;/p&gt; @see FocusListener @see FocusEvent @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ Sent when a control gets focus.
(1693) {396324} [396543]: @see FocusListener @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ Constructs a new instance of this class based on the information in the given untyped event.
(1699) {397504} [397594]: &lt;/p&gt; @see FocusAdapter @see FocusEvent ------------ Sent when a control gets focus.
(1707) {398856} [399377]: &lt;/p&gt; @see FontData @see &lt;a href="http://www.eclipse.org/swt/snippets/#font"&gt;Font snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Examples: GraphicsExample, PaintExample&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ the handle to the OS font resource (Warning: This field is platform dependent) &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This field is &lt;em&gt;not&lt;/em&gt; part of the SWT public API.
(1710) {399554} [399635]: &lt;/p&gt; * @noreference This field is not intended to be referenced by clients.
(1730) {403912} [404049]: &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This method is &lt;em&gt;not&lt;/em&gt; part of the public API for &lt;code&gt;Font&lt;/code&gt;.
(1739) {406043} [406334]: @see Font @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ A Win32 LOGFONT struct (Warning: This field is platform dependent) &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This field is &lt;em&gt;not&lt;/em&gt; part of the SWT public API.
(1742) {406511} [406592]: &lt;/p&gt; * @noreference This field is not intended to be referenced by clients.
(1743) {406594} [406805]: public LOGFONT data; The height of the font data in points (Warning: This field is platform dependent) &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This field is &lt;em&gt;not&lt;/em&gt; part of the SWT public API.
(1746) {406982} [407063]: &lt;/p&gt; * @noreference This field is not intended to be referenced by clients.
(1777) {412681} [412822]: &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This method is &lt;em&gt;not&lt;/em&gt; part of the public API for &lt;code&gt;FontData&lt;/code&gt;.
(1785) {414043} [414326]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: ControlExample, Dialog tab&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @noextend This class is not intended to be subclassed by clients.
(1786) {414327} [414402]: ------------ Constructs a new instance of this class given only its parent.
(1806) {419308} [419637]: @see GC#getFontMetrics @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ On Windows, handle is a Win32 TEXTMETRIC struct (Warning: This field is platform dependent) &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This field is &lt;em&gt;not&lt;/em&gt; part of the SWT public API.
(1809) {419814} [419895]: &lt;/p&gt; * @noreference This field is not intended to be referenced by clients.
(1824) {421864} [422008]: &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This method is &lt;em&gt;not&lt;/em&gt; part of the public API for &lt;code&gt;FontMetrics&lt;/code&gt;.
(1838) {424099} [424174]: &lt;/p&gt; &lt;p&gt; Control sides can also be attached to another control.
(1845) {425271} [425541]: &lt;/p&gt; @see FormLayout @see FormData @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @since 2.0 ------------ numerator specifies the numerator of the "a" term in the equation, y = ax + b, which defines the attachment.
(1846) {425543} [425679]: public int numerator; denominator specifies the denominator of the "a" term in the equation, y = ax + b, which defines the attachment.
(1878) {431815} [432029]: &lt;/p&gt; @see FormLayout @see FormAttachment @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @since 2.0 ------------ width specifies the preferred width in pixels.
(1889) {433257} [433336]: ------------ Constructs a new instance of FormData according to the parameters.
(1903) {436866} [437358]: &lt;/p&gt; @see FormData @see FormAttachment @see &lt;a href="http://www.eclipse.org/swt/snippets/#formlayout"&gt;FormLayout snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: LayoutExample&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @since 2.0 ------------ marginWidth specifies the number of pixels of horizontal margin that will be placed along the left and right edges of the layout.
(1928) {440544} [441087]: &lt;/p&gt; @see org.eclipse.swt.events.PaintEvent @see &lt;a href="http://www.eclipse.org/swt/snippets/#gc"&gt;GC snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Examples: GraphicsExample, PaintExample&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ the handle to the OS device context (Warning: This field is platform dependent) &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This field is &lt;em&gt;not&lt;/em&gt; part of the SWT public API.
(1931) {441264} [441345]: &lt;/p&gt; * @noreference This field is not intended to be referenced by clients.
(2028) {471297} [471348]: The default value is &lt;code&gt;null&lt;/code&gt;.
(2039) {474056} [474107]: The default value is &lt;code&gt;null&lt;/code&gt;.
(2041) {474338} [474473]: &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This method is &lt;em&gt;not&lt;/em&gt; part of the public API for &lt;code&gt;GC&lt;/code&gt;.
(2049) {476019} [476070]: The default value is &lt;code&gt;null&lt;/code&gt;.
(2086) {484936} [484987]: The default value is &lt;code&gt;null&lt;/code&gt;.
(2102) {489453} [489504]: The default value is &lt;code&gt;null&lt;/code&gt;.
(2110) {492414} [492465]: The default value is &lt;code&gt;null&lt;/code&gt;.
(2136) {500330} [500465]: &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This method is &lt;em&gt;not&lt;/em&gt; part of the public API for &lt;code&gt;GC&lt;/code&gt;.
(2143) {500934} [501069]: &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This method is &lt;em&gt;not&lt;/em&gt; part of the public API for &lt;code&gt;GC&lt;/code&gt;.
(2156) {502556} [502666]: &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This class is &lt;em&gt;not&lt;/em&gt; part of the public API for SWT.
(2159) {502842} [503101]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @noreference This class is not intended to be referenced by clients ====== GestureEvent.java ====== Copyright (c) 2010, 2011 IBM Corporation and others.
(2162) {503515} [503748]: @see GestureListener @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @since 3.7 ------------ The state of the keyboard modifier keys and mouse masks at the time the event was generated.
(2187) {507501} [507677]: public boolean doit; static final long serialVersionUID = -8348741538373572182L; Constructs a new instance of this class based on the information in the given untyped event.
(2194) {508829} [508938]: &lt;/p&gt; &lt;p&gt; &lt;b&gt;Warning&lt;/b&gt;: This API is currently only implemented on Windows and Cocoa.
(2196) {508988} [509087]: &lt;/p&gt; @see GestureEvent @since 3.7 ------------ Sent when a recognized gesture has occurred.
(2219) {513886} [514134]: &lt;/p&gt; @see GridLayout @see Control#setLayoutData @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ verticalAlignment specifies how controls will be positioned vertically within a cell.
(2308) {525707} [525774]: ------------ Constructs a new instance based on the GridData style.
(2310) {525813} [525924]: @param style the GridData style ------------ Constructs a new instance of GridData according to the parameters.
(2322) {529165} [529558]: &lt;/p&gt; @see GridData @see &lt;a href="http://www.eclipse.org/swt/snippets/#gridlayout"&gt;GridLayout snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: LayoutExample&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ numColumns specifies the number of cell columns in the layout.
(2349) {533067} [533338]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: ControlExample&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @noextend This class is not intended to be subclassed by clients.
(2367) {536744} [536962]: @see HelpListener @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ Constructs a new instance of this class based on the information in the given untyped event.
(2387) {540466} [541074]: &lt;/p&gt; @see Color @see ImageData @see ImageLoader @see &lt;a href="http://www.eclipse.org/swt/snippets/#image"&gt;Image snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Examples: GraphicsExample, ImageAnalyzer&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ specifies whether the receiver is a bitmap or an icon (one of &lt;code&gt;SWT.BITMAP&lt;/code&gt;, &lt;code&gt;SWT.ICON&lt;/code&gt;) &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This field is &lt;em&gt;not&lt;/em&gt; part of the SWT public API.
(2390) {541251} [541332]: &lt;/p&gt; * @noreference This field is not intended to be referenced by clients.
(2391) {541334} [541539]: public int type; the handle to the OS image resource (Warning: This field is platform dependent) &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This field is &lt;em&gt;not&lt;/em&gt; part of the SWT public API.
(2394) {541716} [541797]: &lt;/p&gt; * @noreference This field is not intended to be referenced by clients.
(2464) {559274} [559412]: &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This method is &lt;em&gt;not&lt;/em&gt; part of the public API for &lt;code&gt;Image&lt;/code&gt;.
(2469) {559830} [559968]: &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This method is &lt;em&gt;not&lt;/em&gt; part of the public API for &lt;code&gt;Image&lt;/code&gt;.
(2482) {561546} [561648]: &lt;/p&gt;&lt;p&gt; This method has no effect if the receiver does not have a transparent pixel value.
(2485) {562280} [562418]: &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This method is &lt;em&gt;not&lt;/em&gt; part of the public API for &lt;code&gt;Image&lt;/code&gt;.
(2494) {563820} [564193]: &lt;/p&gt; @see Image @see ImageLoader @see &lt;a href="http://www.eclipse.org/swt/snippets/#image"&gt;ImageData snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: ImageAnalyzer&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ The width of the image, in pixels.
(2495) {564195} [564250]: public int width; The height of the image, in pixels.
(2502) {564810} [564863]: &lt;p&gt; This is a multiple of the scanline padding.
(2549) {574292} [574434]: &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This method is &lt;em&gt;not&lt;/em&gt; part of the public API for &lt;code&gt;ImageData&lt;/code&gt;.
(2640) {647532} [647562]: &lt;p&gt; This is a GC helper.
(2702) {664145} [664329]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @since 3.4 @noextend This class is not intended to be subclassed by clients.
(2703) {664330} [664415]: ------------ Prevents uninitialized instances from being created outside the package.
(2820) {686263} [686438]: public boolean doit; static final long serialVersionUID = 3256442491011412789L; Constructs a new instance of this class based on the information in the given untyped event.
(2841) {689422} [689782]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/snippets/#label"&gt;Label snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: ControlExample&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @noextend This class is not intended to be subclassed by clients.
(2893) {699829} [700046]: &lt;/p&gt; @see GC#getLineAttributes() @see GC#setLineAttributes(LineAttributes) @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @since 3.3 ------------ The line width.
(2910) {702851} [703221]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/snippets/#link"&gt;Link snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: ControlExample&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @since 3.1 @noextend This class is not intended to be subclassed by clients.
(2944) {709870} [710228]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/snippets/#list"&gt;List snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: ControlExample&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @noextend This class is not intended to be subclassed by clients.
(2994) {721177} [721200]: Indexing is zero based.
(3084) {738830} [739188]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/snippets/#menu"&gt;Menu snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: ControlExample&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @noextend This class is not intended to be subclassed by clients.
(3085) {739189} [739382]: ------------ the handle to the OS resource (Warning: This field is platform dependent) &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This field is &lt;em&gt;not&lt;/em&gt; part of the SWT public API.
(3088) {739559} [739640]: &lt;/p&gt; * @noreference This field is not intended to be referenced by clients.
(3170) {764078} [764274]: * @since 3.8 public int detail; private static final long serialVersionUID = -3061660596590828941L; Constructs a new instance of this class based on the information in the given untyped event.
(3177) {765473} [765608]: &lt;/p&gt; @see MenuDetectEvent @since 3.3 ------------ Sent when the platform-dependent trigger for showing a menu item is detected.
(3181) {766146} [766364]: @see MenuListener @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ Constructs a new instance of this class based on the information in the given untyped event.
(3187) {767351} [767523]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @noextend This class is not intended to be subclassed by clients.
(3275) {788008} [788291]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: ControlExample, Dialog tab&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @noextend This class is not intended to be subclassed by clients.
(3276) {788292} [788367]: ------------ Constructs a new instance of this class given only its parent.
(3292) {791548} [791768]: @see ModifyListener @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ Constructs a new instance of this class based on the information in the given untyped event.
(3327) {797917} [798103]: * @since 3.3 public int count; static final long serialVersionUID = 3257288037011566898L; Constructs a new instance of this class based on the information in the given untyped event.
(3409) {813269} [813776]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/snippets/#path"&gt;Path, Pattern snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: GraphicsExample&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @since 3.1 ------------ the OS resource for the Path (Warning: This field is platform dependent) &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This field is &lt;em&gt;not&lt;/em&gt; part of the SWT public API.
(3412) {813953} [814034]: &lt;/p&gt; * @noreference This field is not intended to be referenced by clients.
(3460) {826227} [826737]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/snippets/#path"&gt;Path, Pattern snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: GraphicsExample&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @since 3.1 ------------ the OS resource for the Pattern (Warning: This field is platform dependent) &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This field is &lt;em&gt;not&lt;/em&gt; part of the SWT public API.
(3463) {826914} [826995]: &lt;/p&gt; * @noreference This field is not intended to be referenced by clients.
(3678) {849573} [849945]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/snippets/#progressbar"&gt;ProgressBar snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: ControlExample&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @noextend This class is not intended to be subclassed by clients.
(3728) {863194} [863595]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: GraphicsExample&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ the OS resource for the region (Warning: This field is platform dependent) &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This field is &lt;em&gt;not&lt;/em&gt; part of the SWT public API.
(3731) {863772} [863853]: &lt;/p&gt; * @noreference This field is not intended to be referenced by clients.
(3764) {876067} [876206]: &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This method is &lt;em&gt;not&lt;/em&gt; part of the public API for &lt;code&gt;Region&lt;/code&gt;.
(3828) {890050} [890128]: ------------ Constructs a new instance of RowData according to the parameters.
(3864) {895789} [895857]: ------------ Constructs a new instance of this class given the type.
(3874) {897584} [897942]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/snippets/#sash"&gt;Sash snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: ControlExample&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @noextend This class is not intended to be subclassed by clients.
(3889) {901754} [902114]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/snippets/#scale"&gt;Scale snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: ControlExample&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @noextend This class is not intended to be subclassed by clients.
(3916) {909967} [910139]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @noextend This class is not intended to be subclassed by clients.
(3945) {918095} [918458]: &lt;/p&gt; @see Slider @see Scrollable @see Scrollable#getHorizontalBar @see Scrollable#getVerticalBar @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: ControlExample&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @noextend This class is not intended to be subclassed by clients.
(4039) {939205} [939253]: public int width; The height of selected area.
(4047) {940103} [940278]: public boolean doit; static final long serialVersionUID = 3976735856884987953L; Constructs a new instance of this class based on the information in the given untyped event.
(4087) {947305} [947691]: &lt;/p&gt; @see Decorations @see SWT @see &lt;a href="http://www.eclipse.org/swt/snippets/#shell"&gt;Shell snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: ControlExample&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @noextend This class is not intended to be subclassed by clients.
(4089) {947746} [947823]: This is equivalent to calling &lt;code&gt;Shell((Display) null)&lt;/code&gt;.
(4091) {948184} [948268]: This is equivalent to calling &lt;code&gt;Shell((Display) null, style)&lt;/code&gt;.
(4120) {954754} [954892]: &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This method is &lt;em&gt;not&lt;/em&gt; part of the public API for &lt;code&gt;Shell&lt;/code&gt;.
(4125) {955401} [955539]: &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This method is &lt;em&gt;not&lt;/em&gt; part of the public API for &lt;code&gt;Shell&lt;/code&gt;.
(4186) {970766} [970941]: public boolean doit; static final long serialVersionUID = 3257569490479888441L; Constructs a new instance of this class based on the information in the given untyped event.
(4207) {975133} [975510]: &lt;/p&gt; @see ScrollBar @see &lt;a href="http://www.eclipse.org/swt/snippets/#slider"&gt;Slider snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: ControlExample&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @noextend This class is not intended to be subclassed by clients.
(4249) {985498} [985874]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/snippets/#spinner"&gt;Spinner snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: ControlExample&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @since 3.1 @noextend This class is not intended to be subclassed by clients.
(4833) {1100303} [1100399]: * For additional information see the comment in &lt;code&gt;Widget.checkSubclass()&lt;/code&gt;.
(4997) {1123918} [1124001]: &lt;/p&gt; @noreference This interface is not intended to be referenced by clients.
(5049) {1130899} [1131276]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/snippets/#tabfolder"&gt;TabFolder, TabItem snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: ControlExample&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @noextend This class is not intended to be subclassed by clients.
(5083) {1140242} [1140520]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/snippets/#tabfolder"&gt;TabFolder, TabItem snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @noextend This class is not intended to be subclassed by clients.
(5118) {1149760} [1150144]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/snippets/#table"&gt;Table, TableItem, TableColumn snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: ControlExample&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @noextend This class is not intended to be subclassed by clients.
(5278) {1188532} [1188817]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/snippets/#table"&gt;Table, TableItem, TableColumn snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @noextend This class is not intended to be subclassed by clients.
(5324) {1201114} [1201399]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/snippets/#table"&gt;Table, TableItem, TableColumn snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @noextend This class is not intended to be subclassed by clients.
(5432) {1233568} [1233926]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/snippets/#text"&gt;Text snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: ControlExample&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @noextend This class is not intended to be subclassed by clients.
(5454) {1237855} [1237962]: &lt;/p&gt; &lt;p&gt; &lt;b&gt;Warning&lt;/b&gt;: This API is currently only implemented on Windows and GTK.
(5473) {1242937} [1242970]: &lt;p&gt; Indexing is zero based.
(5489) {1246933} [1246966]: &lt;p&gt; Indexing is zero based.
(5492) {1247575} [1247608]: &lt;p&gt; Indexing is zero based.
(5509) {1250580} [1250613]: &lt;p&gt; Indexing is zero based.
(5543) {1259178} [1259211]: &lt;p&gt; Indexing is zero based.
(5548) {1259975} [1260008]: &lt;p&gt; Indexing is zero based.
(5553) {1260887} [1260920]: &lt;p&gt; Indexing is zero based.
(5680) {1289751} [1289839]: &lt;p&gt; &lt;b&gt;Warning&lt;/b&gt;: This API is currently only implemented on Windows.
(5694) {1292561} [1292638]: The default underline style is &lt;code&gt;SWT.UNDERLINE_SINGLE&lt;/code&gt;.
(5727) {1298452} [1298826]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/snippets/#toolbar"&gt;ToolBar, ToolItem snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: ControlExample&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @noextend This class is not intended to be subclassed by clients.
(5749) {1304299} [1304574]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/snippets/#toolbar"&gt;ToolBar, ToolItem snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @noextend This class is not intended to be subclassed by clients.
(5812) {1320739} [1321118]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/snippets/#tooltips"&gt;Tool Tips snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: ControlExample&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @since 3.2 @noextend This class is not intended to be subclassed by clients.
(5842) {1330384} [1330576]: @see org.eclipse.swt.events.TouchEvent @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @since 3.7 ------------ The unique identity of the touch.
(5861) {1333296} [1333465]: public int y; static final long serialVersionUID = -8348741538373572182L; Constructs a new instance of this class based on the information in the given untyped event.
(5868) {1334604} [1334713]: &lt;/p&gt; &lt;p&gt; &lt;b&gt;Warning&lt;/b&gt;: This API is currently only implemented on Windows and Cocoa.
(5896) {1338675} [1338940]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/snippets/#tracker"&gt;Tracker snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @noextend This class is not intended to be subclassed by clients.
(5930) {1348418} [1348834]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: GraphicsExample&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @since 3.1 ------------ the OS resource for the Transform (Warning: This field is platform dependent) &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This field is &lt;em&gt;not&lt;/em&gt; part of the SWT public API.
(5933) {1349011} [1349092]: &lt;/p&gt; * @noreference This field is not intended to be referenced by clients.
(5994) {1363276} [1363449]: public int detail; static final long serialVersionUID = 3257565105301239349L; Constructs a new instance of this class based on the information in the given untyped event.
(6051) {1379926} [1380306]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/snippets/#tree"&gt;Tree, TreeItem, TreeColumn snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: ControlExample&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @noextend This class is not intended to be subclassed by clients.
(6186) {1414087} [1414380]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/snippets/#tree"&gt;Tree, TreeItem, TreeColumn snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @since 3.1 @noextend This class is not intended to be subclassed by clients.
(6230) {1426298} [1426516]: @see TreeListener @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ Constructs a new instance of this class based on the information in the given untyped event.
(6235) {1427357} [1427638]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/snippets/#tree"&gt;Tree, TreeItem, TreeColumn snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @noextend This class is not intended to be subclassed by clients.
(6236) {1427639} [1427832]: ------------ the handle to the OS resource (Warning: This field is platform dependent) &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This field is &lt;em&gt;not&lt;/em&gt; part of the SWT public API.
(6239) {1428009} [1428090]: &lt;/p&gt; * @noreference This field is not intended to be referenced by clients.
(6330) {1456212} [1456318]: &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This class is &lt;em&gt;not&lt;/em&gt; part of the SWT public API.
(6334) {1456738} [1456845]: &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This method is &lt;em&gt;not&lt;/em&gt; part of the SWT public API.
(6339) {1457181} [1457288]: &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This method is &lt;em&gt;not&lt;/em&gt; part of the SWT public API.
(6344) {1457588} [1457695]: &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This method is &lt;em&gt;not&lt;/em&gt; part of the SWT public API.
(6354) {1458767} [1458941]: public String text; static final long serialVersionUID = 3257003246269577014L; Constructs a new instance of this class based on the information in the given untyped event.
(6404) {1468809} [1468898]: &lt;/p&gt;&lt;p&gt; This method is called after &lt;code&gt;releaseWidget()&lt;/code&gt;.
(6405) {1468899} [1469055]: &lt;/p&gt;&lt;p&gt; See also &lt;code&gt;releaseChild()&lt;/code&gt;, &lt;code&gt;releaseWidget()&lt;/code&gt; and &lt;code&gt;releaseHandle()&lt;/code&gt;.
(6441) {1476934} [1477041]: &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; This method is &lt;em&gt;not&lt;/em&gt; part of the SWT public API.
*****************************************************************
========================= CLASS #5 =============================
(4) {754} [892]: @param e the untyped event containing the information ====== ArmListener.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(10) {1804} [1940]: @param e an event containing information about the arm ====== BidiUtil.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(796) {198490} [198633]: @param e an event containing information about the resize ====== ControlEvent.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(800) {199250} [199392]: @param e the untyped event containing the information ====== ControlListener.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(807) {200491} [200629]: @param e an event containing information about the resize ====== CoolBar.java ====== Copyright (c) 2000, 2012 IBM Corporation and others.
(922) {234626} [234706]: ====== DateTime.java ====== Copyright (c) 2000, 2012 IBM Corporation and others.
(1427) {348770} [348912]: @param e the untyped event containing the information ====== DisposeListener.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(1433) {349799} [349932]: @param e an event containing information about the dispose ====== DPIUtil.java ====== Copyright (c) 2016 IBM Corporation and others.
(1473) {355052} [355197]: @param e the untyped event containing the information ====== DragDetectListener.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(1479) {356115} [356252]: @param e an event containing information about the drag ====== Drawable.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(1552) {367112} [367255]: @param e an event containing information about the operation ====== ExpandBar.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(1578) {374669} [374806]: @param e the untyped event containing the information ====== ExpandItem.java ====== Copyright (c) 2000, 2013 IBM Corporation and others.
(1606) {382538} [382682]: @param e an event containing information about the operation ====== FileDialog.java ====== Copyright (c) 2000, 2012 IBM Corporation and others.
(1690) {395782} [395929]: @param e an event containing information about the focus change ====== FocusEvent.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(1694) {396545} [396685]: @param e the untyped event containing the information ====== FocusListener.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(1734) {404472} [404552]: ====== FontData.java ====== Copyright (c) 2000, 2012 IBM Corporation and others.
(2197) {509089} [509148]: @param e an event containing information about the gesture.
(2198) {509150} [509235]: ====== GIFFileFormat.java ====== Copyright (c) 2000, 2012 IBM Corporation and others.
(2368) {536964} [537103]: @param e the untyped event containing the information ====== HelpListener.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(2374) {538084} [538218]: @param e an event containing information about the help ====== Image.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(3182) {766366} [766501]: @param e the untyped event containing the information ====== MenuItem.java ====== Copyright (c) 2000, 2014 IBM Corporation and others.
(3293) {791770} [791911]: @param e the untyped event containing the information ====== ModifyListener.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(3299) {792792} [792930]: @param e an event containing information about the modify ====== Monitor.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(3353) {802215} [802363]: @param e an event containing information about the hover ====== MouseTrackListener.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(3361) {803759} [803907]: @param e an event containing information about the hover ====== MouseWheelListener.java ====== Copyright (c) 2000, 2007 IBM Corporation and others.
(3869) {896655} [896731]: ====== Sash.java ====== Copyright (c) 2000, 2012 IBM Corporation and others.
(4030) {937196} [937352]: @param e an event containing information about the default selection ====== SelectionEvent.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(4181) {969953} [970100]: @param e an event containing information about the minimization ====== ShellEvent.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(4197) {972533} [972676]: @param e an event containing information about the minimization ====== Slider.java ====== Copyright (c) 2000, 2012 IBM Corporation and others.
(6231) {1426518} [1426653]: @param e the untyped event containing the information ====== TreeItem.java ====== Copyright (c) 2000, 2015 IBM Corporation and others.
(6473) {1482695} [1482783]: ====== WinICOFileFormat.java ====== Copyright (c) 2000, 2012 IBM Corporation and others.
*****************************************************************
========================= CLASS #6 =============================
(7) {1405} [1641]: &lt;p&gt; After creating an instance of a class that implements this interface it can be added to a widget using the &lt;code&gt;addArmListener&lt;/code&gt; method and removed using the &lt;code&gt;removeArmListener&lt;/code&gt; method.
(80) {13252} [13642]: The value will be one of &lt;code&gt;LEFT&lt;/code&gt;, &lt;code&gt;RIGHT&lt;/code&gt; or &lt;code&gt;CENTER&lt;/code&gt; unless the receiver is an &lt;code&gt;ARROW&lt;/code&gt; button, in which case, the alignment will indicate the direction of the arrow (one of &lt;code&gt;LEFT&lt;/code&gt;, &lt;code&gt;RIGHT&lt;/code&gt;, &lt;code&gt;UP&lt;/code&gt; or &lt;code&gt;DOWN&lt;/code&gt;).
(87) {15289} [15428]: &lt;p&gt; When the receiver is of type &lt;code&gt;CHECK&lt;/code&gt; or &lt;code&gt;RADIO&lt;/code&gt;, it is selected when it is checked.
(88) {15429} [15517]: When it is of type &lt;code&gt;TOGGLE&lt;/code&gt;, it is selected when it is pushed in.
(93) {16961} [17351]: The argument should be one of &lt;code&gt;LEFT&lt;/code&gt;, &lt;code&gt;RIGHT&lt;/code&gt; or &lt;code&gt;CENTER&lt;/code&gt; unless the receiver is an &lt;code&gt;ARROW&lt;/code&gt; button, in which case, the argument indicates the direction of the arrow (one of &lt;code&gt;LEFT&lt;/code&gt;, &lt;code&gt;RIGHT&lt;/code&gt;, &lt;code&gt;UP&lt;/code&gt; or &lt;code&gt;DOWN&lt;/code&gt;).
(107) {20646} [20785]: &lt;p&gt; When the receiver is of type &lt;code&gt;CHECK&lt;/code&gt; or &lt;code&gt;RADIO&lt;/code&gt;, it is selected when it is checked.
(108) {20786} [20874]: When it is of type &lt;code&gt;TOGGLE&lt;/code&gt;, it is selected when it is pushed in.
(803) {199837} [200082]: &lt;p&gt; After creating an instance of a class that implements this interface it can be added to a control using the &lt;code&gt;addControlListener&lt;/code&gt; method and removed using the &lt;code&gt;removeControlListener&lt;/code&gt; method.
(1430) {349406} [349650]: &lt;p&gt; After creating an instance of a class that implements this interface it can be added to a widget using the &lt;code&gt;addDisposeListener&lt;/code&gt; method and removed using the &lt;code&gt;removeDisposeListener&lt;/code&gt; method.
(1476) {355697} [355948]: &lt;p&gt; After creating an instance of a class that implements this interface it can be added to a control using the &lt;code&gt;addDragDetectListener&lt;/code&gt; method and removed using the &lt;code&gt;removeDragDetectListener&lt;/code&gt; method.
(1697) {397185} [397426]: &lt;p&gt; After creating an instance of a class that implements this interface it can be added to a control using the &lt;code&gt;addFocusListener&lt;/code&gt; method and removed using the &lt;code&gt;removeFocusListener&lt;/code&gt; method.
(2192) {508514} [508759]: &lt;p&gt; After creating an instance of a class that implements this interface it can be added to a control using the &lt;code&gt;addGestureListener&lt;/code&gt; method and removed using the &lt;code&gt;removeGestureListener&lt;/code&gt; method.
(2371) {537644} [537883]: &lt;p&gt; After creating an instance of a class that implements this interface it can be added to a control using the &lt;code&gt;addHelpListener&lt;/code&gt; method and removed using the &lt;code&gt;removeHelpListener&lt;/code&gt; method.
(2825) {687231} [687468]: &lt;p&gt; After creating an instance of a class that implements this interface it can be added to a control using the &lt;code&gt;addKeyListener&lt;/code&gt; method and removed using the &lt;code&gt;removeKeyListener&lt;/code&gt; method.
(2847) {691233} [691479]: The value will be one of &lt;code&gt;LEFT&lt;/code&gt;, &lt;code&gt;RIGHT&lt;/code&gt; or &lt;code&gt;CENTER&lt;/code&gt; unless the receiver is a &lt;code&gt;SEPARATOR&lt;/code&gt; label, in which case, &lt;code&gt;NONE&lt;/code&gt; is returned.
(2851) {692585} [692712]: The argument should be one of &lt;code&gt;LEFT&lt;/code&gt;, &lt;code&gt;RIGHT&lt;/code&gt; or &lt;code&gt;CENTER&lt;/code&gt;.
(3050) {734803} [735100]: &lt;p&gt; After creating an instance of a class that implements this interface it can be added to a widget using the &lt;code&gt;addListener(int eventType, Listener handler)&lt;/code&gt; method and removed using the &lt;code&gt;removeListener (int eventType, Listener handler)&lt;/code&gt; method.
(3175) {765105} [765368]: &lt;p&gt; After creating an instance of a class that implements this interface it can be added to a control or TrayItem using the &lt;code&gt;addMenuDetectListener&lt;/code&gt; method and removed using the &lt;code&gt;removeMenuDetectListener&lt;/code&gt; method.
(3217) {776105} [776244]: &lt;p&gt; When the receiver is of type &lt;code&gt;CHECK&lt;/code&gt; or &lt;code&gt;RADIO&lt;/code&gt;, it is selected when it is checked.
(3246) {782995} [783134]: &lt;p&gt; When the receiver is of type &lt;code&gt;CHECK&lt;/code&gt; or &lt;code&gt;RADIO&lt;/code&gt;, it is selected when it is checked.
(3296) {792403} [792650]: &lt;p&gt; After creating an instance of a class that implements this interface it can be added to a text widget using the &lt;code&gt;addModifyListener&lt;/code&gt; method and removed using the &lt;code&gt;removeModifyListener&lt;/code&gt; method.
(3332) {798829} [799070]: &lt;p&gt; After creating an instance of a class that implements this interface it can be added to a control using the &lt;code&gt;addMouseListener&lt;/code&gt; method and removed using the &lt;code&gt;removeMouseListener&lt;/code&gt; method.
(3340) {800279} [800528]: &lt;p&gt; After creating an instance of a class that implements this interface it can be added to a control using the &lt;code&gt;addMouseMoveListener&lt;/code&gt; method and removed using the &lt;code&gt;removeMouseMoveListener&lt;/code&gt; method.
(3356) {802830} [803081]: &lt;p&gt; After creating an instance of a class that implements this interface it can be added to a control using the &lt;code&gt;addMouseTrackListener&lt;/code&gt; method and removed using the &lt;code&gt;removeMouseTrackListener&lt;/code&gt; method.
(3364) {804351} [804602]: &lt;p&gt; After creating an instance of a class that implements this interface it can be added to a control using the &lt;code&gt;addMouseWheelListener&lt;/code&gt; method and removed using the &lt;code&gt;removeMouseWheelListener&lt;/code&gt; method.
(3382) {807821} [808062]: &lt;p&gt; After creating an instance of a class that implements this interface it can be added to a control using the &lt;code&gt;addPaintListener&lt;/code&gt; method and removed using the &lt;code&gt;removePaintListener&lt;/code&gt; method.
(4052) {941070} [941319]: &lt;p&gt; After creating an instance of a class that implements this interface it can be added to a control using the &lt;code&gt;addSelectionListener&lt;/code&gt; method and removed using the &lt;code&gt;removeSelectionListener&lt;/code&gt; method.
(5199) {1169343} [1169460]: The value will be one of &lt;code&gt;UP&lt;/code&gt;, &lt;code&gt;DOWN&lt;/code&gt; or &lt;code&gt;NONE&lt;/code&gt;.
(5261) {1185025} [1185141]: The value can be one of &lt;code&gt;UP&lt;/code&gt;, &lt;code&gt;DOWN&lt;/code&gt; or &lt;code&gt;NONE&lt;/code&gt;.
(5294) {1193521} [1193643]: The value will be one of &lt;code&gt;LEFT&lt;/code&gt;, &lt;code&gt;RIGHT&lt;/code&gt; or &lt;code&gt;CENTER&lt;/code&gt;.
(5307) {1197570} [1197697]: The argument should be one of &lt;code&gt;LEFT&lt;/code&gt;, &lt;code&gt;RIGHT&lt;/code&gt; or &lt;code&gt;CENTER&lt;/code&gt;.
(5774) {1311640} [1311829]: &lt;p&gt; When the receiver is of type &lt;code&gt;CHECK&lt;/code&gt; or &lt;code&gt;RADIO&lt;/code&gt;, it is selected when it is checked (which some platforms draw as a pushed in button).
(5789) {1316522} [1316711]: &lt;p&gt; When the receiver is of type &lt;code&gt;CHECK&lt;/code&gt; or &lt;code&gt;RADIO&lt;/code&gt;, it is selected when it is checked (which some platforms draw as a pushed in button).
(5866) {1334265} [1334506]: &lt;p&gt; After creating an instance of a class that implements this interface it can be added to a control using the &lt;code&gt;addTouchListener&lt;/code&gt; method and removed using the &lt;code&gt;removeTouchListener&lt;/code&gt; method.
(5999) {1364248} [1364495]: &lt;p&gt; After creating an instance of a class that implements this interface it can be added to a control using the &lt;code&gt;addTraverseListener&lt;/code&gt; method and removed using the &lt;code&gt;removeTraverseListener&lt;/code&gt; method.
(6122) {1398521} [1398638]: The value will be one of &lt;code&gt;UP&lt;/code&gt;, &lt;code&gt;DOWN&lt;/code&gt; or &lt;code&gt;NONE&lt;/code&gt;.
(6161) {1409214} [1409330]: The value can be one of &lt;code&gt;UP&lt;/code&gt;, &lt;code&gt;DOWN&lt;/code&gt; or &lt;code&gt;NONE&lt;/code&gt;.
(6202) {1419082} [1419204]: The value will be one of &lt;code&gt;LEFT&lt;/code&gt;, &lt;code&gt;RIGHT&lt;/code&gt; or &lt;code&gt;CENTER&lt;/code&gt;.
(6215) {1423127} [1423254]: The argument should be one of &lt;code&gt;LEFT&lt;/code&gt;, &lt;code&gt;RIGHT&lt;/code&gt; or &lt;code&gt;CENTER&lt;/code&gt;.
(6359) {1459730} [1459978]: &lt;p&gt; After creating an instance of a class that implements this interface it can be added to a text control using the &lt;code&gt;addVerifyListener&lt;/code&gt; method and removed using the &lt;code&gt;removeVerifyListener&lt;/code&gt; method.
*****************************************************************
========================= CLASS #7 =============================
(15) {2498} [2770]: &lt;p&gt; @param hwnd the handle of the Control that is listening for keyboard language changes @param runnable the code that should be executed when a keyboard language change occurs ------------ Proc used for OS.EnumSystemLanguageGroups call during isBidiPlatform test.
(40) {6057} [6215]: &lt;p&gt; @param hwnd the handle of the Control that is listening for keyboard language changes ------------ Determine the base direction for the given text.
(48) {6883} [6940]: &lt;p&gt; @param language integer representing language.
*****************************************************************
========================= CLASS #8 =============================
(18) {3141} [3207]: Wraps the GetFontLanguageInfo and GetCharacterPlacement functions.
(25) {4302} [4368]: Wraps the GetFontLanguageInfo and GetCharacterPlacement functions.
*****************************************************************
========================= CLASS #9 =============================
(19) {3208} [3937]: &lt;p&gt; @param gc the GC to use for measuring of this line, input parameter @param text text that bidi data should be calculated for, input parameter @param order an array of integers representing the visual position of each character in the text array, output parameter @param classBuffer an array of integers representing the type (e.g., ARABIC, HEBREW, LOCALNUMBER) of each character in the text array, input/output parameter @param dx an array of integers representing the pixel width of each glyph in the returned glyph buffer, output parameter @param flags an integer representing rendering flag information, input parameter @param offsets text segments that should be measured and reordered separately, input parameter.
(26) {4369} [4977]: &lt;p&gt; @param gc the GC to use for measuring of this line, input parameter @param text text that bidi data should be calculated for, input parameter @param order an array of integers representing the visual position of each character in the text array, output parameter @param classBuffer an array of integers representing the type (e.g., ARABIC, HEBREW, LOCALNUMBER) of each character in the text array, input/output parameter @param flags an integer representing rendering flag information, input parameter @param offsets text segments that should be measured and reordered separately, input parameter.
(44) {6448} [6514]: &lt;p&gt; @param text Text base direction should be resolved for.
*****************************************************************
========================= CLASS #10 =============================
(20) {3938} [3994]: See org.eclipse.swt.custom.BidiSegmentEvent for details.
(27) {4978} [5034]: See org.eclipse.swt.custom.BidiSegmentEvent for details.
*****************************************************************
========================= CLASS #11 =============================
(32) {5472} [5620]: &lt;p&gt; @return integer array with an entry for each installed language ------------ Return whether or not the platform supports a bidi language.
(36) {5776} [5858]: ------------ Return whether or not the keyboard supports input of a bidi language.
(1653) {390584} [390681]: ------------ Return whether or not the specified input stream represents a supported file format.
*****************************************************************
========================= CLASS #12 =============================
(33) {5622} [5684]: Determine this by looking at the languages that are installed.
(37) {5860} [5939]: Determine this by looking at the languages that are installed for the keyboard.
*****************************************************************
========================= CLASS #13 =============================
(34) {5685} [5747]: &lt;p&gt; @return true if bidi is supported, false otherwise.
(38) {5940} [6002]: &lt;p&gt; @return true if bidi is supported, false otherwise.
*****************************************************************
========================= CLASS #14 =============================
(50) {6982} [7057]: ------------ Sets the orientation (writing order) of the specified control.
(1538) {365274} [365303]: ------------ Sets the bounds.
*****************************************************************
========================= CLASS #15 =============================
(54) {7486} [7513]: Used for right orientation.
(56) {7600} [7627]: Used for right orientation.
*****************************************************************
========================= CLASS #16 =============================
(65) {9463} [9825]: &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;ARROW, CHECK, PUSH, RADIO, TOGGLE, FLAT, WRAP&lt;/dd&gt; &lt;dd&gt;UP, DOWN, LEFT, RIGHT, CENTER&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;Selection&lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; Note: Only one of the styles ARROW, CHECK, PUSH, RADIO, and TOGGLE may be specified.
(66) {9826} [9916]: &lt;/p&gt;&lt;p&gt; Note: Only one of the styles LEFT, RIGHT, and CENTER may be specified.
(67) {9917} [10043]: &lt;/p&gt;&lt;p&gt; Note: Only one of the styles UP, DOWN, LEFT, and RIGHT may be specified when the ARROW style is specified.
(165) {31155} [31506]: &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;(none)&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;(none)&lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; This class may be subclassed by custom control implementors who are building controls that are &lt;em&gt;not&lt;/em&gt; constructed from aggregates of other controls.
(187) {37593} [37854]: &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;(none)&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;(none)&lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; IMPORTANT: This class is &lt;em&gt;not&lt;/em&gt; intended to be subclassed.
(282) {59682} [59943]: &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;(none)&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;(none)&lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; IMPORTANT: This class is &lt;em&gt;not&lt;/em&gt; intended to be subclassed.
(302) {64927} [65268]: &lt;/p&gt; &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;DROP_DOWN, READ_ONLY, SIMPLE&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;DefaultSelection, Modify, Selection, Verify, OrientationChange&lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; Note: Only one of the styles DROP_DOWN and SIMPLE may be specified.
(303) {65269} [65365]: &lt;/p&gt;&lt;p&gt; IMPORTANT: This class is &lt;em&gt;not&lt;/em&gt; intended to be subclassed.
(427) {97706} [98224]: &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;NO_BACKGROUND, NO_FOCUS, NO_MERGE_PAINTS, NO_REDRAW_RESIZE, NO_RADIO_GROUP, EMBEDDED, DOUBLE_BUFFERED&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;(none)&lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; Note: The &lt;code&gt;NO_BACKGROUND&lt;/code&gt;, &lt;code&gt;NO_FOCUS&lt;/code&gt;, &lt;code&gt;NO_MERGE_PAINTS&lt;/code&gt;, and &lt;code&gt;NO_REDRAW_RESIZE&lt;/code&gt; styles are intended for use with &lt;code&gt;Canvas&lt;/code&gt;.
(429) {98458} [98685]: &lt;/p&gt;&lt;p&gt; Note: The &lt;code&gt;CENTER&lt;/code&gt; style, although undefined for composites, has the same value as &lt;code&gt;EMBEDDED&lt;/code&gt; which is used to embed widgets from other widget toolkits into SWT.
(431) {98782} [98943]: &lt;/p&gt;&lt;p&gt; This class may be subclassed by custom control implementors who are building controls that are constructed from aggregates of other controls.
(460) {107234} [107295]: &lt;/p&gt; &lt;p&gt; Note: Layout is different from painting.
(472) {108916} [108977]: &lt;/p&gt; &lt;p&gt; Note: Layout is different from painting.
(485) {110940} [111001]: &lt;/p&gt; &lt;p&gt; Note: Layout is different from painting.
(494) {112491} [112552]: &lt;/p&gt; &lt;p&gt; Note: Layout is different from painting.
(498) {113532} [114149]: &lt;p&gt; The parameter &lt;code&gt;flags&lt;/code&gt; may be a combination of: &lt;dl&gt; &lt;dt&gt;&lt;b&gt;SWT.ALL&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;all children in the receiver's widget tree should be laid out&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;SWT.CHANGED&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;the layout must flush its caches&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;SWT.DEFER&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;layout will be deferred&lt;/dd&gt; &lt;/dl&gt; &lt;/p&gt; &lt;p&gt; When the &lt;code&gt;changed&lt;/code&gt; array is specified, the flags &lt;code&gt;SWT.ALL&lt;/code&gt; and &lt;code&gt;SWT.CHANGED&lt;/code&gt; have no effect.
(502) {114492} [114677]: &lt;/p&gt; &lt;p&gt; When the &lt;code&gt;changed&lt;/code&gt; array is not specified, the flag &lt;code&gt;SWT.ALL&lt;/code&gt; indicates that the whole widget tree should be laid out.
(503) {114678} [114826]: And the flag &lt;code&gt;SWT.CHANGED&lt;/code&gt; indicates that the layouts should flush any cached information for all controls that are laid out.
(506) {115285} [115346]: &lt;/p&gt; &lt;p&gt; Note: Layout is different from painting.
(519) {119235} [119775]: &lt;p&gt; &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt; &lt;dd&gt;BORDER&lt;/dd&gt; &lt;dd&gt;LEFT_TO_RIGHT, RIGHT_TO_LEFT, FLIP_TEXT_DIRECTION&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt; &lt;dd&gt;DragDetect, FocusIn, FocusOut, Help, KeyDown, KeyUp, MenuDetect, MouseDoubleClick, MouseDown, MouseEnter, MouseExit, MouseHover, MouseUp, MouseMove, MouseWheel, MouseHorizontalWheel, MouseVerticalWheel, Move, Paint, Resize, Traverse&lt;/dd&gt; &lt;/dl&gt; &lt;/p&gt;&lt;p&gt; Only one of LEFT_TO_RIGHT or RIGHT_TO_LEFT may be specified.
(520) {119776} [119903]: &lt;/p&gt;&lt;p&gt; IMPORTANT: This class is intended to be subclassed &lt;em&gt;only&lt;/em&gt; within the SWT implementation.
(812) {201362} [201667]: &lt;/p&gt;&lt;p&gt; &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;FLAT, HORIZONTAL, VERTICAL&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;(none)&lt;/dd&gt; &lt;/dl&gt; &lt;/p&gt;&lt;p&gt; Note: Only one of the styles HORIZONTAL and VERTICAL may be specified.
(813) {201668} [201764]: &lt;/p&gt;&lt;p&gt; IMPORTANT: This class is &lt;em&gt;not&lt;/em&gt; intended to be subclassed.
(851) {211272} [211539]: &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;DROP_DOWN&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;Selection&lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; IMPORTANT: This class is &lt;em&gt;not&lt;/em&gt; intended to be subclassed.
(894) {224650} [225140]: &lt;/p&gt; &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt; CURSOR_ARROW, CURSOR_WAIT, CURSOR_CROSS, CURSOR_APPSTARTING, CURSOR_HELP, CURSOR_SIZEALL, CURSOR_SIZENESW, CURSOR_SIZENS, CURSOR_SIZENWSE, CURSOR_SIZEWE, CURSOR_SIZEN, CURSOR_SIZES, CURSOR_SIZEE, CURSOR_SIZEW, CURSOR_SIZENE, CURSOR_SIZESE, CURSOR_SIZESW, CURSOR_SIZENW, CURSOR_UPARROW, CURSOR_IBEAM, CURSOR_NO, CURSOR_HAND &lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; Note: Only one of the above styles may be specified.
(926) {235303} [235704]: &lt;/p&gt; &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;DATE, TIME, CALENDAR, SHORT, MEDIUM, LONG, DROP_DOWN&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;DefaultSelection, Selection&lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; Note: Only one of the styles DATE, TIME, or CALENDAR may be specified, and only one of the styles SHORT, MEDIUM, or LONG may be specified.
(928) {235799} [235895]: &lt;/p&gt;&lt;p&gt; IMPORTANT: This class is &lt;em&gt;not&lt;/em&gt; intended to be subclassed.
(972) {245864} [245992]: &lt;p&gt; IMPORTANT: This class was intended to be abstract and should &lt;em&gt;never&lt;/em&gt; be referenced or instantiated.
(980) {247558} [248553]: &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;BORDER, CLOSE, MIN, MAX, NO_TRIM, RESIZE, TITLE, ON_TOP, TOOL&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;(none)&lt;/dd&gt; &lt;/dl&gt; Class &lt;code&gt;SWT&lt;/code&gt; provides two "convenience constants" for the most commonly required style combinations: &lt;dl&gt; &lt;dt&gt;&lt;code&gt;SHELL_TRIM&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt; the result of combining the constants which are required to produce a typical application top level shell: (that is, &lt;code&gt;CLOSE | TITLE | MIN | MAX | RESIZE&lt;/code&gt;) &lt;/dd&gt; &lt;dt&gt;&lt;code&gt;DIALOG_TRIM&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt; the result of combining the constants which are required to produce a typical application dialog shell: (that is, &lt;code&gt;TITLE | CLOSE | BORDER&lt;/code&gt;) &lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; IMPORTANT: This class is intended to be subclassed &lt;em&gt;only&lt;/em&gt; within the SWT implementation.
(1054) {264087} [264221]: &lt;/p&gt;&lt;p&gt; Subclasses are supposed to reimplement this method and not call the &lt;code&gt;super&lt;/code&gt; implementation.
(1058) {264556} [264690]: &lt;/p&gt;&lt;p&gt; Subclasses are supposed to reimplement this method and not call the &lt;code&gt;super&lt;/code&gt; implementation.
(1097) {271804} [271928]: &lt;/p&gt;&lt;p&gt; If subclasses reimplement this method, they must call the &lt;code&gt;super&lt;/code&gt; implementation.
(1119) {274615} [274739]: &lt;/p&gt;&lt;p&gt; If subclasses reimplement this method, they must call the &lt;code&gt;super&lt;/code&gt; implementation.
(1139) {278186} [278515]: &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;APPLICATION_MODAL, PRIMARY_MODAL, SYSTEM_MODAL, SHEET&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;(none)&lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; Note: Only one of the styles APPLICATION_MODAL, PRIMARY_MODAL, and SYSTEM_MODAL may be specified.
(1158) {283618} [283879]: &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;(none)&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;(none)&lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; IMPORTANT: This class is &lt;em&gt;not&lt;/em&gt; intended to be subclassed.
(1194) {290467} [290777]: &lt;/p&gt; &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;(none)&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;Close, Dispose, OpenDocument, Settings, Skin&lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; IMPORTANT: This class is &lt;em&gt;not&lt;/em&gt; intended to be subclassed.
(1556) {367768} [368071]: &lt;/p&gt;&lt;p&gt; &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;V_SCROLL&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;Expand, Collapse&lt;/dd&gt; &lt;/dl&gt; &lt;/p&gt;&lt;p&gt; IMPORTANT: This class is &lt;em&gt;not&lt;/em&gt; intended to be subclassed.
(1581) {375238} [375519]: &lt;p&gt; &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;(none)&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;(none)&lt;/dd&gt; &lt;/dl&gt; &lt;/p&gt;&lt;p&gt; IMPORTANT: This class is &lt;em&gt;not&lt;/em&gt; intended to be subclassed.
(1609) {383094} [383350]: &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;SAVE, OPEN, MULTI&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;(none)&lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; Note: Only one of the styles SAVE and OPEN may be specified.
(1610) {383351} [383447]: &lt;/p&gt;&lt;p&gt; IMPORTANT: This class is &lt;em&gt;not&lt;/em&gt; intended to be subclassed.
(1630) {387784} [387828]: &lt;p&gt; The strings are platform specific.
(1721) {402659} [402769]: On X however, a &lt;code&gt;Font&lt;/code&gt; object &lt;em&gt;may&lt;/em&gt; be composed of multiple X fonts.
(1737) {404921} [405804]: &lt;p&gt; For platform-independent behaviour, use the get and set methods corresponding to the following properties: &lt;dl&gt; &lt;dt&gt;height&lt;/dt&gt;&lt;dd&gt;the height of the font in points&lt;/dd&gt; &lt;dt&gt;name&lt;/dt&gt;&lt;dd&gt;the face name of the font, which may include the foundry&lt;/dd&gt; &lt;dt&gt;style&lt;/dt&gt;&lt;dd&gt;A bitwise combination of NORMAL, ITALIC and BOLD&lt;/dd&gt; &lt;/dl&gt; If extra, platform-dependent functionality is required: &lt;ul&gt; &lt;li&gt;On &lt;em&gt;Windows&lt;/em&gt;, the data member of the &lt;code&gt;FontData&lt;/code&gt; corresponds to a Windows &lt;code&gt;LOGFONT&lt;/code&gt; structure whose fields may be retrieved and modified.&lt;/li&gt; &lt;li&gt;On &lt;em&gt;X&lt;/em&gt;, the fields of the &lt;code&gt;FontData&lt;/code&gt; correspond to the entries in the font's XLFD name and may be retrieved and modified.
(1784) {413781} [414042]: &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;(none)&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;(none)&lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; IMPORTANT: This class is &lt;em&gt;not&lt;/em&gt; intended to be subclassed.
(1871) {429187} [430464]: The possible alignment values are: &lt;dl&gt; &lt;dt&gt;&lt;b&gt;{@link SWT#TOP}&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;the side will be attached to the top side of the specified control&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;{@link SWT#BOTTOM}&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;the side will be attached to the bottom side of the specified control&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;{@link SWT#LEFT}&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;the side will be attached to the left side of the specified control&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;{@link SWT#RIGHT}&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;the side will be attached to the right side of the specified control&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;{@link SWT#CENTER}&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;the side will be centered on the same side of the specified control&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;{@link SWT#DEFAULT}&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;the side will be attached to the adjacent side of the specified control&lt;/dd&gt; &lt;/dl&gt; @param control the control the side is attached to @param offset the offset of the side from the control @param alignment the alignment of the side to the control it is attached to, one of TOP, BOTTOM, LEFT, RIGHT, CENTER, or DEFAULT ------------ Returns a string containing a concise, human-readable description of the receiver.
(1916) {438573} [438668]: ------------ Returns a string containing a concise, human-readable description of the receiver.
(1921) {439376} [439708]: &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;LEFT_TO_RIGHT, RIGHT_TO_LEFT&lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; The SWT drawing coordinate system is the two-dimensional space with the origin (0,0) at the top left corner of the drawing area and with (x,y) values increasing to the right and downward respectively.
(1927) {440454} [440543]: &lt;/p&gt; &lt;p&gt; Note: Only one of LEFT_TO_RIGHT and RIGHT_TO_LEFT may be specified.
(1945) {447066} [447223]: &lt;p&gt; The resulting arc begins at &lt;code&gt;startAngle&lt;/code&gt; and extends for &lt;code&gt;arcAngle&lt;/code&gt; degrees, using the current color.
(1949) {447667} [447818]: &lt;/p&gt;&lt;p&gt; The resulting arc covers an area &lt;code&gt;width + 1&lt;/code&gt; pixels wide by &lt;code&gt;height + 1&lt;/code&gt; pixels tall.
(1959) {452148} [452299]: &lt;/p&gt;&lt;p&gt; The oval covers an area that is &lt;code&gt;width + 1&lt;/code&gt; pixels wide and &lt;code&gt;height + 1&lt;/code&gt; pixels tall.
(1997) {463118} [463275]: &lt;p&gt; The resulting arc begins at &lt;code&gt;startAngle&lt;/code&gt; and extends for &lt;code&gt;arcAngle&lt;/code&gt; degrees, using the current color.
(2001) {463719} [463870]: &lt;/p&gt;&lt;p&gt; The resulting arc covers an area &lt;code&gt;width + 1&lt;/code&gt; pixels wide by &lt;code&gt;height + 1&lt;/code&gt; pixels tall.
(2057) {478268} [478360]: Note that this controls anti-aliasing &lt;em&gt;only&lt;/em&gt; for text drawing operations.
(2164) {503870} [504386]: &lt;p&gt;&lt;ul&gt; &lt;li&gt;{@link org.eclipse.swt.SWT#GESTURE_BEGIN}&lt;/li&gt; &lt;li&gt;{@link org.eclipse.swt.SWT#GESTURE_END}&lt;/li&gt; &lt;li&gt;{@link org.eclipse.swt.SWT#GESTURE_MAGNIFY}&lt;/li&gt; &lt;li&gt;{@link org.eclipse.swt.SWT#GESTURE_PAN}&lt;/li&gt; &lt;li&gt;{@link org.eclipse.swt.SWT#GESTURE_ROTATE}&lt;/li&gt; &lt;li&gt;{@link org.eclipse.swt.SWT#GESTURE_SWIPE}&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * This field determines the &lt;code&gt;GestureEvent&lt;/code&gt; fields that contain valid data.
(2173) {505506} [505626]: Both &lt;code&gt;xDirection&lt;/code&gt; and &lt;code&gt;yDirection&lt;/code&gt; can be valid for an individual gesture.
(2178) {506344} [506464]: Both &lt;code&gt;xDirection&lt;/code&gt; and &lt;code&gt;yDirection&lt;/code&gt; can be valid for an individual gesture.
(2188) {507679} [507828]: @param e the untyped event containing the information ------------ Returns a string containing a concise, human-readable description of the receiver.
(2347) {532667} [532969]: &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;SHADOW_ETCHED_IN, SHADOW_ETCHED_OUT, SHADOW_IN, SHADOW_OUT, SHADOW_NONE&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;(none)&lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; Note: Only one of the above styles may be specified.
(2348) {532970} [533066]: &lt;/p&gt;&lt;p&gt; IMPORTANT: This class is &lt;em&gt;not&lt;/em&gt; intended to be subclassed.
(2402) {544068} [544649]: The possible flag values are: &lt;dl&gt; &lt;dt&gt;&lt;b&gt;{@link SWT#IMAGE_COPY}&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;the result is an identical copy of srcImage&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;{@link SWT#IMAGE_DISABLE}&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;the result is a copy of srcImage which has a &lt;em&gt;disabled&lt;/em&gt; look&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;{@link SWT#IMAGE_GRAY}&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;the result is a copy of srcImage which has a &lt;em&gt;gray scale&lt;/em&gt; look&lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; You must dispose the image when it is no longer required.
(2406) {546374} [546452]: &lt;/p&gt; &lt;p&gt; You must dispose the image when it is no longer required.
(2408) {547183} [547250]: &lt;p&gt; You must dispose the image when it is no longer required.
(2414) {548377} [548455]: &lt;/p&gt; &lt;p&gt; You must dispose the image when it is no longer required.
(2426) {551440} [551507]: &lt;p&gt; You must dispose the image when it is no longer required.
(2668) {653593} [653711]: ------------ Resets the fields of the ImageLoader, except for the &lt;code&gt;imageLoaderListeners&lt;/code&gt; field.
(2701) {663875} [664144]: &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;(none)&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;ImeComposition&lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; IMPORTANT: This class is &lt;em&gt;not&lt;/em&gt; intended to be subclassed.
(2821) {686440} [686589]: @param e the untyped event containing the information ------------ Returns a string containing a concise, human-readable description of the receiver.
(2836) {688797} [689194]: &lt;/p&gt; &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;SEPARATOR, HORIZONTAL, VERTICAL&lt;/dd&gt; &lt;dd&gt;SHADOW_IN, SHADOW_OUT, SHADOW_NONE&lt;/dd&gt; &lt;dd&gt;CENTER, LEFT, RIGHT, WRAP&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;(none)&lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; Note: Only one of SHADOW_IN, SHADOW_OUT and SHADOW_NONE may be specified.
(2838) {689218} [689271]: Only one of HORIZONTAL and VERTICAL may be specified.
(2839) {689272} [689324]: Only one of CENTER, LEFT and RIGHT may be specified.
(2840) {689325} [689421]: &lt;/p&gt;&lt;p&gt; IMPORTANT: This class is &lt;em&gt;not&lt;/em&gt; intended to be subclassed.
(2909) {702576} [702850]: &lt;p&gt; &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;(none)&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;Selection&lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; IMPORTANT: This class is &lt;em&gt;not&lt;/em&gt; intended to be subclassed.
(2942) {709497} [709772]: &lt;p&gt; &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;SINGLE, MULTI&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;Selection, DefaultSelection&lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; Note: Only one of SINGLE and MULTI may be specified.
(2943) {709773} [709869]: &lt;/p&gt;&lt;p&gt; IMPORTANT: This class is &lt;em&gt;not&lt;/em&gt; intended to be subclassed.
(3052) {735206} [735350]: &lt;/p&gt; &lt;p&gt; Classes which implement this interface are described within SWT as providing the &lt;em&gt;untyped listener&lt;/em&gt; API.
(3081) {738332} [738671]: &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;BAR, DROP_DOWN, POP_UP, NO_RADIO_GROUP&lt;/dd&gt; &lt;dd&gt;LEFT_TO_RIGHT, RIGHT_TO_LEFT&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;Help, Hide, Show &lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; Note: Only one of BAR, DROP_DOWN and POP_UP may be specified.
(3082) {738672} [738732]: Only one of LEFT_TO_RIGHT or RIGHT_TO_LEFT may be specified.
(3083) {738733} [738829]: &lt;/p&gt;&lt;p&gt; IMPORTANT: This class is &lt;em&gt;not&lt;/em&gt; intended to be subclassed.
(3168) {763487} [763888]: &lt;p&gt;&lt;ul&gt; &lt;li&gt;{@link org.eclipse.swt.SWT#MENU_MOUSE}&lt;/li&gt; &lt;li&gt;{@link org.eclipse.swt.SWT#MENU_KEYBOARD}&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * A field indicating whether the context menu was triggered by a pointing device such as a mouse (indicated by &lt;code&gt;MENU_MOUSE&lt;/code&gt;), or by a focus-based device such as a keyboard (&lt;code&gt;MENU_KEYBOARD&lt;/code&gt;).
(3171) {764276} [764425]: @param e the untyped event containing the information ------------ Returns a string containing a concise, human-readable description of the receiver.
(3185) {766934} [767253]: &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;CHECK, CASCADE, PUSH, RADIO, SEPARATOR&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;Arm, Help, Selection&lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; Note: Only one of the styles CHECK, CASCADE, PUSH, RADIO and SEPARATOR may be specified.
(3186) {767254} [767350]: &lt;/p&gt;&lt;p&gt; IMPORTANT: This class is &lt;em&gt;not&lt;/em&gt; intended to be subclassed.
(3273) {787373} [787910]: &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;ICON_ERROR, ICON_INFORMATION, ICON_QUESTION, ICON_WARNING, ICON_WORKING&lt;/dd&gt; &lt;dd&gt;OK, OK | CANCEL&lt;/dd&gt; &lt;dd&gt;YES | NO, YES | NO | CANCEL&lt;/dd&gt; &lt;dd&gt;RETRY | CANCEL&lt;/dd&gt; &lt;dd&gt;ABORT | RETRY | IGNORE&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;(none)&lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; Note: Only one of the styles ICON_ERROR, ICON_INFORMATION, ICON_QUESTION, ICON_WARNING and ICON_WORKING may be specified.
(3274) {787911} [788007]: &lt;/p&gt;&lt;p&gt; IMPORTANT: This class is &lt;em&gt;not&lt;/em&gt; intended to be subclassed.
(3328) {798105} [798254]: @param e the untyped event containing the information ------------ Returns a string containing a concise, human-readable description of the receiver.
(3378) {807034} [807183]: @param e the untyped event containing the information ------------ Returns a string containing a concise, human-readable description of the receiver.
(3415) {814290} [814367]: &lt;/p&gt; &lt;p&gt; You must dispose the path when it is no longer required.
(3421) {815320} [815397]: &lt;/p&gt; &lt;p&gt; You must dispose the path when it is no longer required.
(3424) {816317} [816394]: &lt;/p&gt; &lt;p&gt; You must dispose the path when it is no longer required.
(3426) {817118} [817250]: &lt;p&gt; The resulting arc begins at &lt;code&gt;startAngle&lt;/code&gt; and extends for &lt;code&gt;arcAngle&lt;/code&gt; degrees.
(3430) {817694} [817845]: &lt;/p&gt;&lt;p&gt; The resulting arc covers an area &lt;code&gt;width + 1&lt;/code&gt; pixels wide by &lt;code&gt;height + 1&lt;/code&gt; pixels tall.
(3467) {827292} [827372]: &lt;/p&gt; &lt;p&gt; You must dispose the pattern when it is no longer required.
(3471) {828359} [828439]: &lt;/p&gt; &lt;p&gt; You must dispose the pattern when it is no longer required.
(3475) {829763} [829843]: &lt;/p&gt; &lt;p&gt; You must dispose the pattern when it is no longer required.
(3527) {834498} [834593]: ------------ Returns a string containing a concise, human-readable description of the receiver.
(3676) {849183} [849475]: &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;SMOOTH, HORIZONTAL, VERTICAL, INDETERMINATE&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;(none)&lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; Note: Only one of the styles HORIZONTAL and VERTICAL may be specified.
(3677) {849476} [849572]: &lt;/p&gt;&lt;p&gt; IMPORTANT: This class is &lt;em&gt;not&lt;/em&gt; intended to be subclassed.
(3733) {863916} [863984]: &lt;p&gt; You must dispose the region when it is no longer required.
(3735) {864193} [864261]: &lt;p&gt; You must dispose the region when it is no longer required.
(3772) {877153} [877270]: &lt;p&gt; IMPORTANT: This class is intended to be subclassed &lt;em&gt;only&lt;/em&gt; within the SWT implementation.
(3872) {897206} [897486]: &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;HORIZONTAL, VERTICAL, SMOOTH&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;Selection&lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; Note: Only one of the styles HORIZONTAL and VERTICAL may be specified.
(3873) {897487} [897583]: &lt;/p&gt;&lt;p&gt; IMPORTANT: This class is &lt;em&gt;not&lt;/em&gt; intended to be subclassed.
(3887) {901374} [901646]: &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;HORIZONTAL, VERTICAL&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;Selection&lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; Note: Only one of the styles HORIZONTAL and VERTICAL may be specified.
(3888) {901647} [901753]: &lt;/p&gt;&lt;p&gt; &lt;p&gt; IMPORTANT: This class is &lt;em&gt;not&lt;/em&gt; intended to be subclassed.
(3915) {909673} [909966]: &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;H_SCROLL, V_SCROLL&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt; &lt;dd&gt;(none)&lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; IMPORTANT: This class is intended to be subclassed &lt;em&gt;only&lt;/em&gt; within the SWT implementation.
(3937) {916959} [917153]: &lt;/p&gt;&lt;p&gt; Scroll bars are created by specifying either &lt;code&gt;H_SCROLL&lt;/code&gt;, &lt;code&gt;V_SCROLL&lt;/code&gt; or both when creating a &lt;code&gt;Scrollable&lt;/code&gt;.
(3938) {917154} [917309]: They are accessed from the &lt;code&gt;Scrollable&lt;/code&gt; using &lt;code&gt;getHorizontalBar&lt;/code&gt; and &lt;code&gt;getVerticalBar&lt;/code&gt;.
(3939) {917310} [917365]: &lt;/p&gt;&lt;p&gt; Note: Scroll bars are not Controls.
(3943) {917714} [917997]: &lt;/p&gt; &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;HORIZONTAL, VERTICAL&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;Selection&lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; Note: Only one of the styles HORIZONTAL and VERTICAL may be specified.
(3944) {917998} [918094]: &lt;/p&gt;&lt;p&gt; IMPORTANT: This class is &lt;em&gt;not&lt;/em&gt; intended to be subclassed.
(4036) {938069} [939108]: * &lt;p&gt;&lt;b&gt;Sash&lt;/b&gt;&lt;ul&gt; &lt;li&gt;{@link org.eclipse.swt.SWT#DRAG}&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;ScrollBar and Slider&lt;/b&gt;&lt;ul&gt; &lt;li&gt;{@link org.eclipse.swt.SWT#DRAG}&lt;/li&gt; &lt;li&gt;{@link org.eclipse.swt.SWT#HOME}&lt;/li&gt; &lt;li&gt;{@link org.eclipse.swt.SWT#END}&lt;/li&gt; &lt;li&gt;{@link org.eclipse.swt.SWT#ARROW_DOWN}&lt;/li&gt; &lt;li&gt;{@link org.eclipse.swt.SWT#ARROW_UP}&lt;/li&gt; &lt;li&gt;{@link org.eclipse.swt.SWT#PAGE_DOWN}&lt;/li&gt; &lt;li&gt;{@link org.eclipse.swt.SWT#PAGE_UP}&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Table and Tree&lt;/b&gt;&lt;ul&gt; &lt;li&gt;{@link org.eclipse.swt.SWT#CHECK}&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Text&lt;/b&gt;&lt;ul&gt; &lt;li&gt;{@link org.eclipse.swt.SWT#CANCEL}&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;CoolItem and ToolItem&lt;/b&gt;&lt;ul&gt; &lt;li&gt;{@link org.eclipse.swt.SWT#ARROW}&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public int detail; The x location of the selected area.
(4048) {940280} [940429]: @param e the untyped event containing the information ------------ Returns a string containing a concise, human-readable description of the receiver.
(4085) {946067} [947207]: &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;BORDER, CLOSE, MIN, MAX, NO_MOVE, NO_TRIM, RESIZE, TITLE, ON_TOP, TOOL, SHEET&lt;/dd&gt; &lt;dd&gt;APPLICATION_MODAL, MODELESS, PRIMARY_MODAL, SYSTEM_MODAL&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;Activate, Close, Deactivate, Deiconify, Iconify&lt;/dd&gt; &lt;/dl&gt; Class &lt;code&gt;SWT&lt;/code&gt; provides two "convenience constants" for the most commonly required style combinations: &lt;dl&gt; &lt;dt&gt;&lt;code&gt;SHELL_TRIM&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt; the result of combining the constants which are required to produce a typical application top level shell: (that is, &lt;code&gt;CLOSE | TITLE | MIN | MAX | RESIZE&lt;/code&gt;) &lt;/dd&gt; &lt;dt&gt;&lt;code&gt;DIALOG_TRIM&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt; the result of combining the constants which are required to produce a typical application dialog shell: (that is, &lt;code&gt;TITLE | CLOSE | BORDER&lt;/code&gt;) &lt;/dd&gt; &lt;/dl&gt; &lt;/p&gt; &lt;p&gt; Note: Only one of the styles APPLICATION_MODAL, MODELESS, PRIMARY_MODAL and SYSTEM_MODAL may be specified.
(4086) {947208} [947304]: &lt;/p&gt;&lt;p&gt; IMPORTANT: This class is &lt;em&gt;not&lt;/em&gt; intended to be subclassed.
(4096) {949443} [949508]: It is created with style &lt;code&gt;SWT.SHELL_TRIM&lt;/code&gt;.
(4108) {951969} [952035]: It is created with style &lt;code&gt;SWT.DIALOG_TRIM&lt;/code&gt;.
(4187) {970943} [971092]: @param e the untyped event containing the information ------------ Returns a string containing a concise, human-readable description of the receiver.
(4205) {974752} [975035]: &lt;/p&gt; &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;HORIZONTAL, VERTICAL&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;Selection&lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; Note: Only one of the styles HORIZONTAL and VERTICAL may be specified.
(4206) {975036} [975132]: &lt;/p&gt;&lt;p&gt; IMPORTANT: This class is &lt;em&gt;not&lt;/em&gt; intended to be subclassed.
(4248) {985178} [985497]: &lt;/p&gt;&lt;p&gt; &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;READ_ONLY, WRAP&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;Selection, Modify, Verify&lt;/dd&gt; &lt;/dl&gt; &lt;/p&gt;&lt;p&gt; IMPORTANT: This class is &lt;em&gt;not&lt;/em&gt; intended to be subclassed.
(5027) {1127692} [1127814]: &lt;p&gt; &lt;b&gt;IMPORTANT:&lt;/b&gt; Typical application code &lt;em&gt;never&lt;/em&gt; needs to deal with this class.
(5047) {1130527} [1130801]: &lt;/p&gt;&lt;p&gt; &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;TOP, BOTTOM&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;Selection&lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; Note: Only one of the styles TOP and BOTTOM may be specified.
(5048) {1130802} [1130898]: &lt;/p&gt;&lt;p&gt; IMPORTANT: This class is &lt;em&gt;not&lt;/em&gt; intended to be subclassed.
(5082) {1139980} [1140241]: &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;(none)&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;(none)&lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; IMPORTANT: This class is &lt;em&gt;not&lt;/em&gt; intended to be subclassed.
(5116) {1149252} [1149662]: &lt;/p&gt;&lt;p&gt; &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;SINGLE, MULTI, CHECK, FULL_SELECTION, HIDE_SELECTION, VIRTUAL, NO_SCROLL&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;Selection, DefaultSelection, SetData, MeasureItem, EraseItem, PaintItem&lt;/dd&gt; &lt;/dl&gt; &lt;/p&gt;&lt;p&gt; Note: Only one of the styles SINGLE, and MULTI may be specified.
(5117) {1149663} [1149759]: &lt;/p&gt;&lt;p&gt; IMPORTANT: This class is &lt;em&gt;not&lt;/em&gt; intended to be subclassed.
(5276) {1188130} [1188434]: &lt;p&gt;&lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;LEFT, RIGHT, CENTER&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt; Move, Resize, Selection&lt;/dd&gt; &lt;/dl&gt; &lt;/p&gt;&lt;p&gt; Note: Only one of the styles LEFT, RIGHT and CENTER may be specified.
(5277) {1188435} [1188531]: &lt;/p&gt;&lt;p&gt; IMPORTANT: This class is &lt;em&gt;not&lt;/em&gt; intended to be subclassed.
(5323) {1200852} [1201113]: &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;(none)&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;(none)&lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; IMPORTANT: This class is &lt;em&gt;not&lt;/em&gt; intended to be subclassed.
(5425) {1232491} [1232952]: &lt;p&gt; &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;CENTER, ICON_CANCEL, ICON_SEARCH, LEFT, MULTI, PASSWORD, SEARCH, SINGLE, RIGHT, READ_ONLY, WRAP&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;DefaultSelection, Modify, Verify, OrientationChange&lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; Note: Only one of the styles MULTI and SINGLE may be specified, and only one of the styles LEFT, CENTER, and RIGHT may be specified.
(5431) {1233470} [1233567]: &lt;/p&gt; &lt;p&gt; IMPORTANT: This class is &lt;em&gt;not&lt;/em&gt; intended to be subclassed.
(5585) {1267129} [1267202]: &lt;p&gt; You must dispose the text layout when it is no longer required.
(5725) {1298034} [1298354]: &lt;/p&gt;&lt;p&gt; &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;FLAT, WRAP, RIGHT, HORIZONTAL, VERTICAL, SHADOW_OUT&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;(none)&lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; Note: Only one of the styles HORIZONTAL and VERTICAL may be specified.
(5726) {1298355} [1298451]: &lt;/p&gt;&lt;p&gt; IMPORTANT: This class is &lt;em&gt;not&lt;/em&gt; intended to be subclassed.
(5747) {1303889} [1304201]: &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;PUSH, CHECK, RADIO, SEPARATOR, DROP_DOWN&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;Selection&lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; Note: Only one of the styles CHECK, PUSH, RADIO, SEPARATOR and DROP_DOWN may be specified.
(5748) {1304202} [1304298]: &lt;/p&gt;&lt;p&gt; IMPORTANT: This class is &lt;em&gt;not&lt;/em&gt; intended to be subclassed.
(5810) {1320295} [1320641]: &lt;p&gt; &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;BALLOON, ICON_ERROR, ICON_INFORMATION, ICON_WARNING&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;Selection&lt;/dd&gt; &lt;/dl&gt; &lt;/p&gt;&lt;p&gt; Note: Only one of the styles ICON_ERROR, ICON_INFORMATION, and ICON_WARNING may be specified.
(5811) {1320642} [1320738]: &lt;/p&gt;&lt;p&gt; IMPORTANT: This class is &lt;em&gt;not&lt;/em&gt; intended to be subclassed.
(5862) {1333467} [1333616]: @param e the untyped event containing the information ------------ Returns a string containing a concise, human-readable description of the receiver.
(5894) {1338295} [1338577]: &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;LEFT, RIGHT, UP, DOWN, RESIZE&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;Move, Resize&lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; Note: Rectangle move behavior is assumed unless RESIZE is specified.
(5895) {1338578} [1338674]: &lt;/p&gt;&lt;p&gt; IMPORTANT: This class is &lt;em&gt;not&lt;/em&gt; intended to be subclassed.
(5936) {1349292} [1349374]: &lt;/p&gt; &lt;p&gt; You must dispose the transform when it is no longer required.
(5939) {1350143} [1350225]: &lt;/p&gt; &lt;p&gt; You must dispose the transform when it is no longer required.
(5942) {1351206} [1351288]: &lt;/p&gt; &lt;p&gt; You must dispose the transform when it is no longer required.
(5989) {1361908} [1362685]: &lt;p&gt;&lt;ul&gt; &lt;li&gt;{@link org.eclipse.swt.SWT#TRAVERSE_NONE}&lt;/li&gt; &lt;li&gt;{@link org.eclipse.swt.SWT#TRAVERSE_ESCAPE}&lt;/li&gt; &lt;li&gt;{@link org.eclipse.swt.SWT#TRAVERSE_RETURN}&lt;/li&gt; &lt;li&gt;{@link org.eclipse.swt.SWT#TRAVERSE_TAB_NEXT}&lt;/li&gt; &lt;li&gt;{@link org.eclipse.swt.SWT#TRAVERSE_TAB_PREVIOUS}&lt;/li&gt; &lt;li&gt;{@link org.eclipse.swt.SWT#TRAVERSE_ARROW_NEXT}&lt;/li&gt; &lt;li&gt;{@link org.eclipse.swt.SWT#TRAVERSE_ARROW_PREVIOUS}&lt;/li&gt; &lt;li&gt;{@link org.eclipse.swt.SWT#TRAVERSE_MNEMONIC}&lt;/li&gt; &lt;li&gt;{@link org.eclipse.swt.SWT#TRAVERSE_PAGE_NEXT}&lt;/li&gt; &lt;li&gt;{@link org.eclipse.swt.SWT#TRAVERSE_PAGE_PREVIOUS}&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * Setting this field will change the type of traversal.
(5995) {1363451} [1363600]: @param e the untyped event containing the information ------------ Returns a string containing a concise, human-readable description of the receiver.
(6008) {1365552} [1365813]: &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;(none)&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;(none)&lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; IMPORTANT: This class is &lt;em&gt;not&lt;/em&gt; intended to be subclassed.
(6018) {1368127} [1368441]: &lt;p&gt; &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;(none)&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;DefaultSelection, MenuDetect, Selection&lt;/dd&gt; &lt;/dl&gt; &lt;/p&gt;&lt;p&gt; IMPORTANT: This class is &lt;em&gt;not&lt;/em&gt; intended to be subclassed.
(6049) {1379417} [1379828]: &lt;/p&gt;&lt;p&gt; &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;SINGLE, MULTI, CHECK, FULL_SELECTION, VIRTUAL, NO_SCROLL&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;Selection, DefaultSelection, Collapse, Expand, SetData, MeasureItem, EraseItem, PaintItem&lt;/dd&gt; &lt;/dl&gt; &lt;/p&gt;&lt;p&gt; Note: Only one of the styles SINGLE and MULTI may be specified.
(6050) {1379829} [1379925]: &lt;/p&gt;&lt;p&gt; IMPORTANT: This class is &lt;em&gt;not&lt;/em&gt; intended to be subclassed.
(6184) {1413685} [1413989]: &lt;p&gt;&lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;LEFT, RIGHT, CENTER&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt; Move, Resize, Selection&lt;/dd&gt; &lt;/dl&gt; &lt;/p&gt;&lt;p&gt; Note: Only one of the styles LEFT, RIGHT and CENTER may be specified.
(6185) {1413990} [1414086]: &lt;/p&gt;&lt;p&gt; IMPORTANT: This class is &lt;em&gt;not&lt;/em&gt; intended to be subclassed.
(6234) {1427095} [1427356]: &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;(none)&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;(none)&lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; IMPORTANT: This class is &lt;em&gt;not&lt;/em&gt; intended to be subclassed.
(6355) {1458943} [1459092]: @param e the untyped event containing the information ------------ Returns a string containing a concise, human-readable description of the receiver.
(6368) {1460999} [1461292]: &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;(none)&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;Dispose&lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; IMPORTANT: This class is intended to be subclassed &lt;em&gt;only&lt;/em&gt; within the SWT implementation.
*****************************************************************
========================= CLASS #17 =============================
(70) {10504} [10631]: ------------ Constructs a new instance of this class given its parent and a style value describing its behavior and appearance.
(168) {31997} [32124]: ------------ Constructs a new instance of this class given its parent and a style value describing its behavior and appearance.
(189) {38228} [38355]: ------------ Constructs a new instance of this class given its parent and a style value describing its behavior and appearance.
(284) {60228} [60303]: ------------ Constructs a new instance of this class given only its parent.
(433) {99246} [99373]: ------------ Constructs a new instance of this class given its parent and a style value describing its behavior and appearance.
(527) {121054} [121181]: ------------ Constructs a new instance of this class given its parent and a style value describing its behavior and appearance.
(815) {202130} [202257]: ------------ Constructs a new instance of this class given its parent and a style value describing its behavior and appearance.
(930) {236275} [236402]: ------------ Constructs a new instance of this class given its parent and a style value describing its behavior and appearance.
(983) {248871} [248998]: ------------ Constructs a new instance of this class given its parent and a style value describing its behavior and appearance.
(1558) {368525} [368652]: ------------ Constructs a new instance of this class given its parent and a style value describing its behavior and appearance.
(1583) {375720} [375847]: ------------ Constructs a new instance of this class given its parent and a style value describing its behavior and appearance.
(2350) {533339} [533466]: ------------ Constructs a new instance of this class given its parent and a style value describing its behavior and appearance.
(2704) {664416} [664543]: ------------ Constructs a new instance of this class given its parent and a style value describing its behavior and appearance.
(2842) {689783} [689910]: ------------ Constructs a new instance of this class given its parent and a style value describing its behavior and appearance.
(2911) {703222} [703349]: ------------ Constructs a new instance of this class given its parent and a style value describing its behavior and appearance.
(2945) {710229} [710356]: ------------ Constructs a new instance of this class given its parent and a style value describing its behavior and appearance.
(3679) {849946} [850073]: ------------ Constructs a new instance of this class given its parent and a style value describing its behavior and appearance.
(3875) {897943} [898070]: ------------ Constructs a new instance of this class given its parent and a style value describing its behavior and appearance.
(3890) {902115} [902242]: ------------ Constructs a new instance of this class given its parent and a style value describing its behavior and appearance.
(3919) {910487} [910614]: ------------ Constructs a new instance of this class given its parent and a style value describing its behavior and appearance.
(3946) {918459} [918586]: ------------ Constructs a new instance of this class given its parent and a style value describing its behavior and appearance.
(4208) {975511} [975638]: ------------ Constructs a new instance of this class given its parent and a style value describing its behavior and appearance.
(5050) {1131277} [1131404]: ------------ Constructs a new instance of this class given its parent and a style value describing its behavior and appearance.
(5119) {1150145} [1150272]: ------------ Constructs a new instance of this class given its parent and a style value describing its behavior and appearance.
(5728) {1298827} [1298954]: ------------ Constructs a new instance of this class given its parent and a style value describing its behavior and appearance.
(5813) {1321119} [1321246]: ------------ Constructs a new instance of this class given its parent and a style value describing its behavior and appearance.
(5897) {1338941} [1339068]: ------------ Constructs a new instance of this class given its parent and a style value describing its behavior and appearance.
(6052) {1380307} [1380434]: ------------ Constructs a new instance of this class given its parent and a style value describing its behavior and appearance.
(6374) {1462129} [1462256]: ------------ Constructs a new instance of this class given its parent and a style value describing its behavior and appearance.
*****************************************************************
========================= CLASS #18 =============================
(71) {10632} [10983]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(169) {32125} [32476]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(190) {38356} [38707]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(286) {60933} [61284]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(311) {66790} [67141]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(434) {99374} [99725]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(528) {121182} [121533]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(816) {202258} [202609]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(855) {211960} [212311]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(859) {213279} [213630]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(931) {236403} [236754]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(984) {248999} [249350]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(1142) {279282} [279633]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(1162) {284909} [285260]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(1559) {368653} [369004]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(1584) {375848} [376199]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(1588) {377097} [377448]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(1614) {384467} [384818]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(1788) {414963} [415314]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(2351) {533467} [533818]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(2705) {664544} [664895]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(2737) {671042} [671393]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(2741) {672176} [672527]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(2843) {689911} [690262]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(2912) {703350} [703701]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(2946) {710357} [710708]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(3093) {741364} [741715]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(3190) {767768} [768119]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(3194) {769140} [769491]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(3278) {788928} [789279]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(3680) {850074} [850425]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(3876) {898071} [898422]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(3891) {902243} [902594]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(3920) {910615} [910966]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(3947) {918587} [918938]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(4092) {948269} [948620]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(4101) {950354} [950705]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(4113) {952992} [953343]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(4209) {975639} [975990]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(4254) {986366} [986717]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(5051) {1131405} [1131756]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(5086) {1140770} [1141121]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(5090) {1142081} [1142432]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(5120) {1150273} [1150624]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(5281) {1189063} [1189414]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(5285) {1190406} [1190757]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(5327) {1201645} [1201996]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(5331) {1202952} [1203303]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(5389) {1222503} [1222854]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(5444) {1235355} [1235706]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(5729) {1298955} [1299306]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(5752) {1304822} [1305173]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(5756) {1306204} [1306555]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(5814) {1321247} [1321598]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(5898) {1339069} [1339420]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(5902) {1340323} [1340674]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(6022) {1368968} [1369319]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(6053) {1380435} [1380786]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(6189) {1414625} [1414976]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(6193) {1415967} [1416318]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(6242) {1428563} [1428914]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(6246) {1429903} [1430254]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(6251) {1431439} [1431790]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(6255) {1432783} [1433134]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
(6375) {1462257} [1462608]: &lt;p&gt; The style value is either one of the style constants defined in class &lt;code&gt;SWT&lt;/code&gt; which is applicable to instances of this class, or must be built by &lt;em&gt;bitwise OR&lt;/em&gt;'ing together (that is, using the &lt;code&gt;int&lt;/code&gt; "|" operator) two or more of those &lt;code&gt;SWT&lt;/code&gt; style constants.
*****************************************************************
========================= CLASS #19 =============================
(72) {10984} [11065]: The class description lists the style constants that are applicable to the class.
(170) {32477} [32558]: The class description lists the style constants that are applicable to the class.
(191) {38708} [38789]: The class description lists the style constants that are applicable to the class.
(287) {61285} [61366]: The class description lists the style constants that are applicable to the class.
(312) {67142} [67223]: The class description lists the style constants that are applicable to the class.
(435) {99726} [99807]: The class description lists the style constants that are applicable to the class.
(529) {121534} [121615]: The class description lists the style constants that are applicable to the class.
(817) {202610} [202691]: The class description lists the style constants that are applicable to the class.
(856) {212312} [212393]: The class description lists the style constants that are applicable to the class.
(860) {213631} [213712]: The class description lists the style constants that are applicable to the class.
(932) {236755} [236836]: The class description lists the style constants that are applicable to the class.
(985) {249351} [249432]: The class description lists the style constants that are applicable to the class.
(1143) {279634} [279715]: The class description lists the style constants that are applicable to the class.
(1163) {285261} [285342]: The class description lists the style constants that are applicable to the class.
(1560) {369005} [369086]: The class description lists the style constants that are applicable to the class.
(1585) {376200} [376281]: The class description lists the style constants that are applicable to the class.
(1589) {377449} [377530]: The class description lists the style constants that are applicable to the class.
(1615) {384819} [384900]: The class description lists the style constants that are applicable to the class.
(1789) {415315} [415396]: The class description lists the style constants that are applicable to the class.
(2352) {533819} [533900]: The class description lists the style constants that are applicable to the class.
(2706) {664896} [664977]: The class description lists the style constants that are applicable to the class.
(2738) {671394} [671475]: The class description lists the style constants that are applicable to the class.
(2742) {672528} [672609]: The class description lists the style constants that are applicable to the class.
(2844) {690263} [690344]: The class description lists the style constants that are applicable to the class.
(2913) {703702} [703783]: The class description lists the style constants that are applicable to the class.
(2947) {710709} [710790]: The class description lists the style constants that are applicable to the class.
(3094) {741716} [741797]: The class description lists the style constants that are applicable to the class.
(3191) {768120} [768201]: The class description lists the style constants that are applicable to the class.
(3195) {769492} [769573]: The class description lists the style constants that are applicable to the class.
(3279) {789280} [789361]: The class description lists the style constants that are applicable to the class.
(3681) {850426} [850507]: The class description lists the style constants that are applicable to the class.
(3877) {898423} [898504]: The class description lists the style constants that are applicable to the class.
(3892) {902595} [902676]: The class description lists the style constants that are applicable to the class.
(3921) {910967} [911048]: The class description lists the style constants that are applicable to the class.
(3948) {918939} [919020]: The class description lists the style constants that are applicable to the class.
(4093) {948621} [948702]: The class description lists the style constants that are applicable to the class.
(4102) {950706} [950787]: The class description lists the style constants that are applicable to the class.
(4114) {953344} [953425]: The class description lists the style constants that are applicable to the class.
(4210) {975991} [976072]: The class description lists the style constants that are applicable to the class.
(4255) {986718} [986799]: The class description lists the style constants that are applicable to the class.
(5052) {1131757} [1131838]: The class description lists the style constants that are applicable to the class.
(5087) {1141122} [1141203]: The class description lists the style constants that are applicable to the class.
(5091) {1142433} [1142514]: The class description lists the style constants that are applicable to the class.
(5121) {1150625} [1150706]: The class description lists the style constants that are applicable to the class.
(5282) {1189415} [1189496]: The class description lists the style constants that are applicable to the class.
(5286) {1190758} [1190839]: The class description lists the style constants that are applicable to the class.
(5328) {1201997} [1202078]: The class description lists the style constants that are applicable to the class.
(5332) {1203304} [1203385]: The class description lists the style constants that are applicable to the class.
(5390) {1222855} [1222936]: The class description lists the style constants that are applicable to the class.
(5445) {1235707} [1235788]: The class description lists the style constants that are applicable to the class.
(5730) {1299307} [1299388]: The class description lists the style constants that are applicable to the class.
(5753) {1305174} [1305255]: The class description lists the style constants that are applicable to the class.
(5757) {1306556} [1306637]: The class description lists the style constants that are applicable to the class.
(5815) {1321599} [1321680]: The class description lists the style constants that are applicable to the class.
(5899) {1339421} [1339502]: The class description lists the style constants that are applicable to the class.
(5903) {1340675} [1340756]: The class description lists the style constants that are applicable to the class.
(6023) {1369320} [1369401]: The class description lists the style constants that are applicable to the class.
(6054) {1380787} [1380868]: The class description lists the style constants that are applicable to the class.
(6190) {1414977} [1415058]: The class description lists the style constants that are applicable to the class.
(6194) {1416319} [1416400]: The class description lists the style constants that are applicable to the class.
(6243) {1428915} [1428996]: The class description lists the style constants that are applicable to the class.
(6247) {1430255} [1430336]: The class description lists the style constants that are applicable to the class.
(6252) {1431791} [1431872]: The class description lists the style constants that are applicable to the class.
(6256) {1433135} [1433216]: The class description lists the style constants that are applicable to the class.
(6376) {1462609} [1462690]: The class description lists the style constants that are applicable to the class.
*****************************************************************
========================= CLASS #20 =============================
(73) {11066} [11114]: Style bits are also inherited from superclasses.
(171) {32559} [32607]: Style bits are also inherited from superclasses.
(192) {38790} [38838]: Style bits are also inherited from superclasses.
(288) {61367} [61415]: Style bits are also inherited from superclasses.
(313) {67224} [67272]: Style bits are also inherited from superclasses.
(436) {99808} [99856]: Style bits are also inherited from superclasses.
(530) {121616} [121664]: Style bits are also inherited from superclasses.
(818) {202692} [202740]: Style bits are also inherited from superclasses.
(857) {212394} [212442]: Style bits are also inherited from superclasses.
(861) {213713} [213761]: Style bits are also inherited from superclasses.
(933) {236837} [236885]: Style bits are also inherited from superclasses.
(986) {249433} [249481]: Style bits are also inherited from superclasses.
(1144) {279716} [279764]: Style bits are also inherited from superclasses.
(1164) {285343} [285391]: Style bits are also inherited from superclasses.
(1561) {369087} [369135]: Style bits are also inherited from superclasses.
(1586) {376282} [376330]: Style bits are also inherited from superclasses.
(1590) {377531} [377579]: Style bits are also inherited from superclasses.
(1616) {384901} [384949]: Style bits are also inherited from superclasses.
(1790) {415397} [415445]: Style bits are also inherited from superclasses.
(2353) {533901} [533949]: Style bits are also inherited from superclasses.
(2707) {664978} [665026]: Style bits are also inherited from superclasses.
(2739) {671476} [671524]: Style bits are also inherited from superclasses.
(2743) {672610} [672658]: Style bits are also inherited from superclasses.
(2845) {690345} [690393]: Style bits are also inherited from superclasses.
(2914) {703784} [703832]: Style bits are also inherited from superclasses.
(2948) {710791} [710839]: Style bits are also inherited from superclasses.
(3095) {741798} [741846]: Style bits are also inherited from superclasses.
(3192) {768202} [768250]: Style bits are also inherited from superclasses.
(3196) {769574} [769622]: Style bits are also inherited from superclasses.
(3280) {789362} [789410]: Style bits are also inherited from superclasses.
(3682) {850508} [850556]: Style bits are also inherited from superclasses.
(3878) {898505} [898553]: Style bits are also inherited from superclasses.
(3893) {902677} [902725]: Style bits are also inherited from superclasses.
(3922) {911049} [911097]: Style bits are also inherited from superclasses.
(3949) {919021} [919069]: Style bits are also inherited from superclasses.
(4094) {948703} [948751]: Style bits are also inherited from superclasses.
(4103) {950788} [950836]: Style bits are also inherited from superclasses.
(4115) {953426} [953474]: Style bits are also inherited from superclasses.
(4211) {976073} [976121]: Style bits are also inherited from superclasses.
(4256) {986800} [986848]: Style bits are also inherited from superclasses.
(5053) {1131839} [1131887]: Style bits are also inherited from superclasses.
(5088) {1141204} [1141252]: Style bits are also inherited from superclasses.
(5092) {1142515} [1142563]: Style bits are also inherited from superclasses.
(5122) {1150707} [1150755]: Style bits are also inherited from superclasses.
(5283) {1189497} [1189545]: Style bits are also inherited from superclasses.
(5287) {1190840} [1190888]: Style bits are also inherited from superclasses.
(5329) {1202079} [1202127]: Style bits are also inherited from superclasses.
(5333) {1203386} [1203434]: Style bits are also inherited from superclasses.
(5391) {1222937} [1222985]: Style bits are also inherited from superclasses.
(5446) {1235789} [1235837]: Style bits are also inherited from superclasses.
(5731) {1299389} [1299437]: Style bits are also inherited from superclasses.
(5754) {1305256} [1305304]: Style bits are also inherited from superclasses.
(5758) {1306638} [1306686]: Style bits are also inherited from superclasses.
(5816) {1321681} [1321729]: Style bits are also inherited from superclasses.
(5900) {1339503} [1339551]: Style bits are also inherited from superclasses.
(5904) {1340757} [1340805]: Style bits are also inherited from superclasses.
(6024) {1369402} [1369450]: Style bits are also inherited from superclasses.
(6055) {1380869} [1380917]: Style bits are also inherited from superclasses.
(6191) {1415059} [1415107]: Style bits are also inherited from superclasses.
(6195) {1416401} [1416449]: Style bits are also inherited from superclasses.
(6244) {1428997} [1429045]: Style bits are also inherited from superclasses.
(6248) {1430337} [1430385]: Style bits are also inherited from superclasses.
(6253) {1431873} [1431921]: Style bits are also inherited from superclasses.
(6257) {1433217} [1433265]: Style bits are also inherited from superclasses.
(6377) {1462691} [1462739]: Style bits are also inherited from superclasses.
*****************************************************************
========================= CLASS #21 =============================
(74) {11115} [12069]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT#ARROW @see SWT#CHECK @see SWT#PUSH @see SWT#RADIO @see SWT#TOGGLE @see SWT#FLAT @see SWT#UP @see SWT#DOWN @see SWT#LEFT @see SWT#RIGHT @see SWT#CENTER @see Widget#checkSubclass @see Widget#getStyle ------------ Adds the listener to the collection of listeners who will be notified when the control is selected by the user, by sending it one of the messages defined in the &lt;code&gt;SelectionListener&lt;/code&gt; interface.
(75) {12070} [12171]: &lt;p&gt; &lt;code&gt;widgetSelected&lt;/code&gt; is called when the control is selected by the user.
(76) {12172} [12233]: &lt;code&gt;widgetDefaultSelected&lt;/code&gt; is not called.
(77) {12234} [12487]: &lt;/p&gt; &lt;p&gt; When the &lt;code&gt;SWT.RADIO&lt;/code&gt; style bit is set, the &lt;code&gt;widgetSelected&lt;/code&gt; method is also called when the receiver loses selection because another item in the same radio group was selected by the user.
(78) {12488} [12655]: During &lt;code&gt;widgetSelected&lt;/code&gt; the application can use &lt;code&gt;getSelection()&lt;/code&gt; to determine the current selected state of the receiver.
(79) {12656} [13251]: &lt;/p&gt; @param listener the listener which should be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SelectionListener @see #removeSelectionListener @see SelectionEvent ------------ Returns a value which describes the position of the text or image in the receiver.
(81) {13644} [13998]: @return the alignment @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver is grayed, and false otherwise.
(83) {14086} [14453]: @return the grayed state of the checkbox @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.4 ------------ Returns the receiver's image if it has one, or null if it does not.
(84) {14455} [14758]: @return the receiver's image @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the widget message.
(86) {14915} [15288]: @return the widget message @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.3 ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver is selected, and false otherwise.
(90) {15584} [16006]: @return the selection state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's text, which will be an empty string if it has never been set or if the receiver is an &lt;code&gt;ARROW&lt;/code&gt; button.
(91) {16008} [16399]: @return the receiver's text @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Removes the listener from the collection of listeners who will be notified when the control is selected by the user.
(92) {16401} [16960]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SelectionListener @see #addSelectionListener ------------ Controls how text, images and arrows will be displayed in the receiver.
(94) {17353} [17781]: @param alignment the new alignment @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the button's background color to the color specified by the argument, or to the default system color for the control if the argument is null.
(99) {18176} [18741]: &lt;/p&gt; @param color the new color (or null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the argument has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's image to the argument, which may be &lt;code&gt;null&lt;/code&gt; indicating that no image should be displayed.
(102) {18989} [19510]: &lt;/p&gt; @param image the image to display on the receiver (may be &lt;code&gt;null&lt;/code&gt;) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the image has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the grayed state of the receiver.
(104) {19597} [19915]: @param grayed the new grayed state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.4 ------------ Sets the widget message.
(106) {20072} [20644]: @param message the new message @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the string is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.3 ------------ Sets the selection state of the receiver, if it is of type &lt;code&gt;CHECK&lt;/code&gt;, &lt;code&gt;RADIO&lt;/code&gt;, or &lt;code&gt;TOGGLE&lt;/code&gt;.
(109) {20876} [21188]: @param selected the new selection state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's text.
(120) {22160} [22635]: &lt;/p&gt; @param string the new text @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the text is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ====== Callback.java ====== Copyright (c) 2000, 2012 IBM Corporation and others.
(139) {26411} [26539]: See Bug 510538 &lt;/p&gt; &lt;p&gt; Note: &lt;ul&gt; &lt;li&gt; Array support is not implemented/supported by this constructor.
(143) {26902} [28091]: like: &lt;code&gt; long &amp;#47;*int*&amp;#47;&lt;/code&gt; &lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; &lt;p&gt;The following types are supported: &lt;br&gt; &lt;ul&gt; &lt;li&gt;void (for return values only) &lt;/li&gt; &lt;li&gt;int&lt;/li&gt; &lt;li&gt;long&lt;/li&gt; &lt;li&gt;byte&lt;/li&gt; &lt;li&gt;char&lt;/li&gt; &lt;li&gt;double&lt;/li&gt; &lt;li&gt;float&lt;/li&gt; &lt;li&gt;short&lt;/li&gt; &lt;li&gt;boolean&lt;/li&gt; &lt;/ul&gt; &lt;p&gt; For example if you want to link the following method: &lt;br&gt; &lt;code&gt; void myMethod(long &amp;#47;*int*&amp;#47; arg1, double arg2) &lt;/code&gt; &lt;br&gt; Then you would call this callback like:&lt;br&gt; &lt;code&gt; Callback (this, "myMethod", void.class, new Type []{long.class, double.class}); &lt;/code&gt; &lt;/p&gt; @param object the object to send the message to @param method method the name of the method to invoke @param returnType specify the type like &lt;code&gt;void.class, long.class, double.class &lt;/code&gt; @param arguments specify the list of arguments like &lt;code&gt; new Type [] {long.class, double.class } &lt;/code&gt; ------------ Allocates the native level resources associated with the callback.
(161) {30585} [30674]: &lt;/p&gt; ------------ Releases the native level resources associated with the callback.
(162) {30676} [30769]: @see #dispose ====== Canvas.java ====== Copyright (c) 2000, 2013 IBM Corporation and others.
(172) {32608} [33179]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;/ul&gt; @see SWT @see Widget#getStyle ------------ Fills the interior of the rectangle specified by the arguments, with the receiver's background.
(173) {33181} [33925]: @param gc the gc where the rectangle is to be filled @param x the x coordinate of the rectangle to be filled @param y the y coordinate of the rectangle to be filled @param width the width of the rectangle to be filled @param height the height of the rectangle to be filled @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the gc is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the gc has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.2 ------------ Returns the caret.
(176) {34228} [34551]: &lt;/p&gt; @return the caret for the receiver, may be null @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the IME.
(177) {34553} [35019]: @return the IME @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.4 ------------ Scrolls a rectangular area of the receiver by first copying the source area to the destination and then causing the area of the source which is not covered by the destination to be repainted.
(180) {35252} [35892]: @param destX the x coordinate of the destination @param destY the y coordinate of the destination @param x the x coordinate of the source @param y the y coordinate of the source @param width the width of the area @param height the height of the area @param all &lt;code&gt;true&lt;/code&gt;if children should be scrolled, and &lt;code&gt;false&lt;/code&gt; otherwise @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's caret.
(183) {36195} [36670]: &lt;/p&gt; @param caret the new caret for the receiver, may be null @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the caret has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's IME.
(184) {36672} [37183]: @param ime the new IME for the receiver, may be null @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the IME has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.4 ====== Caret.java ====== Copyright (c) 2000, 2012 IBM Corporation and others.
(193) {38839} [39554]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT @see Widget#checkSubclass @see Widget#getStyle ------------ Returns a rectangle describing the receiver's size and location relative to its parent (or its display if its parent is null).
(194) {39556} [39918]: @return the receiver's bounding rectangle @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the font that the receiver will use to paint textual information.
(195) {39920} [40259]: @return the receiver's font @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the image that the receiver will use to paint the caret.
(196) {40261} [40650]: @return the receiver's image @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns a point describing the receiver's location relative to its parent (or its display if its parent is null).
(197) {40652} [41010]: @return the receiver's location @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's parent, which must be a &lt;code&gt;Canvas&lt;/code&gt;.
(198) {41012} [41336]: @return the receiver's parent @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns a point describing the receiver's size.
(199) {41338} [41724]: @return the receiver's size @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver is visible, and &lt;code&gt;false&lt;/code&gt; otherwise.
(201) {41946} [42403]: &lt;/p&gt; @return the receiver's visibility state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver is visible and all of the receiver's ancestors are visible and &lt;code&gt;false&lt;/code&gt; otherwise.
(202) {42405} [42799]: @return the receiver's visibility state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #getVisible ------------ Sets the receiver's size and location to the rectangular area specified by the arguments.
(203) {42800} [42949]: The &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; arguments are relative to the receiver's parent (or its display if its parent is null).
(204) {42951} [43470]: @param x the new x coordinate for the receiver @param y the new y coordinate for the receiver @param width the new width for the receiver @param height the new height for the receiver @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's size and location to the rectangular area specified by the argument.
(205) {43471} [43634]: The &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; fields of the rectangle are relative to the receiver's parent (or its display if its parent is null).
(206) {43636} [44108]: @param rect the new bounds for the receiver @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the font that the receiver will use to paint textual information to the font specified by the argument, or to the default font for that kind of control if the argument is null.
(207) {44110} [45271]: @param font the new font (or null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the font has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the image that the receiver will use to paint the caret to the image specified by the argument, or to the default which is a filled rectangle if the argument is null @param image the new image (or null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the image has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's location to the point specified by the arguments which are relative to the receiver's parent (or its display if its parent is null).
(208) {45273} [45764]: @param x the new x coordinate for the receiver @param y the new y coordinate for the receiver @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's location to the point specified by the argument which is relative to the receiver's parent (or its display if its parent is null).
(209) {45766} [46128]: @param location the new location for the receiver @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's size to the point specified by the arguments.
(210) {46130} [46531]: @param width the new width for the receiver @param height the new height for the receiver @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's size to the point specified by the argument.
(211) {46533} [47060]: @param size the new extent for the receiver @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the point is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Marks the receiver as visible if the argument is &lt;code&gt;true&lt;/code&gt;, and marks it invisible otherwise.
(213) {47239} [47603]: &lt;/p&gt; @param visible the new visibility state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ====== Color.java ====== Copyright (c) 2000, 2015 IBM Corporation and others.
(253) {54760} [55045]: @param object the object to compare with this object @return &lt;code&gt;true&lt;/code&gt; if the object is the same as this object and &lt;code&gt;false&lt;/code&gt; otherwise @see #hashCode ------------ Returns the amount of alpha in the color, from 0 (transparent) to 255 (opaque).
(254) {55047} [55297]: @return the alpha component of the color @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.104 ------------ Returns the amount of blue in the color, from 0 to 255.
(255) {55299} [55536]: @return the blue component of the color @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns the amount of green in the color, from 0 to 255.
(256) {55538} [55774]: @return the green component of the color @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns the amount of red in the color, from 0 to 255.
(257) {55776} [56022]: @return the red component of the color @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns an &lt;code&gt;RGB&lt;/code&gt; representing the receiver.
(258) {56024} [56262]: @return the RGB for the color @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns an &lt;code&gt;RGBA&lt;/code&gt; representing the receiver.
(259) {56264} [56495]: @return the RGBA for the color @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.104 ------------ Returns an integer hash code for the receiver.
(260) {56496} [56644]: Any two objects that return &lt;code&gt;true&lt;/code&gt; when passed to &lt;code&gt;equals&lt;/code&gt; must return the same value for this method.
(261) {56646} [56771]: @return the receiver's hash @see #equals ------------ Allocates the operating system resources associated with the receiver.
(268) {57595} [57800]: @return &lt;code&gt;true&lt;/code&gt; when the color is disposed and &lt;code&gt;false&lt;/code&gt; otherwise ------------ Returns a string containing a concise, human-readable description of the receiver.
(279) {59187} [59270]: ====== ColorDialog.java ====== Copyright (c) 2000, 2012 IBM Corporation and others.
(285) {60305} [60932]: @param parent a composite control which will be the parent of the new instance @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT @see Widget#checkSubclass @see Widget#getStyle ------------ Constructs a new instance of this class given its parent and a style value describing its behavior and appearance.
(289) {61416} [62058]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT @see Widget#checkSubclass @see Widget#getStyle ------------ Returns the currently selected color in the receiver.
(292) {62466} [62876]: @return the selected color, or null if the dialog was cancelled, no color was selected, or an error occurred @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's selected color to be the argument.
(294) {63217} [63498]: @param rgbs the array of RGBs, which may be null @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if an RGB in the rgbs array is null&lt;/li&gt; &lt;/ul&gt; @since 3.8 ====== Combo.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(299) {64325} [64607]: &lt;p&gt; Note: Since &lt;code&gt;Combo&lt;/code&gt;s can contain both a list and an editable text field, it is possible to confuse methods which access one versus the other (compare for example, &lt;code&gt;clearSelection()&lt;/code&gt; and &lt;code&gt;deselectAll()&lt;/code&gt;).
(314) {67273} [67959]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT#DROP_DOWN @see SWT#READ_ONLY @see SWT#SIMPLE @see Widget#checkSubclass @see Widget#getStyle ------------ Adds the argument to the end of the receiver's list.
(317) {68084} [68590]: &lt;/p&gt; @param string the new item @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the string is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #add(String,int) ------------ Adds the argument to the receiver's list at the given zero-relative index.
(318) {68591} [68769]: &lt;p&gt; Note: To add an item at the end of the list, use the result of calling &lt;code&gt;getItemCount()&lt;/code&gt; as the index or use &lt;code&gt;add(String)&lt;/code&gt;.
(321) {68909} [69705]: &lt;/p&gt; @param string the new item @param index the index for the item @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the string is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_RANGE - if the index is not between 0 and the number of elements in the list (inclusive)&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #add(String) ------------ Adds the listener to the collection of listeners who will be notified when the receiver's text is modified, by sending it one of the messages defined in the &lt;code&gt;ModifyListener&lt;/code&gt; interface.
(322) {69707} [70206]: @param listener the listener which should be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see ModifyListener @see #removeModifyListener ------------ Adds a segment listener.
(330) {70921} [71662]: &lt;/p&gt; @param listener the listener which should be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SegmentEvent @see SegmentListener @see #removeSegmentListener @since 3.103 ------------ Adds the listener to the collection of listeners who will be notified when the user changes the receiver's selection, by sending it one of the messages defined in the &lt;code&gt;SelectionListener&lt;/code&gt; interface.
(331) {71663} [71772]: &lt;p&gt; &lt;code&gt;widgetSelected&lt;/code&gt; is called when the user changes the combo's list selection.
(332) {71773} [71884]: &lt;code&gt;widgetDefaultSelected&lt;/code&gt; is typically called when ENTER is pressed the combo's text area.
(333) {71885} [72605]: &lt;/p&gt; @param listener the listener which should be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SelectionListener @see #removeSelectionListener @see SelectionEvent ------------ Adds the listener to the collection of listeners who will be notified when the receiver's text is verified, by sending it one of the messages defined in the &lt;code&gt;VerifyListener&lt;/code&gt; interface.
(334) {72607} [73205]: @param listener the listener which should be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see VerifyListener @see #removeVerifyListener @since 3.1 ------------ Sets the selection in the receiver's text field to an empty selection starting just before the first character.
(336) {73305} [73416]: &lt;p&gt; Note: To clear the selected items in the receiver's list, use &lt;code&gt;deselectAll()&lt;/code&gt;.
(337) {73417} [73719]: &lt;/p&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #deselectAll ------------ Copies the selected text.
(339) {73780} [74073]: &lt;/p&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 2.1 ------------ Cuts the selected text.
(341) {74173} [74518]: &lt;/p&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 2.1 ------------ Deselects the item at the given zero-relative index in the receiver's list.
(344) {74636} [74982]: @param index the index of the item to deselect @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Deselects all selected items in the receiver's list.
(345) {74983} [75098]: &lt;p&gt; Note: To clear the selection in the receiver's text field, use &lt;code&gt;clearSelection()&lt;/code&gt;.
(346) {75099} [75457]: &lt;/p&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #clearSelection ------------ Returns a point describing the location of the caret relative to the receiver.
(347) {75459} [75805]: @return a point, the location of the caret @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.8 ------------ Returns the character position of the caret.
(349) {75840} [76219]: &lt;/p&gt; @return the position of the caret @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.8 ------------ Returns the item at the given, zero-relative index in the receiver's list.
(351) {76271} [76851]: @param index the index of the item to return @return the item at the given index @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_RANGE - if the index is not between 0 and the number of elements in the list minus 1 (inclusive)&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the number of items contained in the receiver's list.
(352) {76853} [77251]: @return the number of items @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the height of the area which would be used to display &lt;em&gt;one&lt;/em&gt; of the items in the receiver's list.
(353) {77253} [77643]: @return the height of one item @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns a (possibly empty) array of &lt;code&gt;String&lt;/code&gt;s which are the items in the receiver's list.
(355) {77798} [78216]: &lt;/p&gt; @return the items in the receiver's list @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver's list is visible, and &lt;code&gt;false&lt;/code&gt; otherwise.
(357) {78438} [78876]: &lt;/p&gt; @return the receiver's list's visibility state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.4 ------------ Marks the receiver's list as visible if the argument is &lt;code&gt;true&lt;/code&gt;, and marks it invisible otherwise.
(359) {79055} [79406]: &lt;/p&gt; @param visible the new visibility state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.4 ------------ Returns the orientation of the receiver.
(360) {79408} [79942]: @return the orientation style @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 2.1.2 ------------ Returns a &lt;code&gt;Point&lt;/code&gt; whose x coordinate is the character position representing the start of the selection in the receiver's text field, and whose y coordinate is the character position representing the end of the selection.
(364) {80151} [80592]: &lt;/p&gt; @return a point representing the selection start and end @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the zero-relative index of the item which is currently selected in the receiver's list, or -1 if no item is selected.
(365) {80594} [81005]: @return the index of the selected item @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns a string containing a copy of the contents of the receiver's text field, or an empty string if there are no contents.
(366) {81007} [81331]: @return the receiver's text @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the height of the receivers's text field.
(367) {81333} [81698]: @return the text height @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the maximum number of characters that the receiver's text field is capable of holding.
(368) {81699} [81833]: If this has not been changed by &lt;code&gt;setTextLimit()&lt;/code&gt;, it will be the constant &lt;code&gt;Combo.LIMIT&lt;/code&gt;.
(369) {81835} [82208]: @return the text limit @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #LIMIT ------------ Gets the number of items that are visible in the drop down portion of the receiver's list.
(371) {82315} [82786]: &lt;/p&gt; @return the number of items that are visible @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.0 ------------ Searches the receiver's list starting at the first item (index 0) until an item is found that is equal to the argument, and returns the index of that item.
(373) {82821} [83413]: @param string the search item @return the index of the item @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the string is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Searches the receiver's list starting at the given, zero-relative index until an item is found that is equal to the argument, and returns the index of that item.
(375) {83486} [84010]: @param string the search item @param start the zero-relative index at which to begin the search @return the index of the item @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the string is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Pastes text from clipboard.
(377) {84108} [84453]: &lt;/p&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 2.1 ------------ Removes the item from the receiver's list at the given zero-relative index.
(378) {84455} [85048]: @param index the index for the item @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_RANGE - if the index is not between 0 and the number of elements in the list minus 1 (inclusive)&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Removes the items from the receiver's list which are between the given zero-relative start and end indices (inclusive).
(379) {85050} [85717]: @param start the start of the range @param end the end of the range @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_RANGE - if either the start or end are not between 0 and the number of elements in the list minus 1 (inclusive)&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Searches the receiver's list starting at the first item until an item is found that is equal to the argument, and removes that item from the list.
(380) {85719} [86306]: @param string the item to remove @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the string is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the string is not found in the list&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Removes all of the items from the receiver's list and clear the contents of receiver's text field.
(381) {86307} [86675]: &lt;p&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Removes the listener from the collection of listeners who will be notified when the receiver's text is modified.
(382) {86677} [87271]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see ModifyListener @see #addModifyListener ------------ Removes the listener from the collection of listeners who will be notified when the receiver's text is modified.
(383) {87273} [87911]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SegmentEvent @see SegmentListener @see #addSegmentListener @since 3.103 ------------ Removes the listener from the collection of listeners who will be notified when the user changes the receiver's selection.
(384) {87913} [88505]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SelectionListener @see #addSelectionListener ------------ Removes the listener from the collection of listeners who will be notified when the control is verified.
(385) {88507} [89074]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see VerifyListener @see #addVerifyListener @since 3.1 ------------ Selects the item at the given zero-relative index in the receiver's list.
(388) {89188} [89585]: @param index the index of the item to select @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the text of the item in the receiver's list at the given zero-relative index to the string argument.
(389) {89587} [90222]: @param index the index for the item @param string the new text for the item @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_RANGE - if the index is not between 0 and the number of elements in the list minus 1 (inclusive)&lt;/li&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the string is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's list to be the given array of items.
(390) {90224} [90878]: @param items the array of items @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the items array is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if an item in the items array is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the orientation of the receiver, which must be one of the constants &lt;code&gt;SWT.LEFT_TO_RIGHT&lt;/code&gt; or &lt;code&gt;SWT.RIGHT_TO_LEFT&lt;/code&gt;.
(391) {90879} [91379]: &lt;p&gt; @param orientation new orientation style @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 2.1.2 ------------ Sets the selection in the receiver's text field to the range specified by the argument whose x coordinate is the start of the selection and whose y coordinate is the end of the selection.
(392) {91381} [91888]: @param selection a point representing the new selection start and end @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the point is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the contents of the receiver's text field to the given string.
(394) {92003} [92143]: &lt;/p&gt; &lt;p&gt; Note: The text field in a &lt;code&gt;Combo&lt;/code&gt; is typically only capable of displaying a single line of text.
(398) {92416} [92936]: &lt;/p&gt; @param string the new text @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the string is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the maximum number of characters that the receiver's text field is capable of holding to be the argument.
(399) {92937} [93038]: &lt;p&gt; To reset this value to the default, use &lt;code&gt;setTextLimit(Combo.LIMIT)&lt;/code&gt;.
(400) {93039} [93179]: Specifying a limit value larger than &lt;code&gt;Combo.LIMIT&lt;/code&gt; sets the receiver's limit to &lt;code&gt;Combo.LIMIT&lt;/code&gt;.
(401) {93180} [93693]: &lt;/p&gt; @param limit new text limit @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_CANNOT_BE_ZERO - if the limit is zero&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #LIMIT ------------ Sets the number of items that are visible in the drop down portion of the receiver's list.
(403) {93800} [94195]: &lt;/p&gt; @param count the new number of items to be visible @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.0 ====== Compatibility.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(409) {94874} [94992]: &lt;/p&gt; &lt;ul&gt; &lt;li&gt;Exceptions thrown may differ since J2ME's set of exceptions is a subset of J2SE's one.
(410) {94993} [95074]: &lt;/li&gt; &lt;li&gt;The range of the mathematic functions is subject to change.
(411) {95075} [95143]: &lt;/li&gt; &lt;/ul&gt; ------------ Answers the most negative (i.e.
(420) {96121} [96474]: @param n an int value between 0 and 30 (inclusive) @return 2 raised to the power of the argument @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_RANGE - if the argument is not between 0 and 30 (inclusive)&lt;/li&gt; &lt;/ul&gt; ------------ Execute prog[0] in a separate platform process if the underlying platform supports this.
(428) {98225} [98457]: They can be used with &lt;code&gt;Composite&lt;/code&gt; if you are drawing your own, but their behavior is undefined if they are used with subclasses of &lt;code&gt;Composite&lt;/code&gt; other than &lt;code&gt;Canvas&lt;/code&gt;.
(437) {99857} [100625]: &lt;/p&gt; @param parent a widget which will be the parent of the new instance (cannot be null) @param style the style of widget to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;/ul&gt; @see SWT#NO_BACKGROUND @see SWT#NO_FOCUS @see SWT#NO_MERGE_PAINTS @see SWT#NO_REDRAW_RESIZE @see SWT#NO_RADIO_GROUP @see SWT#EMBEDDED @see SWT#DOUBLE_BUFFERED @see Widget#getStyle ------------ Clears any data that has been cached by a Layout for all widgets that are in the parent hierarchy of the changed control up to and including the receiver.
(439) {100682} [101475]: @param changed an array of controls that changed state and require a recalculation of size @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed&lt;/li&gt; &lt;li&gt;ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @deprecated use {@link Composite#layout(Control[], int)} instead @since 3.1 ------------ Copies a rectangular area of the receiver at the specified position using the gc.
(440) {101477} [102286]: @param gc the gc where the rectangle is to be filled @param x the x coordinate of the rectangle to be filled @param y the y coordinate of the rectangle to be filled @param width the width of the rectangle to be filled @param height the height of the rectangle to be filled @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the gc is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the gc has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Fills the interior of the rectangle specified by the arguments, with the receiver's background.
(441) {102288} [102476]: &lt;p&gt;The &lt;code&gt;offsetX&lt;/code&gt; and &lt;code&gt;offsetY&lt;/code&gt; are used to map from the &lt;code&gt;gc&lt;/code&gt; origin to the origin of the parent image background.
(442) {102477} [103418]: This is useful to ensure proper alignment of the image background.&lt;/p&gt; @param gc the gc where the rectangle is to be filled @param x the x coordinate of the rectangle to be filled @param y the y coordinate of the rectangle to be filled @param width the width of the rectangle to be filled @param height the height of the rectangle to be filled @param offsetX the image background x offset @param offsetY the image background y offset @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the gc is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the gc has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.6 ------------ Returns the receiver's background drawing mode.
(443) {103419} [103630]: This will be one of the following constants defined in class &lt;code&gt;SWT&lt;/code&gt;: &lt;code&gt;INHERIT_NONE&lt;/code&gt;, &lt;code&gt;INHERIT_DEFAULT&lt;/code&gt;, &lt;code&gt;INHERIT_FORCE&lt;/code&gt;.
(444) {103632} [103997]: @return the background mode @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SWT @since 3.2 ------------ Returns a (possibly empty) array containing the receiver's children.
(449) {104349} [104770]: &lt;/p&gt; @return an array of children @see Control#moveAbove @see Control#moveBelow @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns layout which is associated with the receiver, or null if one has not been set.
(450) {104772} [105113]: @return the receiver's layout or null @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Gets the (possibly empty) tabbing order for the control.
(451) {105115} [105590]: @return tabList the ordered list of controls representing the tab order @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #setTabList ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver has deferred the performing of layout, and &lt;code&gt;false&lt;/code&gt; otherwise.
(452) {105592} [106122]: @return the receiver's deferred layout state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #setLayoutDeferred(boolean) @see #isLayoutDeferred() @since 3.1 ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver or any ancestor up to and including the receiver's nearest ancestor shell has deferred the performing of layouts.
(453) {106124} [106178]: Otherwise, &lt;code&gt;false&lt;/code&gt; is returned.
(454) {106180} [106686]: @return the receiver's deferred layout state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #setLayoutDeferred(boolean) @see #getLayoutDeferred() @since 3.1 ------------ If the receiver has a layout, asks the layout to &lt;em&gt;lay out&lt;/em&gt; (that is, set the size and location of) the receiver's children.
(463) {107451} [107851]: &lt;/p&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ If the receiver has a layout, asks the layout to &lt;em&gt;lay out&lt;/em&gt; (that is, set the size and location of) the receiver's children.
(464) {107852} [107988]: If the argument is &lt;code&gt;true&lt;/code&gt; the layout must not rely on any information it has cached about the immediate children.
(475) {109133} [109661]: &lt;/p&gt; @param changed &lt;code&gt;true&lt;/code&gt; if the layout must flush its caches, and &lt;code&gt;false&lt;/code&gt; otherwise @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ If the receiver has a layout, asks the layout to &lt;em&gt;lay out&lt;/em&gt; (that is, set the size and location of) the receiver's children.
(476) {109662} [109796]: If the changed argument is &lt;code&gt;true&lt;/code&gt; the layout must not rely on any information it has cached about its children.
(488) {111157} [111866]: &lt;/p&gt; @param changed &lt;code&gt;true&lt;/code&gt; if the layout must flush its caches, and &lt;code&gt;false&lt;/code&gt; otherwise @param all &lt;code&gt;true&lt;/code&gt; if all children in the receiver's widget tree should be laid out, and &lt;code&gt;false&lt;/code&gt; otherwise @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Forces a lay out (that is, sets the size and location) of all widgets that are in the parent hierarchy of the changed control up to and including the receiver.
(497) {112708} [113531]: &lt;/p&gt; @param changed a control that has had a state change which requires a recalculation of its size @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed&lt;/li&gt; &lt;li&gt;ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Forces a lay out (that is, sets the size and location) of all widgets that are in the parent hierarchy of the changed control up to and including the receiver.
(504) {114827} [115166]: &lt;/p&gt; &lt;p&gt; The &lt;code&gt;SWT.DEFER&lt;/code&gt; flag always causes the layout to be deferred by calling &lt;code&gt;Composite.setLayoutDeferred(true)&lt;/code&gt; and scheduling a call to &lt;code&gt;Composite.setLayoutDeferred(false)&lt;/code&gt;, which will happen when appropriate (usually before the next event is handled).
(505) {115167} [115284]: When this flag is set, the application should not call &lt;code&gt;Composite.setLayoutDeferred(boolean)&lt;/code&gt;.
(509) {115502} [116475]: &lt;/p&gt; @param changed a control that has had a state change which requires a recalculation of its size @param flags the flags specifying how the layout should happen @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if any of the controls in changed is null or has been disposed&lt;/li&gt; &lt;li&gt;ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.6 ------------ Sets the background drawing mode to the argument which should be one of the following constants defined in class &lt;code&gt;SWT&lt;/code&gt;: &lt;code&gt;INHERIT_NONE&lt;/code&gt;, &lt;code&gt;INHERIT_DEFAULT&lt;/code&gt;, &lt;code&gt;INHERIT_FORCE&lt;/code&gt;.
(510) {116477} [116873]: @param mode the new background mode @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SWT @since 3.2 ------------ Sets the layout which is associated with the receiver to be the argument which may be null.
(511) {116875} [117309]: @param layout the receiver's new layout or null @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ If the argument is &lt;code&gt;true&lt;/code&gt;, causes subsequent layout operations in the receiver or any of its children to be ignored.
(513) {117413} [117628]: Layout operations that occurred while the flag was &lt;code&gt;true&lt;/code&gt; are remembered and when the flag is set to &lt;code&gt;false&lt;/code&gt;, the layout operations are performed in an optimized manner.
(515) {117672} [118117]: @param defer the new defer state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #layout(boolean) @see #layout(Control[]) @since 3.1 ------------ Sets the tabbing order for the specified controls to match the order that they occur in the argument list.
(516) {118119} [118773]: @param tabList the ordered list of controls representing the tab order or null @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if a widget in the tabList is null or has been disposed&lt;/li&gt; &lt;li&gt;ERROR_INVALID_PARENT - if widget in the tabList is not in the same widget tree&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ====== Control.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(531) {121665} [122515]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT#BORDER @see SWT#LEFT_TO_RIGHT @see SWT#RIGHT_TO_LEFT @see Widget#checkSubclass @see Widget#getStyle ------------ Adds the listener to the collection of listeners who will be notified when the control is moved or resized, by sending it one of the messages defined in the &lt;code&gt;ControlListener&lt;/code&gt; interface.
(532) {122517} [123195]: @param listener the listener which should be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see ControlListener @see #removeControlListener ------------ Adds the listener to the collection of listeners who will be notified when a drag gesture occurs, by sending it one of the messages defined in the &lt;code&gt;DragDetectListener&lt;/code&gt; interface.
(533) {123197} [123899]: @param listener the listener which should be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see DragDetectListener @see #removeDragDetectListener @since 3.3 ------------ Adds the listener to the collection of listeners who will be notified when the control gains or loses focus, by sending it one of the messages defined in the &lt;code&gt;FocusListener&lt;/code&gt; interface.
(534) {123901} [124595]: @param listener the listener which should be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see FocusListener @see #removeFocusListener ------------ Adds the listener to the collection of listeners who will be notified when gesture events are generated for the control, by sending it one of the messages defined in the &lt;code&gt;GestureListener&lt;/code&gt; interface.
(538) {125011} [125749]: &lt;/p&gt; @param listener the listener which should be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see GestureListener @see #removeGestureListener @see #setTouchEnabled @since 3.7 ------------ Adds the listener to the collection of listeners who will be notified when help events are generated for the control, by sending it one of the messages defined in the &lt;code&gt;HelpListener&lt;/code&gt; interface.
(539) {125751} [126447]: @param listener the listener which should be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see HelpListener @see #removeHelpListener ------------ Adds the listener to the collection of listeners who will be notified when keys are pressed and released on the system keyboard, by sending it one of the messages defined in the &lt;code&gt;KeyListener&lt;/code&gt; interface.
(546) {127012} [127727]: &lt;/p&gt; @param listener the listener which should be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see KeyListener @see #removeKeyListener ------------ Adds the listener to the collection of listeners who will be notified when the platform-specific context menu trigger has occurred, by sending it one of the messages defined in the &lt;code&gt;MenuDetectListener&lt;/code&gt; interface.
(547) {127729} [128437]: @param listener the listener which should be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see MenuDetectListener @see #removeMenuDetectListener @since 3.3 ------------ Adds the listener to the collection of listeners who will be notified when mouse buttons are pressed and released, by sending it one of the messages defined in the &lt;code&gt;MouseListener&lt;/code&gt; interface.
(548) {128439} [129132]: @param listener the listener which should be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see MouseListener @see #removeMouseListener ------------ Adds the listener to the collection of listeners who will be notified when the mouse passes or hovers over controls, by sending it one of the messages defined in the &lt;code&gt;MouseTrackListener&lt;/code&gt; interface.
(549) {129134} [129811]: @param listener the listener which should be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see MouseTrackListener @see #removeMouseTrackListener ------------ Adds the listener to the collection of listeners who will be notified when the mouse moves, by sending it one of the messages defined in the &lt;code&gt;MouseMoveListener&lt;/code&gt; interface.
(550) {129813} [130501]: @param listener the listener which should be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see MouseMoveListener @see #removeMouseMoveListener ------------ Adds the listener to the collection of listeners who will be notified when the mouse wheel is scrolled, by sending it one of the messages defined in the &lt;code&gt;MouseWheelListener&lt;/code&gt; interface.
(551) {130503} [131205]: @param listener the listener which should be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see MouseWheelListener @see #removeMouseWheelListener @since 3.3 ------------ Adds the listener to the collection of listeners who will be notified when the receiver needs to be painted, by sending it one of the messages defined in the &lt;code&gt;PaintListener&lt;/code&gt; interface.
(552) {131207} [131873]: @param listener the listener which should be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see PaintListener @see #removePaintListener ------------ Adds the listener to the collection of listeners who will be notified when touch events occur, by sending it one of the messages defined in the &lt;code&gt;TouchListener&lt;/code&gt; interface.
(556) {132208} [132927]: &lt;/p&gt; @param listener the listener which should be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see TouchListener @see #removeTouchListener @see #setTouchEnabled @since 3.7 ------------ Adds the listener to the collection of listeners who will be notified when traversal events occur, by sending it one of the messages defined in the &lt;code&gt;TraverseListener&lt;/code&gt; interface.
(557) {132929} [133463]: @param listener the listener which should be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see TraverseListener @see #removeTraverseListener ------------ Returns the preferred size (in points) of the receiver.
(558) {133464} [133574]: &lt;p&gt; The &lt;em&gt;preferred size&lt;/em&gt; of a control is the size that it would best be displayed at.
(561) {133915} [134571]: &lt;/p&gt; @param wHint the width hint (can be &lt;code&gt;SWT.DEFAULT&lt;/code&gt;) @param hHint the height hint (can be &lt;code&gt;SWT.DEFAULT&lt;/code&gt;) @return the preferred size of the control @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see Layout @see #getBorderWidth @see #getBounds @see #getSize @see #pack(boolean) @see "computeTrim, getClientArea for controls that implement them" ------------ Returns the preferred size (in points) of the receiver.
(562) {134572} [134682]: &lt;p&gt; The &lt;em&gt;preferred size&lt;/em&gt; of a control is the size that it would best be displayed at.
(565) {135023} [135281]: &lt;/p&gt;&lt;p&gt; If the changed flag is &lt;code&gt;true&lt;/code&gt;, it indicates that the receiver's &lt;em&gt;contents&lt;/em&gt; have changed, therefore any caches that a layout manager containing the control may have been keeping need to be flushed.
(566) {135282} [135409]: When the control is resized, the changed flag will be &lt;code&gt;false&lt;/code&gt;, so layout manager caches can be retained.
(567) {135410} [135743]: &lt;/p&gt; @param wHint the width hint (can be &lt;code&gt;SWT.DEFAULT&lt;/code&gt;) @param hHint the height hint (can be &lt;code&gt;SWT.DEFAULT&lt;/code&gt;) @param changed &lt;code&gt;true&lt;/code&gt; if the control's contents have changed, and &lt;code&gt;false&lt;/code&gt; otherwise @return the preferred size of the control.
(568) {135745} [136174]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see Layout @see #getBorderWidth @see #getBounds @see #getSize @see #pack(boolean) @see "computeTrim, getClientArea for controls that implement them" ------------ Detects a drag and drop gesture.
(574) {136785} [136940]: &lt;/p&gt; @param event the mouse down event @return &lt;code&gt;true&lt;/code&gt; if the gesture occurred, and &lt;code&gt;false&lt;/code&gt; otherwise.
(575) {136942} [137447]: @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT if the event is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see DragDetectListener @see #addDragDetectListener @see #getDragDetect @see #setDragDetect @since 3.3 ------------ Detects a drag and drop gesture.
(581) {138058} [138213]: &lt;/p&gt; @param event the mouse down event @return &lt;code&gt;true&lt;/code&gt; if the gesture occurred, and &lt;code&gt;false&lt;/code&gt; otherwise.
(582) {138215} [138807]: @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT if the event is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see DragDetectListener @see #addDragDetectListener @see #getDragDetect @see #setDragDetect @since 3.3 ------------ Forces the receiver to have the &lt;em&gt;keyboard focus&lt;/em&gt;, causing all keyboard events to be delivered to it.
(583) {138809} [138928]: @return &lt;code&gt;true&lt;/code&gt; if the control got focus, and &lt;code&gt;false&lt;/code&gt; if it was unable to.
(584) {138930} [139239]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #setFocus ------------ Returns the accessible object for the receiver.
(587) {139412} [139837]: &lt;/p&gt; @return the accessible object @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see Accessible#addAccessibleListener @see Accessible#addAccessibleControlListener @since 2.0 ------------ Returns the receiver's background color.
(590) {140031} [140358]: &lt;/p&gt; @return the background color @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's background image.
(591) {140360} [140694]: @return the background image @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.2 ------------ Returns the receiver's border width in points.
(592) {140696} [141136]: @return the border width @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns a rectangle describing the receiver's size and location in points relative to its parent (or its display if its parent is null), unless the receiver is a shell.
(594) {141193} [141544]: @return the receiver's bounding rectangle @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's cursor, or null if it has not been set.
(596) {141657} [142119]: &lt;/p&gt; @return the receiver's cursor or &lt;code&gt;null&lt;/code&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.3 ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver is detecting drag gestures, and &lt;code&gt;false&lt;/code&gt; otherwise.
(597) {142121} [142532]: @return the receiver's drag detect state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.3 ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver is enabled, and &lt;code&gt;false&lt;/code&gt; otherwise.
(599) {142650} [143024]: @return the receiver's enabled state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #isEnabled ------------ Returns the font that the receiver will use to paint textual information.
(600) {143026} [143365]: @return the receiver's font @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the foreground color that the receiver will use to draw.
(601) {143367} [143712]: @return the receiver's foreground color @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns layout data which is associated with the receiver.
(602) {143714} [144151]: @return the receiver's layout data @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns a point describing the receiver's location relative to its parent in points (or its display if its parent is null), unless the receiver is a shell.
(604) {144205} [144557]: @return the receiver's location @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's pop up menu if it has one, or null if it does not.
(607) {144796} [145102]: @return the receiver's menu @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's monitor.
(608) {145104} [145559]: @return the receiver's monitor @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.0 ------------ Returns the orientation of the receiver, which will be one of the constants &lt;code&gt;SWT.LEFT_TO_RIGHT&lt;/code&gt; or &lt;code&gt;SWT.RIGHT_TO_LEFT&lt;/code&gt;.
(609) {145561} [146022]: @return the orientation style @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.7 ------------ Returns the receiver's parent, which must be a &lt;code&gt;Composite&lt;/code&gt; or null when the receiver is a shell that was created with null or a display for a parent.
(610) {146024} [146404]: @return the receiver's parent @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the region that defines the shape of the control, or null if the control has the default shape.
(611) {146406} [146759]: @return the region that defines the shape of the shell (or null) @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.4 ------------ Returns the receiver's shell.
(614) {146924} [147274]: @return the receiver's shell @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #getParent ------------ Returns a point describing the receiver's size in points.
(615) {147275} [147335]: The x coordinate of the result is the width of the receiver.
(616) {147336} [147397]: The y coordinate of the result is the height of the receiver.
(617) {147399} [147717]: @return the receiver's size @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ calculates a slightly different color, e.g.
(622) {148042} [148250]: The bounds are not checked ------------ Returns the text direction of the receiver, which will be one of the constants &lt;code&gt;SWT.LEFT_TO_RIGHT&lt;/code&gt; or &lt;code&gt;SWT.RIGHT_TO_LEFT&lt;/code&gt;.
(623) {148252} [148615]: @return the text direction style @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.102 ------------ Returns the receiver's tool tip text, or null if it has not been set.
(624) {148617} [149062]: @return the receiver's tool tip text @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns &lt;code&gt;true&lt;/code&gt; if this control is set to send touch events, or &lt;code&gt;false&lt;/code&gt; if it is set to send gesture events instead.
(625) {149064} [149247]: This method also returns &lt;code&gt;false&lt;/code&gt; if a touch-based input device is not detected (this can be determined with &lt;code&gt;Display#getTouchEnabled()&lt;/code&gt;).
(627) {149371} [149919]: @return &lt;code&gt;true&lt;/code&gt; if the control is set to send touch events, or &lt;code&gt;false&lt;/code&gt; otherwise @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #setTouchEnabled @see Display#getTouchEnabled @since 3.7 ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver is visible, and &lt;code&gt;false&lt;/code&gt; otherwise.
(629) {150141} [150508]: &lt;/p&gt; @return the receiver's visibility state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Invokes platform specific functionality to allocate a new GC handle.
(634) {150990} [151066]: ------------ Invokes platform specific functionality to dispose a GC handle.
(639) {151551} [151717]: ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver is enabled and all ancestors up to and including the receiver's nearest ancestor shell are enabled.
(640) {151719} [151773]: Otherwise, &lt;code&gt;false&lt;/code&gt; is returned.
(642) {151891} [152322]: @return the receiver's enabled state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #getEnabled ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver has the user-interface focus, and &lt;code&gt;false&lt;/code&gt; otherwise.
(643) {152324} [153260]: @return the receiver's focus state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns &lt;code&gt;true&lt;/code&gt; if the underlying operating system supports this reparenting, otherwise &lt;code&gt;false&lt;/code&gt; @return &lt;code&gt;true&lt;/code&gt; if the widget can be reparented, otherwise &lt;code&gt;false&lt;/code&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver is visible and all ancestors up to and including the receiver's nearest ancestor shell are visible.
(644) {153261} [153315]: Otherwise, &lt;code&gt;false&lt;/code&gt; is returned.
(645) {153317} [153690]: @return the receiver's visibility state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #getVisible ------------ Moves the receiver above the specified control in the drawing order.
(648) {153899} [154448]: @param control the sibling control (or null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the control has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see Control#moveBelow @see Composite#getChildren ------------ Moves the receiver below the specified control in the drawing order.
(651) {154656} [155193]: @param control the sibling control (or null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the control has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see Control#moveAbove @see Composite#getChildren ------------ Causes the receiver to be resized to its preferred size.
(653) {155289} [155629]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #computeSize(int, int, boolean) ------------ Causes the receiver to be resized to its preferred size.
(655) {155724} [155972]: &lt;p&gt; If the changed flag is &lt;code&gt;true&lt;/code&gt;, it indicates that the receiver's &lt;em&gt;contents&lt;/em&gt; have changed, therefore any caches that a layout manager containing the control may have been keeping need to be flushed.
(656) {155973} [156100]: When the control is resized, the changed flag will be &lt;code&gt;false&lt;/code&gt;, so layout manager caches can be retained.
(657) {156101} [156502]: &lt;/p&gt; @param changed whether or not the receiver's contents have changed @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #computeSize(int, int, boolean) ------------ Prints the receiver and all children.
(658) {156504} [157227]: @param gc the gc where the drawing occurs @return &lt;code&gt;true&lt;/code&gt; if the operation was successful and &lt;code&gt;false&lt;/code&gt; otherwise @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the gc is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the gc has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.4 ------------ Requests that this control and all of its ancestors be repositioned by their layouts at the earliest opportunity.
(665) {157813} [158317]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #update() @see PaintListener @see SWT#Paint @see SWT#NO_BACKGROUND @see SWT#NO_REDRAW_RESIZE @see SWT#NO_MERGE_PAINTS @see SWT#DOUBLE_BUFFERED ------------ Causes the rectangular area of the receiver specified by the arguments to be marked as needing to be redrawn.
(667) {158431} [158616]: If the &lt;code&gt;all&lt;/code&gt; flag is &lt;code&gt;true&lt;/code&gt;, any children of the receiver which intersect with the specified area will also paint their intersecting areas.
(668) {158617} [158726]: If the &lt;code&gt;all&lt;/code&gt; flag is &lt;code&gt;false&lt;/code&gt;, the children will not be painted.
(669) {158728} [159529]: @param x the x coordinate of the area to draw @param y the y coordinate of the area to draw @param width the width of the area to draw @param height the height of the area to draw @param all &lt;code&gt;true&lt;/code&gt; if children should redraw, and &lt;code&gt;false&lt;/code&gt; otherwise @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #update() @see PaintListener @see SWT#Paint @see SWT#NO_BACKGROUND @see SWT#NO_REDRAW_RESIZE @see SWT#NO_MERGE_PAINTS @see SWT#DOUBLE_BUFFERED ------------ Removes the listener from the collection of listeners who will be notified when the control is moved or resized.
(670) {159531} [160117]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see ControlListener @see #addControlListener ------------ Removes the listener from the collection of listeners who will be notified when a drag gesture occurs.
(671) {160119} [160734]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see DragDetectListener @see #addDragDetectListener @since 3.3 ------------ Removes the listener from the collection of listeners who will be notified when the control gains or loses focus.
(672) {160736} [161341]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see FocusListener @see #addFocusListener ------------ Removes the listener from the collection of listeners who will be notified when gesture events are generated for the control.
(673) {161343} [161965]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see GestureListener @see #addGestureListener @since 3.7 ------------ Removes the listener from the collection of listeners who will be notified when the help events are generated for the control.
(674) {161967} [162578]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see HelpListener @see #addHelpListener ------------ Removes the listener from the collection of listeners who will be notified when keys are pressed and released on the system keyboard.
(675) {162580} [163192]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see KeyListener @see #addKeyListener ------------ Removes the listener from the collection of listeners who will be notified when the platform-specific context menu trigger has occurred.
(676) {163194} [163817]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see MenuDetectListener @see #addMenuDetectListener @since 3.3 ------------ Removes the listener from the collection of listeners who will be notified when the mouse passes or hovers over controls.
(677) {163819} [164428]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see MouseTrackListener @see #addMouseTrackListener ------------ Removes the listener from the collection of listeners who will be notified when mouse buttons are pressed and released.
(678) {164430} [165006]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see MouseListener @see #addMouseListener ------------ Removes the listener from the collection of listeners who will be notified when the mouse moves.
(679) {165008} [165604]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see MouseMoveListener @see #addMouseMoveListener ------------ Removes the listener from the collection of listeners who will be notified when the mouse wheel is scrolled.
(680) {165606} [166221]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see MouseWheelListener @see #addMouseWheelListener @since 3.3 ------------ Removes the listener from the collection of listeners who will be notified when the receiver needs to be painted.
(681) {166223} [166802]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see PaintListener @see #addPaintListener ------------ Removes the listener from the collection of listeners who will be notified when touch events occur.
(682) {166804} [167399]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see TouchListener @see #addTouchListener @since 3.7 ------------ Removes the listener from the collection of listeners who will be notified when traversal events occur.
(683) {167401} [167908]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see TraverseListener @see #addTraverseListener ------------ Feature in Windows 7.
(693) {171830} [172035]: control.defaultBackground() : control.background); } } Sets the receiver's background color to the color specified by the argument, or to the default system color for the control if the argument is null.
(696) {172182} [172764]: &lt;/p&gt; @param color the new color (or null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the argument has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's background image to the image specified by the argument, or to the default system color for the control if the argument is null.
(700) {172975} [173598]: &lt;/p&gt; @param image the new image (or null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the argument has been disposed&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the argument is not a bitmap&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.2 ------------ Sets the receiver's size and location in points to the rectangular area specified by the arguments.
(701) {173599} [173780]: The &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; arguments are relative to the receiver's parent (or its display if its parent is null), unless the receiver is a shell.
(702) {173781} [173895]: In this case, the &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; arguments are relative to the display.
(705) {174205} [174746]: &lt;/p&gt; @param x the new x coordinate for the receiver @param y the new y coordinate for the receiver @param width the new width for the receiver @param height the new height for the receiver @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's size and location in points to the rectangular area specified by the argument.
(706) {174747} [174910]: The &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; fields of the rectangle are relative to the receiver's parent (or its display if its parent is null).
(709) {175220} [175713]: &lt;/p&gt; @param rect the new bounds for the receiver @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ If the argument is &lt;code&gt;true&lt;/code&gt;, causes the receiver to have all mouse events delivered to it until the method is called with &lt;code&gt;false&lt;/code&gt; as the argument.
(711) {175811} [176316]: @param capture &lt;code&gt;true&lt;/code&gt; to capture the mouse, and &lt;code&gt;false&lt;/code&gt; to release it @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's cursor to the cursor specified by the argument, or to the default cursor for that kind of control if the argument is null.
(713) {176429} [176904]: &lt;/p&gt; @param cursor the new cursor (or null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the argument has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's drag detect state.
(714) {176905} [177036]: If the argument is &lt;code&gt;true&lt;/code&gt;, the receiver will detect drag gestures, otherwise these gestures will be ignored.
(715) {177038} [177438]: @param dragDetect the new drag detect state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.3 ------------ Enables the receiver if the argument is &lt;code&gt;true&lt;/code&gt;, and disables it otherwise.
(717) {177556} [177963]: @param enabled the new enabled state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Causes the receiver to have the &lt;em&gt;keyboard focus&lt;/em&gt;, such that all keyboard events will be delivered to it.
(719) {178031} [178150]: @return &lt;code&gt;true&lt;/code&gt; if the control got focus, and &lt;code&gt;false&lt;/code&gt; if it was unable to.
(720) {178152} [178597]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #forceFocus ------------ Sets the font that the receiver will use to paint textual information to the font specified by the argument, or to the default font for that kind of control if the argument is null.
(721) {178599} [179168]: @param font the new font (or null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the argument has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's foreground color to the color specified by the argument, or to the default system color for the control if the argument is null.
(723) {179249} [179749]: &lt;/p&gt; @param color the new color (or null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the argument has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the layout data associated with the receiver to the argument.
(725) {179808} [180238]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's location to the point specified by the arguments which are relative to the receiver's parent (or its display if its parent is null), unless the receiver is a shell.
(727) {180292} [180817]: @param x the new x coordinate for the receiver @param y the new y coordinate for the receiver @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's location to the point specified by the arguments which are relative to the receiver's parent (or its display if its parent is null), unless the receiver is a shell.
(729) {180871} [181216]: @param location the new location for the receiver @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's pop up menu to the argument.
(734) {181620} [182370]: &lt;/p&gt; @param menu the new pop up menu @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_MENU_NOT_POP_UP - the menu is not a pop up menu&lt;/li&gt; &lt;li&gt;ERROR_INVALID_PARENT - if the menu is not in the same widget tree&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the menu has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the orientation of the receiver, which must be one of the constants &lt;code&gt;SWT.LEFT_TO_RIGHT&lt;/code&gt; or &lt;code&gt;SWT.RIGHT_TO_LEFT&lt;/code&gt;.
(735) {182371} [182800]: &lt;p&gt; @param orientation new orientation style @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.7 ------------ If the argument is &lt;code&gt;false&lt;/code&gt;, causes subsequent drawing operations in the receiver to be ignored.
(737) {182881} [182974]: Graphics operations that occurred while the flag was &lt;code&gt;false&lt;/code&gt; are lost.
(738) {182975} [183083]: When the flag is set to &lt;code&gt;true&lt;/code&gt;, the entire widget is marked as needing to be redrawn.
(741) {183231} [183653]: &lt;/p&gt; @param redraw the new redraw state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #redraw(int, int, int, int, boolean) @see #update() ------------ Sets the shape of the control to the region specified by the argument.
(743) {183729} [184263]: @param region the region that defines the shape of the control (or null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the region has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.4 ------------ Sets the receiver's size to the point specified by the arguments.
(746) {184573} [185006]: &lt;/p&gt; @param width the new width in points for the receiver @param height the new height in points for the receiver @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's size to the point specified by the argument.
(749) {185310} [185780]: &lt;/p&gt; @param size the new size in points for the receiver @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the point is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the base text direction (a.k.a.
(750) {185781} [185996]: "paragraph direction") of the receiver, which must be one of the constants &lt;code&gt;SWT.LEFT_TO_RIGHT&lt;/code&gt;, &lt;code&gt;SWT.RIGHT_TO_LEFT&lt;/code&gt;, or &lt;code&gt;SWT.AUTO_TEXT_DIRECTION&lt;/code&gt;.
(751) {185997} [186141]: &lt;p&gt; &lt;code&gt;setOrientation&lt;/code&gt; would override this value with the text direction that is consistent with the new orientation.
(754) {186299} [186864]: &lt;/p&gt; @param textDirection the base text direction style @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SWT#LEFT_TO_RIGHT @see SWT#RIGHT_TO_LEFT @see SWT#AUTO_TEXT_DIRECTION @see SWT#FLIP_TEXT_DIRECTION @since 3.102 ------------ Sets the receiver's tool tip text to the argument, which may be null indicating that the default tool tip for the control will be shown.
(758) {187259} [187644]: &lt;/p&gt; @param string the new tool tip text (or null) @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets whether this control should send touch events (by default controls do not).
(759) {187645} [187743]: Setting this to &lt;code&gt;false&lt;/code&gt; causes the receiver to send gesture events instead.
(760) {187745} [187895]: No exception is thrown if a touch-based input device is not detected (this can be determined with &lt;code&gt;Display#getTouchEnabled()&lt;/code&gt;).
(761) {187897} [188330]: @param enabled the new touch-enabled state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; @see Display#getTouchEnabled @since 3.7 ------------ Marks the receiver as visible if the argument is &lt;code&gt;true&lt;/code&gt;, and marks it invisible otherwise.
(763) {188509} [188964]: &lt;/p&gt; @param visible the new visibility state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns a point which is the result of converting the argument, which is specified in display relative coordinates, to coordinates relative to the receiver.
(765) {189119} [189687]: &lt;/p&gt; @param x the x coordinate in points to be translated @param y the y coordinate in points to be translated @return the translated coordinates @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 2.1 ------------ Returns a point which is the result of converting the argument, which is specified in display relative coordinates, to coordinates relative to the receiver.
(767) {189842} [190474]: &lt;/p&gt; @param point the point to be translated (must not be null) @return the translated coordinates @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the point is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns a point which is the result of converting the argument, which is specified in coordinates relative to the receiver, to display relative coordinates.
(769) {190629} [191177]: &lt;/p&gt; @param x the x coordinate to be translated @param y the y coordinate to be translated @return the translated coordinates @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 2.1 ------------ Returns a point which is the result of converting the argument, which is specified in coordinates relative to the receiver, to display relative coordinates.
(771) {191332} [191885]: &lt;/p&gt; @param point the point to be translated (must not be null) @return the translated coordinates @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the point is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Based on the argument, perform one of the expected platform traversal action.
(772) {191886} [192331]: The argument should be one of the constants: &lt;code&gt;SWT.TRAVERSE_ESCAPE&lt;/code&gt;, &lt;code&gt;SWT.TRAVERSE_RETURN&lt;/code&gt;, &lt;code&gt;SWT.TRAVERSE_TAB_NEXT&lt;/code&gt;, &lt;code&gt;SWT.TRAVERSE_TAB_PREVIOUS&lt;/code&gt;, &lt;code&gt;SWT.TRAVERSE_ARROW_NEXT&lt;/code&gt;, &lt;code&gt;SWT.TRAVERSE_ARROW_PREVIOUS&lt;/code&gt;, &lt;code&gt;SWT.TRAVERSE_PAGE_NEXT&lt;/code&gt; and &lt;code&gt;SWT.TRAVERSE_PAGE_PREVIOUS&lt;/code&gt;.
(773) {192333} [192754]: @param traversal the type of traversal @return true if the traversal succeeded @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Performs a platform traversal action corresponding to a &lt;code&gt;KeyDown&lt;/code&gt; event.
(774) {192756} [193284]: &lt;p&gt;Valid traversal values are &lt;code&gt;SWT.TRAVERSE_NONE&lt;/code&gt;, &lt;code&gt;SWT.TRAVERSE_MNEMONIC&lt;/code&gt;, &lt;code&gt;SWT.TRAVERSE_ESCAPE&lt;/code&gt;, &lt;code&gt;SWT.TRAVERSE_RETURN&lt;/code&gt;, &lt;code&gt;SWT.TRAVERSE_TAB_NEXT&lt;/code&gt;, &lt;code&gt;SWT.TRAVERSE_TAB_PREVIOUS&lt;/code&gt;, &lt;code&gt;SWT.TRAVERSE_ARROW_NEXT&lt;/code&gt;, &lt;code&gt;SWT.TRAVERSE_ARROW_PREVIOUS&lt;/code&gt;, &lt;code&gt;SWT.TRAVERSE_PAGE_NEXT&lt;/code&gt; and &lt;code&gt;SWT.TRAVERSE_PAGE_PREVIOUS&lt;/code&gt;.
(775) {193285} [193452]: If &lt;code&gt;traversal&lt;/code&gt; is &lt;code&gt;SWT.TRAVERSE_NONE&lt;/code&gt; then the Traverse event is created with standard values based on the KeyDown event.
(776) {193454} [193655]: If &lt;code&gt;traversal&lt;/code&gt; is one of the other traversal constants then the Traverse event is created with this detail, and its &lt;code&gt;doit&lt;/code&gt; is taken from the KeyDown event.
(777) {193656} [194378]: &lt;/p&gt; @param traversal the type of traversal, or &lt;code&gt;SWT.TRAVERSE_NONE&lt;/code&gt; to compute this from &lt;code&gt;event&lt;/code&gt; @param event the KeyDown event @return &lt;code&gt;true&lt;/code&gt; if the traversal succeeded @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT if the event is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.6 ------------ Performs a platform traversal action corresponding to a &lt;code&gt;KeyDown&lt;/code&gt; event.
(778) {194380} [194908]: &lt;p&gt;Valid traversal values are &lt;code&gt;SWT.TRAVERSE_NONE&lt;/code&gt;, &lt;code&gt;SWT.TRAVERSE_MNEMONIC&lt;/code&gt;, &lt;code&gt;SWT.TRAVERSE_ESCAPE&lt;/code&gt;, &lt;code&gt;SWT.TRAVERSE_RETURN&lt;/code&gt;, &lt;code&gt;SWT.TRAVERSE_TAB_NEXT&lt;/code&gt;, &lt;code&gt;SWT.TRAVERSE_TAB_PREVIOUS&lt;/code&gt;, &lt;code&gt;SWT.TRAVERSE_ARROW_NEXT&lt;/code&gt;, &lt;code&gt;SWT.TRAVERSE_ARROW_PREVIOUS&lt;/code&gt;, &lt;code&gt;SWT.TRAVERSE_PAGE_NEXT&lt;/code&gt; and &lt;code&gt;SWT.TRAVERSE_PAGE_PREVIOUS&lt;/code&gt;.
(779) {194909} [195076]: If &lt;code&gt;traversal&lt;/code&gt; is &lt;code&gt;SWT.TRAVERSE_NONE&lt;/code&gt; then the Traverse event is created with standard values based on the KeyDown event.
(780) {195078} [195279]: If &lt;code&gt;traversal&lt;/code&gt; is one of the other traversal constants then the Traverse event is created with this detail, and its &lt;code&gt;doit&lt;/code&gt; is taken from the KeyDown event.
(781) {195280} [196003]: &lt;/p&gt; @param traversal the type of traversal, or &lt;code&gt;SWT.TRAVERSE_NONE&lt;/code&gt; to compute this from &lt;code&gt;event&lt;/code&gt; @param event the KeyDown event @return &lt;code&gt;true&lt;/code&gt; if the traversal succeeded @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT if the event is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.6 ------------ Forces all outstanding paint requests for the widget to be processed before this method returns.
(784) {196126} [196589]: &lt;/p&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #redraw() @see #redraw(int, int, int, int, boolean) @see PaintListener @see SWT#Paint ------------ Changes the parent of the widget to be the one provided if the underlying operating system supports this feature.
(785) {196590} [196666]: Returns &lt;code&gt;true&lt;/code&gt; if the parent is successfully changed.
(787) {196714} [196822]: @return &lt;code&gt;true&lt;/code&gt; if the parent is changed and &lt;code&gt;false&lt;/code&gt; otherwise.
(788) {196824} [197373]: @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the argument has been disposed&lt;/li&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is &lt;code&gt;null&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ====== ControlAdapter.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(810) {201033} [201156]: &lt;p&gt; The item children that may be added to instances of this class must be of type &lt;code&gt;CoolItem&lt;/code&gt;.
(819) {202741} [203461]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT @see SWT#FLAT @see SWT#HORIZONTAL @see SWT#VERTICAL @see Widget#checkSubclass @see Widget#getStyle ------------ Returns the item that is currently displayed at the given, zero-relative index.
(821) {203513} [204100]: @param index the visual index of the item to return @return the item at the given visual index @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_RANGE - if the index is not between 0 and the number of elements in the list minus 1 (inclusive)&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the number of items contained in the receiver.
(822) {204102} [204525]: @return the number of items @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns an array of zero-relative ints that map the creation order of the receiver's items to the order in which they are currently being displayed.
(825) {204870} [205298]: &lt;/p&gt; @return the current visual order of the receiver's items @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns an array of &lt;code&gt;CoolItem&lt;/code&gt;s in the order in which they are currently being displayed.
(827) {205453} [205957]: &lt;/p&gt; @return the receiver's items in their current visual order @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns an array of points whose x and y coordinates describe the widths and heights (respectively) of the items in the receiver in the order in which they are currently being displayed.
(828) {205959} [206318]: @return the receiver's item sizes in their current visual order @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns whether or not the receiver is 'locked'.
(830) {206380} [206819]: @return true if the coolbar is locked, false otherwise @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 2.0 ------------ Returns an array of ints that describe the zero-relative indices of any item(s) in the receiver that will begin on a new row.
(832) {206916} [207472]: @return an array containing the receiver's wrap indices, or an empty array if all items are in one row @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Searches the receiver's items in the order they are currently being displayed, starting at the first item (index 0), until an item is found that is equal to the argument, and returns the index of that item.
(834) {207507} [208129]: @param item the search item @return the visual order index of the search item, or -1 if the item is not found @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the item is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the item is disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's item order, wrap indices, and item sizes all at once.
(837) {208406} [208519]: &lt;/p&gt;&lt;p&gt; The wrap indices are the indices of all item(s) in the receiver that will begin on a new row.
(841) {208743} [208951]: &lt;/p&gt;&lt;p&gt; The sizes are specified in an array of points whose x and y coordinates describe the new widths and heights (respectively) of the receiver's items in the order specified by the item order.
(842) {208952} [209742]: &lt;/p&gt; @param itemOrder an array of indices that describe the new order to display the items in @param wrapIndices an array of wrap indices, or null @param sizes an array containing the new sizes for each of the receiver's items in visual order @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if item order or sizes is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if item order or sizes is not the same length as the number of items&lt;/li&gt; &lt;/ul&gt; ------------ Sets whether or not the receiver is 'locked'.
(844) {209804} [210209]: @param locked lock the coolbar if true, otherwise unlock the coolbar @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 2.0 ------------ Sets the indices of all item(s) in the receiver that will begin on a new row.
(845) {210210} [210289]: The indices are given in the order in which they are currently being displayed.
(848) {210445} [210809]: @param indices an array of wrap indices, or null @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ====== CoolItem.java ====== Copyright (c) 2000, 2012 IBM Corporation and others.
(853) {211713} [211891]: ------------ Constructs a new instance of this class given its parent (which must be a &lt;code&gt;CoolBar&lt;/code&gt;) and a style value describing its behavior and appearance.
(858) {212443} [213278]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT#DROP_DOWN @see Widget#checkSubclass @see Widget#getStyle ------------ Constructs a new instance of this class given its parent (which must be a &lt;code&gt;CoolBar&lt;/code&gt;), a style value describing its behavior and appearance, and the index at which to place it in the items maintained by its parent.
(862) {213762} [214784]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @param index the zero-relative index at which to store the receiver in its parent @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_RANGE - if the index is not between 0 and the number of elements in the parent (inclusive)&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT#DROP_DOWN @see Widget#checkSubclass @see Widget#getStyle ------------ Adds the listener to the collection of listeners that will be notified when the control is selected by the user, by sending it one of the messages defined in the &lt;code&gt;SelectionListener&lt;/code&gt; interface.
(864) {215151} [215212]: &lt;code&gt;widgetDefaultSelected&lt;/code&gt; is not called.
(865) {215213} [215822]: &lt;/p&gt; @param listener the listener which should be notified when the control is selected by the user @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SelectionListener @see #removeSelectionListener @see SelectionEvent @since 2.0 ------------ Returns the preferred size of the receiver.
(866) {215823} [215959]: &lt;p&gt; The &lt;em&gt;preferred size&lt;/em&gt; of a &lt;code&gt;CoolItem&lt;/code&gt; is the size that it would best be displayed at.
(869) {216294} [216945]: &lt;/p&gt; @param wHint the width hint (can be &lt;code&gt;SWT.DEFAULT&lt;/code&gt;) @param hHint the height hint (can be &lt;code&gt;SWT.DEFAULT&lt;/code&gt;) @return the preferred size @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see Layout @see #getBounds @see #getSize @see Control#getBorderWidth @see Scrollable#computeTrim @see Scrollable#getClientArea ------------ Returns a rectangle describing the receiver's size and location relative to its parent.
(870) {216947} [217293]: @return the receiver's bounding rectangle @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the control that is associated with the receiver.
(871) {217295} [217676]: @return the control that is contained by the receiver @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's parent, which must be a &lt;code&gt;CoolBar&lt;/code&gt;.
(872) {217678} [218025]: @return the receiver's parent @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the control that is associated with the receiver to the argument.
(873) {218027} [218625]: @param control the new control that will be contained by the receiver @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the control has been disposed&lt;/li&gt; &lt;li&gt;ERROR_INVALID_PARENT - if the control is not in the same widget tree&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns a point describing the receiver's ideal size.
(874) {218626} [218692]: The x coordinate of the result is the ideal width of the receiver.
(875) {218693} [218760]: The y coordinate of the result is the ideal height of the receiver.
(876) {218762} [219114]: @return the receiver's ideal size @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's ideal size to the point specified by the arguments.
(877) {219116} [219535]: @param width the new ideal width for the receiver @param height the new ideal height for the receiver @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's ideal size to the point specified by the argument.
(878) {219537} [220002]: @param size the new ideal size for the receiver @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the point is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns a point describing the receiver's size.
(879) {220003} [220063]: The x coordinate of the result is the width of the receiver.
(880) {220064} [220125]: The y coordinate of the result is the height of the receiver.
(881) {220127} [220467]: @return the receiver's size @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's size to the point specified by the arguments.
(883) {220608} [221021]: &lt;/p&gt; @param width the new width for the receiver @param height the new height for the receiver @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's size to the point specified by the argument.
(885) {221156} [221672]: &lt;/p&gt; @param size the new size for the receiver @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the point is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the minimum size that the cool item can be resized to using the cool item's gripper.
(886) {221674} [222147]: @return a point containing the minimum width and height of the cool item, in pixels @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 2.0 ------------ Sets the minimum size that the cool item can be resized to using the cool item's gripper, to the point specified by the arguments.
(887) {222149} [222657]: @param width the minimum width of the cool item, in pixels @param height the minimum height of the cool item, in pixels @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 2.0 ------------ Sets the minimum size that the cool item can be resized to using the cool item's gripper, to the point specified by the argument.
(888) {222659} [223248]: @param size a point representing the minimum width and height of the cool item, in pixels @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the point is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 2.0 ------------ Removes the listener from the collection of listeners that will be notified when the control is selected by the user.
(889) {223250} [223816]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SelectionListener @see #addSelectionListener @since 2.0 ====== Cursor.java ====== Copyright (c) 2000, 2014 IBM Corporation and others.
(911) {232967} [233219]: @param object the object to compare with this object @return &lt;code&gt;true&lt;/code&gt; if the object is the same as this object and &lt;code&gt;false&lt;/code&gt; otherwise @see #hashCode ------------ Returns an integer hash code for the receiver.
(912) {233220} [233368]: Any two objects that return &lt;code&gt;true&lt;/code&gt; when passed to &lt;code&gt;equals&lt;/code&gt; must return the same value for this method.
(913) {233370} [233541]: @return the receiver's hash @see #equals ------------ Returns &lt;code&gt;true&lt;/code&gt; if the cursor has been disposed, and &lt;code&gt;false&lt;/code&gt; otherwise.
(916) {233725} [233931]: @return &lt;code&gt;true&lt;/code&gt; when the cursor is disposed and &lt;code&gt;false&lt;/code&gt; otherwise ------------ Returns a string containing a concise, human-readable description of the receiver.
(934) {236886} [237790]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT#DATE @see SWT#TIME @see SWT#CALENDAR @see SWT#SHORT @see SWT#MEDIUM @see SWT#LONG @see SWT#DROP_DOWN @see Widget#checkSubclass @see Widget#getStyle ------------ Adds the listener to the collection of listeners who will be notified when the control is selected by the user, by sending it one of the messages defined in the &lt;code&gt;SelectionListener&lt;/code&gt; interface.
(935) {237791} [237893]: &lt;p&gt; &lt;code&gt;widgetSelected&lt;/code&gt; is called when the user changes the control's value.
(936) {237894} [237983]: &lt;code&gt;widgetDefaultSelected&lt;/code&gt; is typically called when ENTER is pressed.
(937) {237984} [238546]: &lt;/p&gt; @param listener the listener which should be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SelectionListener @see #removeSelectionListener @see SelectionEvent ------------ Returns the receiver's date, or day of the month.
(939) {238638} [238970]: &lt;/p&gt; @return a positive integer beginning with 1 @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's hours.
(941) {239019} [239345]: &lt;/p&gt; @return an integer between 0 and 23 @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's minutes.
(943) {239396} [239720]: &lt;/p&gt; @return an integer between 0 and 59 @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's month.
(945) {239791} [240117]: &lt;/p&gt; @return an integer between 0 and 11 @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's seconds.
(947) {240168} [240491]: &lt;/p&gt; @return an integer between 0 and 59 @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's year.
(949) {240552} [240968]: &lt;/p&gt; @return an integer between 1752 and 9999 @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Removes the listener from the collection of listeners who will be notified when the control is selected by the user.
(950) {240970} [241521]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SelectionListener @see #addSelectionListener ------------ Sets the receiver's year, month, and day in a single operation.
(952) {241671} [242143]: &lt;/p&gt; @param year an integer between 1752 and 9999 @param month an integer between 0 and 11 @param day a positive integer beginning with 1 @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.4 ------------ Sets the receiver's date, or day of the month, to the specified day.
(955) {242324} [242671]: &lt;/p&gt; @param day a positive integer beginning with 1 @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #setDate ------------ Sets the receiver's hours.
(957) {242720} [243048]: &lt;/p&gt; @param hours an integer between 0 and 23 @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's minutes.
(959) {243099} [243427]: &lt;/p&gt; @param minutes an integer between 0 and 59 @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's month.
(962) {243587} [243930]: &lt;/p&gt; @param month an integer between 0 and 11 @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #setDate ------------ Sets the receiver's seconds.
(964) {243981} [244353]: &lt;/p&gt; @param seconds an integer between 0 and 59 @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's hours, minutes, and seconds in a single operation.
(965) {244355} [244766]: @param hours an integer between 0 and 23 @param minutes an integer between 0 and 59 @param seconds an integer between 0 and 59 @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.4 ------------ Sets the receiver's year.
(968) {244916} [245306]: &lt;/p&gt; @param year an integer between 1752 and 9999 @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #setDate ====== Decorations.java ====== Copyright (c) 2000, 2015 IBM Corporation and others.
(987) {249482} [250348]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT#BORDER @see SWT#CLOSE @see SWT#MIN @see SWT#MAX @see SWT#RESIZE @see SWT#TITLE @see SWT#NO_TRIM @see SWT#NO_MOVE @see SWT#SHELL_TRIM @see SWT#DIALOG_TRIM @see SWT#ON_TOP @see SWT#TOOL @see Widget#checkSubclass @see Widget#getStyle ------------ Returns the receiver's default button if one had previously been set, otherwise returns null.
(988) {250350} [250765]: @return the default button or null @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #setDefaultButton(Button) ------------ Returns the receiver's image if it had previously been set using &lt;code&gt;setImage()&lt;/code&gt;.
(990) {250963} [251071]: &lt;p&gt; Note: This method will return null if called before &lt;code&gt;setImage()&lt;/code&gt; is called.
(992) {251165} [251547]: &lt;/p&gt; @return the image @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's images if they had previously been set using &lt;code&gt;setImages()&lt;/code&gt;.
(996) {251978} [252097]: &lt;p&gt; Note: This method will return an empty array if called before &lt;code&gt;setImages()&lt;/code&gt; is called.
(998) {252191} [252579]: &lt;/p&gt; @return the images @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.0 ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver is currently maximized, and false otherwise.
(999) {252580} [252973]: &lt;p&gt; @return the maximized state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #setMaximized ------------ Returns the receiver's menu bar if one had previously been set, otherwise returns null.
(1000) {252975} [253349]: @return the menu bar or null @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver is currently minimized, and false otherwise.
(1001) {253350} [253797]: &lt;p&gt; @return the minimized state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #setMinimized ------------ Returns the receiver's text, which is the string that the window manager will typically display as the receiver's &lt;em&gt;title&lt;/em&gt;.
(1003) {253865} [254396]: @return the text @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ If the argument is not null, sets the receiver's default button to the argument, and if the argument is null, sets the receiver's default button to the first button which was set as the receiver's default button (called the &lt;em&gt;saved default button&lt;/em&gt;).
(1006) {254652} [255236]: &lt;/p&gt; @param button the new default button @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the button has been disposed&lt;/li&gt; &lt;li&gt;ERROR_INVALID_PARENT - if the control is not in the same widget tree&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's image to the argument, which may be null.
(1008) {255435} [255927]: @param image the new image (or null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the image has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's images to the argument, which may be an empty array.
(1012) {256357} [256920]: @param images the new image array @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the array of images is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if one of the images is null or has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.0 ------------ Sets the maximized state of the receiver.
(1013) {256921} [257197]: If the argument is &lt;code&gt;true&lt;/code&gt; causes the receiver to switch to the maximized state, and if the argument is &lt;code&gt;false&lt;/code&gt; and the receiver was previously maximized, causes the receiver to switch back to either the minimized or normal states.
(1014) {257198} [257363]: &lt;p&gt; Note: The result of intermixing calls to &lt;code&gt;setMaximized(true)&lt;/code&gt; and &lt;code&gt;setMinimized(true)&lt;/code&gt; will vary by platform.
(1017) {257485} [257869]: &lt;/p&gt; @param maximized the new maximized state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #setMinimized ------------ Sets the receiver's menu bar to the argument, which may be null.
(1018) {257871} [258411]: @param menu the new menu bar @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the menu has been disposed&lt;/li&gt; &lt;li&gt;ERROR_INVALID_PARENT - if the menu is not in the same widget tree&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the minimized stated of the receiver.
(1019) {258412} [258688]: If the argument is &lt;code&gt;true&lt;/code&gt; causes the receiver to switch to the minimized state, and if the argument is &lt;code&gt;false&lt;/code&gt; and the receiver was previously minimized, causes the receiver to switch back to either the maximized or normal states.
(1020) {258689} [258854]: &lt;p&gt; Note: The result of intermixing calls to &lt;code&gt;setMaximized(true)&lt;/code&gt; and &lt;code&gt;setMinimized(true)&lt;/code&gt; will vary by platform.
(1023) {258976} [259475]: &lt;/p&gt; @param minimized the new maximized state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #setMaximized ------------ Sets the receiver's text, which is the string that the window manager will typically display as the receiver's &lt;em&gt;title&lt;/em&gt;, to the argument, which must not be null.
(1026) {259600} [260080]: &lt;/p&gt; @param string the new text @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the text is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ====== DefaultExceptionHandler.java ====== Copyright (c) 2016 Google Inc and others.
(1044) {262752} [262853]: &lt;/p&gt; @see #create @see #init @since 3.1 ------------ Constructs a new instance of this class.
(1046) {262923} [263143]: &lt;/p&gt; @param data the DeviceData which describes the receiver @see #create @see #init @see DeviceData ------------ Throws an &lt;code&gt;SWTException&lt;/code&gt; if the receiver can not be accessed by the caller.
(1049) {263367} [263592]: &lt;p&gt; Currently, it is an error to invoke any method (other than &lt;code&gt;isDisposed()&lt;/code&gt; and &lt;code&gt;dispose()&lt;/code&gt;) on a device that has had its &lt;code&gt;dispose()&lt;/code&gt; method called.
(1051) {263732} [263925]: &lt;p&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Creates the device in the operating system.
(1055) {264222} [264392]: &lt;/p&gt; @param data the DeviceData which describes the receiver @see #init ------------ Destroys the device in the operating system and releases the device's handle.
(1059) {264691} [264816]: &lt;/p&gt; @see #dispose @see #release ------------ Disposes of the operating system resources associated with the receiver.
(1060) {264817} [264968]: After this method has been invoked, the receiver will answer &lt;code&gt;true&lt;/code&gt; when sent the message &lt;code&gt;isDisposed()&lt;/code&gt;.
(1061) {264970} [265093]: @see #release @see #destroy @see #checkDevice ------------ Returns a rectangle describing the receiver's size and location.
(1062) {265095} [265334]: @return the bounding rectangle @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns a &lt;code&gt;DeviceData&lt;/code&gt; based on the receiver.
(1063) {265335} [265427]: Modifications made to this &lt;code&gt;DeviceData&lt;/code&gt; will not affect the receiver.
(1064) {265429} [265773]: @return a &lt;code&gt;DeviceData&lt;/code&gt; containing the device's data and attributes @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see DeviceData ------------ Returns a rectangle which describes the area of the receiver which is capable of displaying data.
(1065) {265775} [266122]: @return the client area @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see #getBounds ------------ Returns the bit depth of the screen, which is the number of bits it takes to represent the number of unique colors that the screen is currently capable of displaying.
(1067) {266185} [266508]: @return the depth of the screen @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns a point whose x coordinate is the horizontal dots per inch of the display, and whose y coordinate is the vertical dots per inch of the display.
(1068) {266510} [266717]: @return the horizontal and vertical DPI @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns DPI in x direction.
(1070) {266778} [266924]: @return the horizontal DPI ------------ Returns &lt;code&gt;FontData&lt;/code&gt; objects which describe the fonts that match the given arguments.
(1071) {266925} [267002]: If the &lt;code&gt;faceName&lt;/code&gt; is null, all fonts will be returned.
(1073) {267168} [267457]: @return the matching font data @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ For bitmapped fonts, EnumFontFamilies only enumerates once for each font, regardless of how many styles are available.
(1089) {270359} [270615]: @param id the color constant @return the matching color @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see SWT ------------ Returns a reasonable font for applications to use.
(1094) {271037} [271421]: &lt;/p&gt; @return a font @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns &lt;code&gt;true&lt;/code&gt; if the underlying window system prints out warning messages on the console, and &lt;code&gt;setWarnings&lt;/code&gt; had previously been called with &lt;code&gt;true&lt;/code&gt;.
(1095) {271423} [271732]: @return &lt;code&gt;true&lt;/code&gt;if warnings are being handled, and &lt;code&gt;false&lt;/code&gt; otherwise @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Initializes any internal resources needed by the device.
(1098) {271929} [272035]: &lt;/p&gt; @see #create ------------ Invokes platform specific functionality to allocate a new GC handle.
(1103) {272516} [272592]: ------------ Invokes platform specific functionality to dispose a GC handle.
(1108) {273076} [273205]: ------------ Returns &lt;code&gt;true&lt;/code&gt; if the device has been disposed, and &lt;code&gt;false&lt;/code&gt; otherwise.
(1111) {273361} [273520]: @return &lt;code&gt;true&lt;/code&gt; when the device is disposed and &lt;code&gt;false&lt;/code&gt; otherwise ------------ Loads the font specified by a file.
(1113) {273599} [274009]: @param path the font file path @return whether the font was successfully loaded @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if path is null&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see Font @since 3.3 ------------ Releases any internal resources back to the operating system and clears all fields except the device handle.
(1117) {274483} [274540]: The handle is needed by &lt;code&gt;destroy&lt;/code&gt;.
(1120) {274740} [274970]: &lt;/p&gt; @see #dispose @see #destroy ------------ If the underlying window system supports printing warning messages to the console, setting warnings to &lt;code&gt;false&lt;/code&gt; prevents these messages from being printed.
(1121) {274971} [275057]: If the argument is &lt;code&gt;true&lt;/code&gt; then message printing is not blocked.
(1122) {275059} [275390]: @param warnings &lt;code&gt;true&lt;/code&gt;if warnings should be printed, and &lt;code&gt;false&lt;/code&gt; otherwise @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Gets the scaling factor from the device and calculates the zoom level.
(1131) {276551} [276626]: A &lt;code&gt;Dialog&lt;/code&gt; is not a &lt;code&gt;Widget&lt;/code&gt;.
(1137) {277819} [277982]: For example, if &lt;code&gt;PRIMARY_MODAL&lt;/code&gt; is not supported by a particular dialog, it would be upgraded to &lt;code&gt;APPLICATION_MODAL&lt;/code&gt;.
(1141) {278810} [279281]: @param parent a shell which will be the parent of the new instance @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;/ul&gt; ------------ Constructs a new instance of this class given its parent and a style value describing its behavior and appearance.
(1145) {279766} [280283]: @param parent a shell which will be the parent of the new instance @param style the style of dialog to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;/ul&gt; @see SWT#PRIMARY_MODAL @see SWT#APPLICATION_MODAL @see SWT#SYSTEM_MODAL ------------ Checks that this class can be subclassed.
(1147) {280373} [280648]: &lt;/p&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see Widget#checkSubclass ------------ Throws an exception if the specified widget can not be used as a parent for the receiver.
(1148) {280650} [281148]: @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the parent is disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;/ul&gt; ------------ Does whatever dialog specific cleanup is required, and then uses the code in &lt;code&gt;SWTError.error&lt;/code&gt; to handle the error.
(1149) {281150} [281309]: @param code the descriptive error code @see SWT#error(int) ------------ Returns the receiver's parent, which must be a &lt;code&gt;Shell&lt;/code&gt; or null.
(1150) {281311} [281629]: @return the receiver's parent @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's style information.
(1152) {281808} [282231]: &lt;/p&gt; @return the style bits @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's text, which is the string that the window manager will typically display as the receiver's &lt;em&gt;title&lt;/em&gt;.
(1154) {282299} [282742]: @return the text @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's text, which is the string that the window manager will typically display as the receiver's &lt;em&gt;title&lt;/em&gt;, to the argument, which must not be null.
(1155) {282744} [283215]: @param string the new text @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the text is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ====== DirectoryDialog.java ====== Copyright (c) 2000, 2012 IBM Corporation and others.
(1161) {284350} [284908]: @param parent a shell which will be the parent of the new instance @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; ------------ Constructs a new instance of this class given its parent and a style value describing its behavior and appearance.
(1165) {285392} [285972]: &lt;/p&gt; @param parent a shell which will be the parent of the new instance @param style the style of dialog to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; ------------ Returns the path which the dialog will use to filter the directories it shows.
(1169) {286289} [286771]: @return a string describing the absolute path of the selected directory, or null if the dialog was cancelled or an error occurred @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the dialog has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the dialog&lt;/li&gt; &lt;/ul&gt; ------------ Sets the path that the dialog will use to filter the directories it shows to the argument, which may be null.
(1175) {287191} [287422]: @param string the message @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the string is null&lt;/li&gt; &lt;/ul&gt; ====== Display.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(1183) {288520} [288691]: &lt;p&gt; In SWT, the thread which creates a &lt;code&gt;Display&lt;/code&gt; instance is distinguished as the &lt;em&gt;user-interface thread&lt;/em&gt; for that display.
(1185) {288875} [289047]: &lt;/li&gt; &lt;li&gt; Some SWT API methods (notably, most of the public methods in &lt;code&gt;Widget&lt;/code&gt; and its subclasses), may only be called from the thread.
(1187) {289300} [289439]: &lt;/li&gt; &lt;li&gt; The thread is not allowed to construct other &lt;code&gt;Display&lt;/code&gt;s until that display has been disposed.
(1193) {290226} [290466]: &lt;/p&gt;&lt;p&gt; All SWT API methods which may only be called from the user-interface thread are distinguished in their documentation by indicating that they throw the "&lt;code&gt;ERROR_THREAD_INVALID_ACCESS&lt;/code&gt;" SWT exception.
(1214) {301180} [301272]: &lt;p&gt; Note: The resulting display is marked as the &lt;em&gt;current&lt;/em&gt; display.
(1216) {301423} [301830]: &lt;/p&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if called from a thread that already created an existing display&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see #getCurrent @see #getDefault @see Widget#checkSubclass @see Shell ------------ Constructs a new instance of this class using the parameter.
(1217) {301832} [302003]: @param data the device data ------------ Adds the listener to the collection of listeners who will be notified when an event of the given type occurs anywhere in a widget.
(1218) {302004} [302095]: The event type is one of the event constants defined in class &lt;code&gt;SWT&lt;/code&gt;.
(1220) {302214} [302437]: &lt;p&gt; Setting the type of an event to &lt;code&gt;SWT.None&lt;/code&gt; from within the &lt;code&gt;handleEvent()&lt;/code&gt; method can be used to change the event type and stop subsequent Java listeners from running.
(1224) {302729} [303424]: &lt;/p&gt; @param eventType the type of event to listen for @param listener the listener which should be notified when the event occurs @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see Listener @see SWT @see #removeFilter @see #removeListener @since 3.0 ------------ Adds the listener to the collection of listeners who will be notified when an event of the given type occurs.
(1225) {303425} [303516]: The event type is one of the event constants defined in class &lt;code&gt;SWT&lt;/code&gt;.
(1227) {303651} [304349]: @param eventType the type of event to listen for @param listener the listener which should be notified when the event occurs @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see Listener @see SWT @see #removeListener @since 2.0 ------------ Causes the &lt;code&gt;run()&lt;/code&gt; method of the runnable to be invoked by the user-interface thread at the next reasonable opportunity.
(1229) {304460} [304565]: Specifying &lt;code&gt;null&lt;/code&gt; as the runnable simply wakes the user-interface thread when run.
(1232) {304794} [305134]: &lt;/p&gt; @param runnable code to run on the user-interface thread or &lt;code&gt;null&lt;/code&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see #syncExec ------------ Causes the system hardware to emit a short sound (if it supports this capability).
(1233) {305136} [305423]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Checks that this class can be subclassed.
(1235) {305513} [305786]: &lt;/p&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see Widget#checkSubclass ------------ Requests that the connection between SWT and the underlying operating system be closed.
(1236) {305788} [306110]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see Device#dispose @since 2.0 ------------ Creates the device in the operating system.
(1239) {306272} [306442]: &lt;/p&gt; @param data the DeviceData which describes the receiver @see #init ------------ Destroys the device in the operating system and releases the device's handle.
(1242) {306606} [306809]: &lt;/p&gt; @see Device#dispose @see #release ------------ Causes the &lt;code&gt;run()&lt;/code&gt; method of the runnable to be invoked by the user-interface thread just before the receiver is disposed.
(1243) {306811} [306874]: Specifying a &lt;code&gt;null&lt;/code&gt; runnable is ignored.
(1244) {306876} [306920]: @param runnable code to run at dispose time.
(1245) {306922} [307306]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Does whatever display specific cleanup is required, and then uses the code in &lt;code&gt;SWTError.error&lt;/code&gt; to handle the error.
(1246) {307308} [307615]: @param code the descriptive error code @see SWT#error(int) ------------ Given the operating system handle for a widget, returns the instance of the &lt;code&gt;Widget&lt;/code&gt; subclass which represents it in the currently running application, if such exists, or null if no matching widget can be found.
(1249) {307749} [308155]: &lt;/p&gt; @param handle the handle for the widget @return the SWT widget that the handle represents @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @noreference This method is not intended to be referenced by clients.
(1250) {308156} [308443]: ------------ Given the operating system handle for a widget, and widget-specific id, returns the instance of the &lt;code&gt;Widget&lt;/code&gt; subclass which represents the handle/id pair in the currently running application, if such exists, or null if no matching widget can be found.
(1253) {308577} [309044]: &lt;/p&gt; @param handle the handle for the widget @param id the id for the subwidget (usually an item) @return the SWT widget that the handle/id pair represents @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @noreference This method is not intended to be referenced by clients.
(1254) {309046} [309313]: @since 3.1 ------------ Given a widget and a widget-specific id, returns the instance of the &lt;code&gt;Widget&lt;/code&gt; subclass which represents the widget/id pair in the currently running application, if such exists, or null if no matching widget can be found.
(1255) {309315} [309776]: @param widget the widget @param id the id for the subwidget (usually an item) @return the SWT subwidget (usually an item) that the widget/id pair represents @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @noreference This method is not intended to be referenced by clients.
(1257) {309956} [310069]: Specifying &lt;code&gt;null&lt;/code&gt; as the thread will return &lt;code&gt;null&lt;/code&gt; for the display.
(1258) {310071} [310303]: @param thread the user-interface thread @return the display for the given thread ------------ Returns the currently active &lt;code&gt;Shell&lt;/code&gt;, or null if no shell belonging to the currently running application is active.
(1259) {310305} [310728]: @return the active shell or null @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns the single instance of the application menu bar, or &lt;code&gt;null&lt;/code&gt; if there is no application menu bar for the platform.
(1260) {310730} [311013]: @return the application menu bar, or &lt;code&gt;null&lt;/code&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.7 ------------ Returns a rectangle describing the receiver's size and location.
(1262) {311078} [311532]: @return the bounding rectangle @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns the display which the currently running thread is the user-interface thread for, or null if the currently running thread is not a user-interface thread for any display.
(1263) {311534} [311672]: @return the current display ------------ Returns a rectangle which describes the area of the receiver which is capable of displaying data.
(1264) {311674} [312135]: @return the client area @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see #getBounds ------------ Returns the control which the on-screen pointer is currently over top of, or null if it is not currently over one of the controls built by the currently running application.
(1265) {312137} [312546]: @return the control under the cursor or &lt;code&gt;null&lt;/code&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns the location of the on-screen pointer relative to the top left corner of the screen.
(1266) {312548} [312880]: @return the cursor location @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns an array containing the recommended cursor sizes.
(1267) {312882} [313203]: @return the array of cursor sizes @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.0 ------------ Returns the default display.
(1269) {313320} [313474]: @return the default display ------------ Returns the application defined property of the receiver with the specified name, or null if it has not been set.
(1272) {313778} [314434]: &lt;/p&gt; @param key the name of the property @return the value of the property or null if it has not been set @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the key is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see #setData(String, Object) @see #disposeExec(Runnable) ------------ Returns the application defined, display specific data associated with the receiver, or null if it has not been set.
(1276) {314826} [315281]: &lt;/p&gt; @return the display specific data @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see #setData(Object) @see #disposeExec(Runnable) ------------ Returns the button dismissal alignment, one of &lt;code&gt;LEFT&lt;/code&gt; or &lt;code&gt;RIGHT&lt;/code&gt;.
(1280) {315709} [316177]: @return the button dismissal order @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 2.1 ------------ Returns the longest duration, in milliseconds, between two mouse button clicks that will be considered a &lt;em&gt;double click&lt;/em&gt; by the underlying operating system.
(1281) {316179} [316629]: @return the double click time @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns the control which currently has keyboard focus, or null if keyboard events are not currently going to any of the controls built by the currently running application.
(1282) {316631} [316989]: @return the focus control or &lt;code&gt;null&lt;/code&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns true when the high contrast mode is enabled.
(1285) {317126} [317506]: &lt;/p&gt; @return the high contrast mode @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.0 ------------ Returns the maximum allowed depth of icons on this display, in bits per pixel.
(1287) {317587} [317942]: @return the maximum icon depth @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see Device#getDepth ------------ Returns an array containing the recommended icon sizes.
(1288) {317944} [318324]: @return the array of icon sizes @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see Decorations#setImages(Image[]) @since 3.0 ------------ Returns an array of monitors attached to the device.
(1289) {318326} [318425]: @return the array of monitors @since 3.0 ------------ Returns the primary monitor for that device.
(1290) {318427} [318603]: @return the primary monitor @since 3.0 ------------ Returns a (possibly empty) array containing all shells which have not been disposed and have the receiver as their display.
(1291) {318605} [318924]: @return the receiver's shells @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Gets the synchronizer used by the display.
(1292) {318926} [319375]: @return the receiver's synchronizer @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.4 ------------ Returns the thread that has invoked &lt;code&gt;syncExec&lt;/code&gt; or null if no such runnable is currently being invoked by the user-interface thread.
(1294) {319479} [319827]: &lt;/p&gt; @return the receiver's sync-interface thread @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns the matching standard color for the given constant, which should be one of the color constants specified in class &lt;code&gt;SWT&lt;/code&gt;.
(1297) {320025} [320500]: @param id the color constant @return the matching color @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see SWT ------------ Returns the matching standard platform cursor for the given constant, which should be one of the cursor constants specified in class &lt;code&gt;SWT&lt;/code&gt;.
(1299) {320596} [320709]: A value of &lt;code&gt;null&lt;/code&gt; will be returned if the supplied constant is not an SWT cursor constant.
(1305) {322044} [322477]: &lt;/p&gt; @return a font @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns the matching standard platform image for the given constant, which should be one of the icon constants specified in class &lt;code&gt;SWT&lt;/code&gt;.
(1307) {322572} [322767]: A value of &lt;code&gt;null&lt;/code&gt; will be returned either if the supplied constant is not an SWT icon constant or if the platform does not define an image that corresponds to the constant.
(1308) {322769} [323408]: @param id the SWT icon constant @return the corresponding image or &lt;code&gt;null&lt;/code&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see SWT#ICON_ERROR @see SWT#ICON_INFORMATION @see SWT#ICON_QUESTION @see SWT#ICON_WARNING @see SWT#ICON_WORKING @since 3.0 ------------ Returns the single instance of the system-provided menu for the application, or &lt;code&gt;null&lt;/code&gt; on platforms where no menu is provided for the application.
(1309) {323410} [323844]: @return the system menu, or &lt;code&gt;null&lt;/code&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.7 ------------ Returns the single instance of the system taskBar or null when there is no system taskBar available for the platform.
(1310) {323846} [324169]: @return the system taskBar or &lt;code&gt;null&lt;/code&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.6 ------------ Returns the single instance of the system tray or null when there is no system tray available for the platform.
(1311) {324171} [324431]: @return the system tray or &lt;code&gt;null&lt;/code&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.0 ------------ Returns the user-interface thread for the receiver.
(1312) {324433} [324729]: @return the receiver's user-interface thread @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns a boolean indicating whether a touch-aware input device is attached to the system and is ready for use.
(1313) {324731} [325183]: @return &lt;code&gt;true&lt;/code&gt; if a touch-aware input device is detected, or &lt;code&gt;false&lt;/code&gt; otherwise @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.7 ------------ Invokes platform specific functionality to allocate a new GC handle.
(1317) {325500} [325922]: &lt;/p&gt; @param data the platform specific GC data @return the platform specific GC handle @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTError &lt;ul&gt; &lt;li&gt;ERROR_NO_HANDLES if a handle could not be obtained for gc creation&lt;/li&gt; &lt;/ul&gt; @noreference This method is not intended to be referenced by clients.
(1318) {325923} [325992]: ------------ Initializes any internal resources needed by the device.
(1320) {326064} [326165]: &lt;/p&gt; @see #create ------------ Invokes platform specific functionality to dispose a GC handle.
(1331) {327413} [328208]: &lt;/p&gt; @param from the source &lt;code&gt;Control&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt; @param to the destination &lt;code&gt;Control&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt; @param point to be mapped @return point with mapped coordinates @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the point is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the Control from or the Control to have been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 2.1.2 ------------ Maps a point from one coordinate system to another.
(1337) {328907} [329680]: &lt;/p&gt; @param from the source &lt;code&gt;Control&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt; @param to the destination &lt;code&gt;Control&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt; @param x coordinates to be mapped @param y coordinates to be mapped @return point with mapped coordinates @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the Control from or the Control to have been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 2.1.2 ------------ Maps a point from one coordinate system to another.
(1343) {330379} [331186]: &lt;/p&gt; @param from the source &lt;code&gt;Control&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt; @param to the destination &lt;code&gt;Control&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt; @param rectangle to be mapped @return rectangle with mapped coordinates @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the rectangle is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the Control from or the Control to have been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 2.1.2 ------------ Maps a point from one coordinate system to another.
(1349) {331885} [332722]: &lt;/p&gt; @param from the source &lt;code&gt;Control&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt; @param to the destination &lt;code&gt;Control&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt; @param x coordinates to be mapped @param y coordinates to be mapped @param width coordinates to be mapped @param height coordinates to be mapped @return rectangle with mapped coordinates @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the Control from or the Control to have been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 2.1.2 ------------ Generate a low level system event.
(1355) {333183} [335173]: &lt;/p&gt; &lt;p&gt; &lt;b&gt;Event Types:&lt;/b&gt; &lt;p&gt;KeyDown, KeyUp &lt;p&gt;The following fields in the &lt;code&gt;Event&lt;/code&gt; apply: &lt;ul&gt; &lt;li&gt;(in) type KeyDown or KeyUp&lt;/li&gt; &lt;p&gt; Either one of: &lt;li&gt;(in) character a character that corresponds to a keyboard key&lt;/li&gt; &lt;li&gt;(in) keyCode the key code of the key that was typed, as defined by the key code constants in class &lt;code&gt;SWT&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;MouseDown, MouseUp&lt;/p&gt; &lt;p&gt;The following fields in the &lt;code&gt;Event&lt;/code&gt; apply: &lt;ul&gt; &lt;li&gt;(in) type MouseDown or MouseUp &lt;li&gt;(in) button the button that is pressed or released &lt;/ul&gt; &lt;p&gt;MouseMove&lt;/p&gt; &lt;p&gt;The following fields in the &lt;code&gt;Event&lt;/code&gt; apply: &lt;ul&gt; &lt;li&gt;(in) type MouseMove &lt;li&gt;(in) x the x coordinate to move the mouse pointer to in screen coordinates &lt;li&gt;(in) y the y coordinate to move the mouse pointer to in screen coordinates &lt;/ul&gt; &lt;p&gt;MouseWheel&lt;/p&gt; &lt;p&gt;The following fields in the &lt;code&gt;Event&lt;/code&gt; apply: &lt;ul&gt; &lt;li&gt;(in) type MouseWheel &lt;li&gt;(in) detail either SWT.SCROLL_LINE or SWT.SCROLL_PAGE &lt;li&gt;(in) count the number of lines or pages to scroll &lt;/ul&gt; &lt;/dl&gt; @param event the event to be generated @return true if the event was generated or false otherwise @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the event is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.0 ------------ Reads an event from the operating system's event queue, dispatches it appropriately, and returns &lt;code&gt;true&lt;/code&gt; if there is potentially more work to do, or &lt;code&gt;false&lt;/code&gt; if the caller can sleep until another event is placed on the event queue.
(1356) {335174} [335443]: &lt;p&gt; In addition to checking the system event queue, this method also checks if any inter-thread messages (created by &lt;code&gt;syncExec()&lt;/code&gt; or &lt;code&gt;asyncExec()&lt;/code&gt;) are waiting to be processed, and if so handles them before returning.
(1357) {335444} [336031]: &lt;/p&gt; @return &lt;code&gt;false&lt;/code&gt; if the caller can sleep upon return from this method @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_FAILED_EXEC - if an exception occurred while running an inter-thread message&lt;/li&gt; &lt;/ul&gt; @see #sleep @see #wake ------------ Releases any internal resources back to the operating system and clears all fields except the device handle.
(1359) {336103} [336268]: After this method has been invoked, all related related shells will answer &lt;code&gt;true&lt;/code&gt; when sent the message &lt;code&gt;isDisposed()&lt;/code&gt;.
(1363) {336752} [336809]: The handle is needed by &lt;code&gt;destroy&lt;/code&gt;.
(1365) {336885} [337067]: @see Device#dispose @see #destroy ------------ Removes the listener from the collection of listeners who will be notified when an event of the given type occurs anywhere in a widget.
(1366) {337068} [337159]: The event type is one of the event constants defined in class &lt;code&gt;SWT&lt;/code&gt;.
(1367) {337161} [337774]: @param eventType the type of event to listen for @param listener the listener which should no longer be notified when the event occurs @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see Listener @see SWT @see #addFilter @see #addListener @since 3.0 ------------ Removes the listener from the collection of listeners who will be notified when an event of the given type occurs.
(1368) {337775} [337866]: The event type is one of the event constants defined in class &lt;code&gt;SWT&lt;/code&gt;.
(1369) {337868} [338451]: @param eventType the type of event to listen for @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see Listener @see SWT @see #addListener @since 2.0 ------------ Sends a SWT.PreExternalEventDispatch event.
(1370) {338453} [338522]: @noreference This method is not intended to be referenced by clients.
(1371) {338523} [338580]: ------------ Sends a SWT.PostExternalEventDispatch event.
(1372) {338582} [338651]: @noreference This method is not intended to be referenced by clients.
(1373) {338652} [338754]: ------------ Sets the location of the on-screen pointer relative to the top left corner of the screen.
(1374) {338756} [339314]: &lt;b&gt;Note: It is typically considered bad practice for a program to move the on-screen pointer location.&lt;/b&gt; @param x the new x coordinate for the cursor @param y the new y coordinate for the cursor @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 2.1 ------------ Sets the location of the on-screen pointer relative to the top left corner of the screen.
(1375) {339316} [339874]: &lt;b&gt;Note: It is typically considered bad practice for a program to move the on-screen pointer location.&lt;/b&gt; @param point new position @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the point is null &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 2.0 ------------ Sets the application defined property of the receiver with the specified name to the given argument.
(1378) {340175} [340784]: &lt;/p&gt; @param key the name of the property @param value the new value for the property @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the key is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see #getData(String) @see #disposeExec(Runnable) ------------ Sets the application defined, display specific data associated with the receiver, to the argument.
(1382) {341173} [341548]: &lt;/p&gt; @param data the new display specific data @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see #getData() @see #disposeExec(Runnable) ------------ Returns the application name.
(1383) {341550} [341662]: @return the application name @see #setAppName(String) @since 3.6 ------------ Returns the application version.
(1384) {341664} [341792]: @return the application version @see #setAppVersion(String) @since 3.6 ------------ Sets the application name to the argument.
(1389) {342372} [342504]: &lt;/p&gt; @param name the new app name or &lt;code&gt;null&lt;/code&gt; ------------ Sets the application version to the argument.
(1390) {342506} [342650]: @param version the new app version @since 3.6 ------------ Sets the synchronizer used by the display to be the argument, which can not be null.
(1391) {342652} [343322]: @param synchronizer the new synchronizer for the display (must not be null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the synchronizer is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_FAILED_EXEC - if an exception occurred while running an inter-thread message&lt;/li&gt; &lt;/ul&gt; ------------ Sets a callback that will be invoked whenever an exception is thrown by a listener or external callback function.
(1400) {344079} [344214]: @since 3.106 ------------ Sets a callback that will be invoked whenever an error is thrown by a listener or external callback function.
(1410) {345155} [345251]: @return &lt;code&gt;true&lt;/code&gt; if an event requiring dispatching was placed on the queue.
(1411) {345253} [345654]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see #wake ------------ Causes the &lt;code&gt;run()&lt;/code&gt; method of the runnable to be invoked by the user-interface thread at the next reasonable opportunity.
(1413) {345734} [345830]: Specifying &lt;code&gt;null&lt;/code&gt; as the runnable simply wakes the user-interface thread.
(1416) {346059} [346576]: &lt;/p&gt; @param runnable code to run on the user-interface thread or &lt;code&gt;null&lt;/code&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_FAILED_EXEC - if an exception occurred when executing the runnable&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see #asyncExec ------------ Causes the &lt;code&gt;run()&lt;/code&gt; method of the runnable to be invoked by the user-interface thread after the specified number of milliseconds have elapsed.
(1420) {346870} [347484]: &lt;/p&gt; @param milliseconds the delay before running the runnable @param runnable code to run on the user-interface thread @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the runnable is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see #asyncExec ------------ Forces all outstanding paint requests for the display to be processed before this method returns.
(1421) {347486} [347883]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see Control#update() ------------ If the receiver's user-interface thread was &lt;code&gt;sleep&lt;/code&gt;ing, causes it to be awakened and start running again.
(1423) {347938} [348162]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see #sleep ====== DisposeEvent.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(1440) {350722} [350942]: &lt;ul&gt; &lt;li&gt;&lt;b&gt;false&lt;/b&gt;: deviceZoom is set to 100%&lt;/li&gt; &lt;li&gt;&lt;b&gt;integer&lt;/b&gt;: deviceZoom depends on the current display resolution, but only uses integer multiples of 100%.
(1442) {351004} [351257]: at 150%, will use 100%), unless close to the next integer multiple (currently at 175%, will use 200%).&lt;/li&gt; &lt;li&gt;&lt;b&gt;quarter&lt;/b&gt;: deviceZoom depends on the current display resolution, but only uses integer multiples of 25%.
(1443) {351258} [351623]: The detected native zoom is rounded to the closest permissible value.&lt;/li&gt; &lt;li&gt;&lt;b&gt;exact&lt;/b&gt;: deviceZoom uses the native zoom (with 1% as minimal step).&lt;/li&gt; &lt;li&gt;&lt;i&gt;&lt;value&gt;&lt;/i&gt;: deviceZoom uses the given integer value in percent as zoom level.&lt;/li&gt; &lt;/ul&gt; The current default is "integer".
(1452) {353000} [353045]: ------------ Returns a new scaled down Point.
(1453) {353046} [353121]: ------------ Returns a new scaled down Point if enabled for Drawable class.
(1454) {353122} [353171]: ------------ Returns a new scaled down Rectangle.
(1455) {353172} [353251]: ------------ Returns a new scaled down Rectangle if enabled for Drawable class.
(1459) {353570} [353613]: ------------ Returns a new scaled up Point.
(1460) {353614} [353687]: ------------ Returns a new scaled up Point if enabled for Drawable class.
(1461) {353688} [353735]: ------------ Returns a new scaled up Rectangle.
(1462) {353736} [353813]: ------------ Returns a new scaled up Rectangle if enabled for Drawable class.
(1486) {357087} [357211]: &lt;/p&gt; @see Device @see Image @see GC ------------ Invokes platform specific functionality to allocate a new GC handle.
(1491) {357694} [357770]: ------------ Invokes platform specific functionality to dispose a GC handle.
(1496) {358259} [358404]: ------------ Returns &lt;code&gt;true&lt;/code&gt; iff coordinates can be auto-scaled on this drawable and &lt;code&gt;false&lt;/code&gt; if not.
(1499) {358577} [358730]: @return &lt;code&gt;true&lt;/code&gt; if auto-scaling is enabled for this drawable @noreference This method is not intended to be referenced by clients.
(1514) {362189} [362353]: public char character; depending on the event, the key code of the key that was typed, as defined by the key code constants in class &lt;code&gt;SWT&lt;/code&gt;.
(1518) {362775} [362995]: The possible values for this field are &lt;code&gt;SWT.LEFT&lt;/code&gt;, &lt;code&gt;SWT.RIGHT&lt;/code&gt;, &lt;code&gt;SWT.KEYPAD&lt;/code&gt;, or &lt;code&gt;SWT.NONE&lt;/code&gt; representing the main keyboard area.
(1539) {365305} [365430]: @param rect the new rectangle ------------ Returns a string containing a concise, human-readable description of the receiver.
(1540) {365432} [365560]: @return a string representation of the event ====== EventTable.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(1555) {367642} [367767]: &lt;p&gt; The item children that may be added to instances of this class must be of type &lt;code&gt;ExpandItem&lt;/code&gt;.
(1562) {369136} [369957]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT#V_SCROLL @see Widget#checkSubclass @see Widget#getStyle ------------ Adds the listener to the collection of listeners who will be notified when an item in the receiver is expanded or collapsed by sending it one of the messages defined in the &lt;code&gt;ExpandListener&lt;/code&gt; interface.
(1563) {369959} [370501]: @param listener the listener which should be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see ExpandListener @see #removeExpandListener ------------ Returns the item at the given, zero-relative index in the receiver.
(1565) {370553} [371126]: @param index the index of the item to return @return the item at the given index @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_RANGE - if the index is not between 0 and the number of elements in the list minus 1 (inclusive)&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the number of items contained in the receiver.
(1566) {371128} [371496]: @return the number of items @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns an array of &lt;code&gt;ExpandItem&lt;/code&gt;s which are the items in the receiver.
(1568) {371651} [371975]: &lt;/p&gt; @return the items in the receiver @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's spacing.
(1569) {371977} [372399]: @return the spacing @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Searches the receiver's list starting at the first item (index 0) until an item is found that is equal to the argument, and returns the index of that item.
(1571) {372434} [373065]: @param item the search item @return the index of the item @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the item is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the item has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Removes the listener from the collection of listeners who will be notified when items in the receiver are expanded or collapsed.
(1572) {373067} [373577]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see ExpandListener @see #addExpandListener ------------ Sets the receiver's spacing.
(1574) {373646} [374008]: @param spacing the spacing around each item @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ====== ExpandEvent.java ====== Copyright (c) 2000, 2008 IBM Corporation and others.
(1587) {376331} [377096]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see Widget#checkSubclass @see Widget#getStyle ------------ Constructs a new instance of this class given its parent, a style value describing its behavior and appearance, and the index at which to place it in the items maintained by its parent.
(1591) {377580} [378419]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @param index the zero-relative index to store the receiver in its parent @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_RANGE - if the index is not between 0 and the number of elements in the parent (inclusive)&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see Widget#checkSubclass @see Widget#getStyle ------------ Returns the control that is shown when the item is expanded.
(1592) {378420} [378485]: If no control has been set, return &lt;code&gt;null&lt;/code&gt;.
(1593) {378487} [378841]: @return the control @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver is expanded, and false otherwise.
(1594) {378843} [379474]: @return the expanded state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the height of the receiver's header @return the height of the header @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Gets the height of the receiver.
(1595) {379476} [379824]: @return the height @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's parent, which must be a &lt;code&gt;ExpandBar&lt;/code&gt;.
(1596) {379826} [380160]: @return the receiver's parent @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the control that is shown when the item is expanded.
(1597) {380162} [380718]: @param control the new control (or null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the control has been disposed&lt;/li&gt; &lt;li&gt;ERROR_INVALID_PARENT - if the control is not in the same widget tree&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the expanded state of the receiver.
(1598) {380720} [381038]: @param expanded the new expanded state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the height of the receiver.
(1600) {381124} [381474]: @param height the new height @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ====== ExpandListener.java ====== Copyright (c) 2000, 2006 IBM Corporation and others.
(1603) {382206} [382325]: When a item of the &lt;code&gt;ExpandBar&lt;/code&gt; is expanded or collapsed, the appropriate method will be invoked.
(1613) {383908} [384466]: @param parent a shell which will be the parent of the new instance @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; ------------ Constructs a new instance of this class given its parent and a style value describing its behavior and appearance.
(1617) {384950} [385645]: &lt;/p&gt; @param parent a shell which will be the parent of the new instance @param style the style of dialog to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT#SAVE @see SWT#OPEN @see SWT#MULTI ------------ Returns the path of the first file that was selected in the dialog relative to the filter path, or an empty string if no such file has been selected.
(1618) {385647} [385820]: @return the relative path of the file ------------ Returns a (possibly empty) array with the paths of all files that were selected in the dialog relative to the filter path.
(1619) {385822} [385958]: @return the relative paths of the files ------------ Returns the file extensions which the dialog will use to filter the files it shows.
(1622) {386210} [386450]: &lt;/p&gt; @return index the file extension filter index @see #getFilterExtensions @see #getFilterNames @since 3.4 ------------ Returns the names that describe the filter extensions which the dialog will use to filter the files it shows.
(1623) {386452} [386589]: @return the list of filter names ------------ Returns the directory path that the dialog will use, or an empty string if this is not set.
(1627) {387070} [387556]: @return a string describing the absolute path of the first selected file, or null if the dialog was cancelled or an error occurred @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the dialog has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the dialog&lt;/li&gt; &lt;/ul&gt; ------------ Set the initial filename which the dialog will select by default when opened to the argument, which may be null.
(1629) {387628} [387783]: @param string the file name ------------ Set the file extensions which the dialog will use to filter the files it shows to the argument, which may be null.
(1635) {388047} [388166]: &lt;/p&gt; &lt;p&gt; Note: On Mac, setting the file extension filter affects how app bundles are treated by the dialog.
(1639) {388398} [388688]: &lt;/p&gt; @param extensions the file extension filter @see #setFilterNames to specify the user-friendly names corresponding to the extensions ------------ Set the 0-based index of the file extension filter which the dialog will use initially to filter the files it shows to the argument.
(1641) {388775} [389046]: &lt;/p&gt; @param index the file extension filter index @see #setFilterExtensions @see #setFilterNames @since 3.4 ------------ Sets the names that describe the filter extensions which the dialog will use to filter the files it shows to the argument, which may be null.
(1643) {389140} [389254]: The &lt;code&gt;names&lt;/code&gt; array must be the same length as the &lt;code&gt;extensions&lt;/code&gt; array.
(1644) {389255} [389458]: &lt;/p&gt; @param names the list of filter names, or null for no filter names @see #setFilterExtensions ------------ Sets the directory path that the dialog will use to the argument, which may be null.
(1650) {389988} [390167]: @param overwrite true if the dialog will prompt for file overwrite, false otherwise @since 3.4 ====== FileFormat.java ====== Copyright (c) 2000, 2012 IBM Corporation and others.
(1668) {392565} [392820]: For example, if a &lt;code&gt;Shell&lt;/code&gt; has a single &lt;code&gt;Group&lt;/code&gt; child, &lt;code&gt;FillLayout&lt;/code&gt; will cause the &lt;code&gt;Group&lt;/code&gt; to completely fill the &lt;code&gt;Shell&lt;/code&gt; (if margins are 0).
(1669) {392821} [393009]: &lt;/p&gt; &lt;p&gt; Example code: first a &lt;code&gt;FillLayout&lt;/code&gt; is created and its type field is set, and then the layout is set into the &lt;code&gt;Composite&lt;/code&gt;.
(1670) {393010} [393131]: Note that in a &lt;code&gt;FillLayout&lt;/code&gt;, children are always the same size, and they fill all available space.
(1681) {394522} [394665]: @param type the type of fill layout @since 2.0 ------------ Returns a string containing a concise, human-readable description of the receiver.
(1682) {394667} [394798]: @return a string representation of the layout ====== FocusAdapter.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(1698) {397427} [397503]: When a control gains or loses focus, the appropriate method will be invoked.
(1702) {397910} [398057]: @param c the consumer of the event @return FocusListener @since 3.106 ====== Font.java ====== Copyright (c) 2000, 2014 IBM Corporation and others.
(1719) {402314} [402601]: @param object the object to compare with this object @return &lt;code&gt;true&lt;/code&gt; if the object is the same as this object and &lt;code&gt;false&lt;/code&gt; otherwise @see #hashCode ------------ Returns an array of &lt;code&gt;FontData&lt;/code&gt;s representing the receiver.
(1723) {402834} [403083]: @return an array of font data objects describing the receiver @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns an integer hash code for the receiver.
(1724) {403084} [403232]: Any two objects that return &lt;code&gt;true&lt;/code&gt; when passed to &lt;code&gt;equals&lt;/code&gt; must return the same value for this method.
(1725) {403234} [403403]: @return the receiver's hash @see #equals ------------ Returns &lt;code&gt;true&lt;/code&gt; if the font has been disposed, and &lt;code&gt;false&lt;/code&gt; otherwise.
(1728) {403581} [403785]: @return &lt;code&gt;true&lt;/code&gt; when the font is disposed and &lt;code&gt;false&lt;/code&gt; otherwise ------------ Returns a string containing a concise, human-readable description of the receiver.
(1738) {405805} [406041]: &lt;/ul&gt; Application code does &lt;em&gt;not&lt;/em&gt; need to explicitly release the resources managed by each instance when those instances are no longer required, and thus no &lt;code&gt;dispose()&lt;/code&gt; method is provided.
(1749) {407306} [407518]: @param data the &lt;code&gt;LOGFONT&lt;/code&gt; for the result ------------ Constructs a new FontData given a string representation in the form generated by the &lt;code&gt;FontData.toString&lt;/code&gt; method.
(1753) {408660} [408911]: @param object the object to compare with this object @return &lt;code&gt;true&lt;/code&gt; if the object is the same as this object and &lt;code&gt;false&lt;/code&gt; otherwise @see #hashCode ------------ Returns the height of the receiver in points.
(1754) {408913} [409019]: @return the height of this FontData @see #setHeight(int) ------------ Returns the locale of the receiver.
(1758) {409422} [409564]: &lt;/p&gt; @return the &lt;code&gt;String&lt;/code&gt; representing a Locale object @since 3.0 ------------ Returns the name of the receiver.
(1760) {409697} [409925]: @return the name of this &lt;code&gt;FontData&lt;/code&gt; @see #setName ------------ Returns the style of the receiver which is a bitwise OR of one or more of the &lt;code&gt;SWT&lt;/code&gt; constants NORMAL, BOLD and ITALIC.
(1761) {409927} [410062]: @return the style of this &lt;code&gt;FontData&lt;/code&gt; @see #setStyle ------------ Returns an integer hash code for the receiver.
(1762) {410063} [410211]: Any two objects that return &lt;code&gt;true&lt;/code&gt; when passed to &lt;code&gt;equals&lt;/code&gt; must return the same value for this method.
(1763) {410213} [410300]: @return the receiver's hash @see #equals ------------ Sets the height of the receiver.
(1765) {410397} [410657]: @param height the height of the &lt;code&gt;FontData&lt;/code&gt; @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the height is negative&lt;/li&gt; &lt;/ul&gt; @see #getHeight ------------ Sets the locale of the receiver.
(1769) {411060} [411225]: &lt;/p&gt; @param locale the &lt;code&gt;String&lt;/code&gt; representing a Locale object @see java.util.Locale#toString ------------ Sets the name of the receiver.
(1770) {411226} [411274]: &lt;p&gt; Some platforms support font foundries.
(1772) {411643} [411842]: &lt;/p&gt; &lt;p&gt; On platforms that do not support font foundries, only the face name (for example, "courier") is used in &lt;code&gt;setName()&lt;/code&gt; and &lt;code&gt;getName()&lt;/code&gt;.
(1773) {411843} [412228]: &lt;/p&gt; @param name the name of the font data (must not be null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - when the font name is null&lt;/li&gt; &lt;/ul&gt; @see #getName ------------ Sets the style of the receiver to the argument which must be a bitwise OR of one or more of the &lt;code&gt;SWT&lt;/code&gt; constants NORMAL, BOLD and ITALIC.
(1775) {412265} [412534]: @param style the new style for this &lt;code&gt;FontData&lt;/code&gt; @see #getStyle ------------ Returns a string representation of the receiver which is suitable for constructing an equivalent instance using the &lt;code&gt;FontData(String)&lt;/code&gt; constructor.
(1776) {412536} [412680]: @return a string representation of the FontData @see FontData ------------ Invokes platform specific functionality to allocate a new font data.
(1780) {412998} [413289]: &lt;/p&gt; @param data the &lt;code&gt;LOGFONT&lt;/code&gt; for the font data @param height the height of the font data @return a new font data object containing the specified &lt;code&gt;LOGFONT&lt;/code&gt; and height @noreference This method is not intended to be referenced by clients.
(1781) {413291} [413373]: ====== FontDialog.java ====== Copyright (c) 2000, 2014 IBM Corporation and others.
(1787) {414404} [414962]: @param parent a shell which will be the parent of the new instance @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; ------------ Constructs a new instance of this class given its parent and a style value describing its behavior and appearance.
(1791) {415446} [416087]: &lt;/p&gt; @param parent a shell which will be the parent of the new instance @param style the style of dialog to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; ------------ Returns &lt;code&gt;true&lt;/code&gt; if the dialog's effects selection controls are visible, and &lt;code&gt;false&lt;/code&gt; otherwise.
(1793) {416213} [416496]: &lt;/p&gt; @return &lt;code&gt;true&lt;/code&gt; if the dialog's effects selection controls are visible and &lt;code&gt;false&lt;/code&gt; otherwise @since 3.8 ------------ Returns a FontData object describing the font that was selected in the dialog, or null if none is available.
(1794) {416498} [416700]: @return the FontData for the selected font, or null @deprecated use #getFontList () ------------ Returns a FontData set describing the font that was selected in the dialog, or null if none is available.
(1795) {416702} [416878]: @return the FontData for the selected font, or null @since 2.1.1 ------------ Returns an RGB describing the color that was selected in the dialog, or null if none is available.
(1797) {417054} [417551]: @return a FontData object describing the font that was selected, or null if the dialog was cancelled or an error occurred @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the dialog has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the dialog&lt;/li&gt; &lt;/ul&gt; ------------ Sets the effects selection controls in the dialog visible if the argument is &lt;code&gt;true&lt;/code&gt;, and invisible otherwise.
(1799) {417674} [417916]: &lt;/p&gt; @param visible whether or not the dialog will show the effects selection controls @since 3.8 ------------ Sets a FontData object describing the font to be selected by default in the dialog, or null to let the platform choose one.
(1800) {417918} [418162]: @param fontData the FontData to use initially, or null @deprecated use #setFontList (FontData []) ------------ Sets the set of FontData objects describing the font to be selected by default in the dialog, or null to let the platform choose one.
(1801) {418164} [418457]: @param fontData the set of FontData objects to use initially, or null to let the platform select a default when open() is called @see Font#getFontData @since 2.1.1 ------------ Sets the RGB describing the color to be selected by default in the dialog, or null to let the platform choose one.
(1802) {418459} [418691]: @param rgb the RGB value to use initially, or null to let the platform select a default when open() is called @see PaletteData#getRGBs @since 2.1 ====== FontMetrics.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(1805) {419163} [419306]: &lt;code&gt;FontMetrics&lt;/code&gt; are obtained from &lt;code&gt;GC&lt;/code&gt;s using the &lt;code&gt;getFontMetrics()&lt;/code&gt; method.
(1812) {420144} [420407]: @param object the object to compare with this object @return &lt;code&gt;true&lt;/code&gt; if the object is the same as this object and &lt;code&gt;false&lt;/code&gt; otherwise @see #hashCode ------------ Returns the ascent of the font described by the receiver.
(1814) {420572} [420711]: @return the ascent of the font ------------ Returns the average character width, measured in pixels, of the font described by the receiver.
(1815) {420713} [420832]: @return the average character width of the font ------------ Returns the descent of the font described by the receiver.
(1817) {421001} [421123]: @return the descent of the font ------------ Returns the height of the font described by the receiver, measured in pixels.
(1819) {421214} [421372]: @return the height of the font @see #getAscent @see #getDescent @see #getLeading ------------ Returns the leading area of the font described by the receiver.
(1821) {421489} [421586]: @return the leading space of the font ------------ Returns an integer hash code for the receiver.
(1822) {421587} [421735]: Any two objects that return &lt;code&gt;true&lt;/code&gt; when passed to &lt;code&gt;equals&lt;/code&gt; must return the same value for this method.
(1823) {421737} [421863]: @return the receiver's hash @see #equals ------------ Invokes platform specific functionality to allocate a new font metrics.
(1827) {422184} [422451]: &lt;/p&gt; @param handle the &lt;code&gt;TEXTMETRIC&lt;/code&gt; containing information about a font @return a new font metrics object containing the specified &lt;code&gt;TEXTMETRIC&lt;/code&gt; @noreference This method is not intended to be referenced by clients.
(1831) {422963} [423122]: &lt;p&gt; &lt;code&gt;FormAttachments&lt;/code&gt; are set into the top, bottom, left, and right fields of the &lt;code&gt;FormData&lt;/code&gt; for a control.
(1861) {427735} [427880]: @param numerator the percentage of the position @since 3.0 ------------ Constructs a new instance of this class given a numerator and an offset.
(1863) {428011} [428215]: @param numerator the percentage of the position @param offset the offset of the side from the position ------------ Constructs a new instance of this class given a numerator and denominator and an offset.
(1865) {428321} [428543]: @param numerator the numerator of the position @param denominator the denominator of the position @param offset the offset of the side from the position ------------ Constructs a new instance of this class given a control.
(1868) {428723} [428857]: @param control the control the side is attached to ------------ Constructs a new instance of this class given a control and an offset.
(1870) {428983} [429185]: @param control the control the side is attached to @param offset the offset of the side from the control ------------ Constructs a new instance of this class given a control, an offset and an alignment.
(1872) {430466} [430601]: @return a string representation of the FormAttachment ====== FormData.java ====== Copyright (c) 2000, 2008 IBM Corporation and others.
(1875) {431027} [431164]: &lt;p&gt; To set a &lt;code&gt;FormData&lt;/code&gt; object into a control, you use the &lt;code&gt;setLayoutData ()&lt;/code&gt; method.
(1877) {431672} [431814]: &lt;code&gt;FormData&lt;/code&gt; objects also allow you to set the width and height of controls within a &lt;code&gt;FormLayout&lt;/code&gt;.
(1879) {432030} [432152]: This value is the wHint passed into Control.computeSize(int, int, boolean) to determine the preferred size of the control.
(1882) {432318} [432440]: This value is the hHint passed into Control.computeSize(int, int, boolean) to determine the preferred size of the control.
(1891) {433428} [433615]: @param width a minimum width for the control @param height a minimum height for the control ------------ Returns a string containing a concise, human-readable description of the receiver.
(1892) {433617} [433755]: @return a string representation of the FormData object ====== FormLayout.java ====== Copyright (c) 2000, 2008 IBM Corporation and others.
(1895) {434287} [434839]: &lt;p&gt; The following example code creates a &lt;code&gt;FormLayout&lt;/code&gt; and then sets it into a &lt;code&gt;Shell&lt;/code&gt;: &lt;pre&gt; Display display = new Display (); Shell shell = new Shell(display); FormLayout layout = new FormLayout(); layout.marginWidth = 3; layout.marginHeight = 3; shell.setLayout(layout); &lt;/pre&gt; &lt;/p&gt; &lt;p&gt; To use a &lt;code&gt;FormLayout&lt;/code&gt;, create a &lt;code&gt;FormData&lt;/code&gt; with &lt;code&gt;FormAttachment&lt;/code&gt; for each child of &lt;code&gt;Composite&lt;/code&gt;.
(1917) {438670} [438791]: @return a string representation of the layout ====== GC.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(1920) {439217} [439375]: Instances are used to draw on either an &lt;code&gt;Image&lt;/code&gt;, a &lt;code&gt;Control&lt;/code&gt;, or directly on a &lt;code&gt;Display&lt;/code&gt;.
(1933) {442590} [442703]: ------------ Constructs a new instance of this class which has been configured to draw on the specified drawable.
(1936) {442878} [443695]: &lt;/p&gt; @param drawable the drawable to draw on @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the drawable is null&lt;/li&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if there is no current device&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the drawable is an image that is not a bitmap or an icon - if the drawable is an image or printer that is already selected into another graphics context&lt;/li&gt; &lt;/ul&gt; @exception SWTError &lt;ul&gt; &lt;li&gt;ERROR_NO_HANDLES if a handle could not be obtained for GC creation&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS if not called from the thread that created the drawable&lt;/li&gt; &lt;/ul&gt; @see #dispose() ------------ Constructs a new instance of this class which has been configured to draw on the specified drawable.
(1939) {443870} [444788]: &lt;/p&gt; @param drawable the drawable to draw on @param style the style of GC to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the drawable is null&lt;/li&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if there is no current device&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the drawable is an image that is not a bitmap or an icon - if the drawable is an image or printer that is already selected into another graphics context&lt;/li&gt; &lt;/ul&gt; @exception SWTError &lt;ul&gt; &lt;li&gt;ERROR_NO_HANDLES if a handle could not be obtained for GC creation&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS if not called from the thread that created the drawable&lt;/li&gt; &lt;/ul&gt; @see #dispose() @since 2.1.2 ------------ Copies a rectangular area of the receiver at the specified position into the image, which must be of type &lt;code&gt;SWT.BITMAP&lt;/code&gt;.
(1940) {444790} [445431]: @param image the image to copy into @param x the x coordinate in the receiver of the area to be copied @param y the y coordinate in the receiver of the area to be copied @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the image is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the image is not a bitmap or has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Copies a rectangular area of the receiver at the source position onto the receiver at the destination position.
(1941) {445433} [446051]: @param srcX the x coordinate in the receiver of the area to be copied @param srcY the y coordinate in the receiver of the area to be copied @param width the width of the area to copy @param height the height of the area to copy @param destX the x coordinate in the receiver of the area to copy to @param destY the y coordinate in the receiver of the area to copy to @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Copies a rectangular area of the receiver at the source position onto the receiver at the destination position.
(1942) {446053} [446756]: @param srcX the x coordinate in the receiver of the area to be copied @param srcY the y coordinate in the receiver of the area to be copied @param width the width of the area to copy @param height the height of the area to copy @param destX the x coordinate in the receiver of the area to copy to @param destY the y coordinate in the receiver of the area to copy to @param paint if &lt;code&gt;true&lt;/code&gt; paint events will be generated for old and obscured areas @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Disposes of the operating system resources associated with the graphics context.
(1944) {446816} [447065]: @exception SWTError &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS if not called from the thread that created the drawable&lt;/li&gt; &lt;/ul&gt; ------------ Draws the outline of a circular or elliptical arc within the specified rectangular area.
(1948) {447408} [447666]: &lt;/p&gt;&lt;p&gt; The center of the arc is the center of the rectangle whose origin is (&lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;) and whose size is specified by the &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; arguments.
(1950) {447819} [448574]: &lt;/p&gt; @param x the x coordinate of the upper-left corner of the arc to be drawn @param y the y coordinate of the upper-left corner of the arc to be drawn @param width the width of the arc to be drawn @param height the height of the arc to be drawn @param startAngle the beginning angle @param arcAngle the angular extent of the arc, relative to the start angle @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Draws a rectangle, based on the specified arguments, which has the appearance of the platform's &lt;em&gt;focus rectangle&lt;/em&gt; if the platform supports such a notion, and otherwise draws a simple rectangle in the receiver's foreground color.
(1951) {448576} [448993]: @param x the x coordinate of the rectangle @param y the y coordinate of the rectangle @param width the width of the rectangle @param height the height of the rectangle @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see #drawRectangle(int, int, int, int) ------------ Draws the given image in the receiver at the specified coordinates.
(1952) {448995} [449802]: @param image the image to draw @param x the x coordinate of where to draw @param y the y coordinate of where to draw @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the image is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the image has been disposed&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the given coordinates are outside the bounds of the image&lt;/li&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTError &lt;ul&gt; &lt;li&gt;ERROR_NO_HANDLES - if no handles are available to perform the operation&lt;/li&gt; &lt;/ul&gt; ------------ Copies a rectangular area from the source image into a (potentially different sized) rectangular area in the receiver.
(1955) {450111} [450918]: @param image the source image @param srcX the x coordinate in the source image to copy from @param srcY the y coordinate in the source image to copy from @param srcWidth the width in points to copy from the source @param srcHeight the height in points to copy from the source @param destX the x coordinate in the destination to copy to @param destY the y coordinate in the destination to copy to @param destWidth the width in points of the destination rectangle @param destHeight the height in points of the destination rectangle @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the image is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the image has been disposed&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if any of the width or height arguments are negative.
(1956) {450919} [451515]: &lt;li&gt;ERROR_INVALID_ARGUMENT - if the source rectangle is not contained within the bounds of the source image&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTError &lt;ul&gt; &lt;li&gt;ERROR_NO_HANDLES - if no handles are available to perform the operation&lt;/li&gt; &lt;/ul&gt; ------------ Draws a line, using the foreground color, between the points (&lt;code&gt;x1&lt;/code&gt;, &lt;code&gt;y1&lt;/code&gt;) and (&lt;code&gt;x2&lt;/code&gt;, &lt;code&gt;y2&lt;/code&gt;).
(1957) {451517} [451920]: @param x1 the first point's x coordinate @param y1 the first point's y coordinate @param x2 the second point's x coordinate @param y2 the second point's y coordinate @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Draws the outline of an oval, using the foreground color, within the specified rectangular area.
(1958) {451921} [452147]: &lt;p&gt; The result is a circle or ellipse that fits within the rectangle specified by the &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt;, and &lt;code&gt;height&lt;/code&gt; arguments.
(1960) {452300} [452741]: &lt;/p&gt; @param x the x coordinate of the upper left corner of the oval to be drawn @param y the y coordinate of the upper left corner of the oval to be drawn @param width the width of the oval to be drawn @param height the height of the oval to be drawn @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Draws the path described by the parameter.
(1962) {452873} [453497]: &lt;/p&gt; @param path the path to draw @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parameter is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the parameter has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_NO_GRAPHICS_LIBRARY - if advanced graphics are not available&lt;/li&gt; &lt;/ul&gt; @see Path @since 3.1 ------------ Draws a pixel, using the foreground color, at the specified point (&lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;).
(1964) {453579} [453939]: &lt;/p&gt; @param x the point's x coordinate @param y the point's y coordinate @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.0 ------------ Draws the closed polygon which is defined by the specified array of integer coordinates, using the receiver's foreground color.
(1967) {454169} [454648]: @param pointArray an array of alternating x and y values which are the vertices of the polygon @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT if pointArray is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Draws the polyline which is defined by the specified array of integer coordinates, using the receiver's foreground color.
(1970) {454882} [455348]: @param pointArray an array of alternating x and y values which are the corners of the polyline @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the point array is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Draws the outline of the rectangle specified by the arguments, using the receiver's foreground color.
(1971) {455349} [455464]: The left and right edges of the rectangle are at &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;x + width&lt;/code&gt;.
(1972) {455465} [455564]: The top and bottom edges are at &lt;code&gt;y&lt;/code&gt; and &lt;code&gt;y + height&lt;/code&gt;.
(1973) {455566} [456007]: @param x the x coordinate of the rectangle to be drawn @param y the y coordinate of the rectangle to be drawn @param width the width of the rectangle to be drawn @param height the height of the rectangle to be drawn @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Draws the outline of the specified rectangle, using the receiver's foreground color.
(1974) {456008} [456138]: The left and right edges of the rectangle are at &lt;code&gt;rect.x&lt;/code&gt; and &lt;code&gt;rect.x + rect.width&lt;/code&gt;.
(1975) {456139} [456253]: The top and bottom edges are at &lt;code&gt;rect.y&lt;/code&gt; and &lt;code&gt;rect.y + rect.height&lt;/code&gt;.
(1976) {456255} [456673]: @param rect the rectangle to draw @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the rectangle is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Draws the outline of the round-cornered rectangle specified by the arguments, using the receiver's foreground color.
(1977) {456674} [456789]: The left and right edges of the rectangle are at &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;x + width&lt;/code&gt;.
(1978) {456790} [456889]: The top and bottom edges are at &lt;code&gt;y&lt;/code&gt; and &lt;code&gt;y + height&lt;/code&gt;.
(1979) {456890} [457128]: The &lt;em&gt;roundness&lt;/em&gt; of the corners is specified by the &lt;code&gt;arcWidth&lt;/code&gt; and &lt;code&gt;arcHeight&lt;/code&gt; arguments, which are respectively the width and height of the ellipse used to draw the corners.
(1980) {457130} [457642]: @param x the x coordinate of the rectangle to be drawn @param y the y coordinate of the rectangle to be drawn @param width the width of the rectangle to be drawn @param height the height of the rectangle to be drawn @param arcWidth the width of the arc @param arcHeight the height of the arc @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Draws the given string, using the receiver's current font and foreground color.
(1983) {457834} [458425]: @param string the string to be drawn @param x the x coordinate of the top left corner of the rectangular area where the string is to be drawn @param y the y coordinate of the top left corner of the rectangular area where the string is to be drawn @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the string is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Draws the given string, using the receiver's current font and foreground color.
(1985) {458492} [458731]: If &lt;code&gt;isTransparent&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, then the background of the rectangular area where the string is being drawn will not be modified, otherwise it will be filled with the receiver's background color.
(1986) {458733} [459442]: @param string the string to be drawn @param x the x coordinate of the top left corner of the rectangular area where the string is to be drawn @param y the y coordinate of the top left corner of the rectangular area where the string is to be drawn @param isTransparent if &lt;code&gt;true&lt;/code&gt; the background will be transparent, otherwise it will be opaque @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the string is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Draws the given string, using the receiver's current font and foreground color.
(1989) {459626} [460213]: @param string the string to be drawn @param x the x coordinate of the top left corner of the rectangular area where the text is to be drawn @param y the y coordinate of the top left corner of the rectangular area where the text is to be drawn @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the string is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Draws the given string, using the receiver's current font and foreground color.
(1991) {460274} [460511]: If &lt;code&gt;isTransparent&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, then the background of the rectangular area where the text is being drawn will not be modified, otherwise it will be filled with the receiver's background color.
(1992) {460513} [461218]: @param string the string to be drawn @param x the x coordinate of the top left corner of the rectangular area where the text is to be drawn @param y the y coordinate of the top left corner of the rectangular area where the text is to be drawn @param isTransparent if &lt;code&gt;true&lt;/code&gt; the background will be transparent, otherwise it will be opaque @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the string is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Draws the given string, using the receiver's current font and foreground color.
(1994) {461321} [461568]: If &lt;code&gt;flags&lt;/code&gt; includes &lt;code&gt;DRAW_TRANSPARENT&lt;/code&gt;, then the background of the rectangular area where the text is being drawn will not be modified, otherwise it will be filled with the receiver's background color.
(1995) {461569} [462782]: &lt;p&gt; The parameter &lt;code&gt;flags&lt;/code&gt; may be a combination of: &lt;dl&gt; &lt;dt&gt;&lt;b&gt;DRAW_DELIMITER&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;draw multiple lines&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;DRAW_TAB&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;expand tabs&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;DRAW_MNEMONIC&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;underline the mnemonic character&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;DRAW_TRANSPARENT&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;transparent background&lt;/dd&gt; &lt;/dl&gt; &lt;/p&gt; @param string the string to be drawn @param x the x coordinate of the top left corner of the rectangular area where the text is to be drawn @param y the y coordinate of the top left corner of the rectangular area where the text is to be drawn @param flags the flags specifying how to process the text @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the string is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Compares the argument to the receiver, and returns true if they represent the &lt;em&gt;same&lt;/em&gt; object using a class specific comparison.
(1996) {462784} [463117]: @param object the object to compare with this object @return &lt;code&gt;true&lt;/code&gt; if the object is the same as this object and &lt;code&gt;false&lt;/code&gt; otherwise @see #hashCode ------------ Fills the interior of a circular or elliptical arc within the specified rectangular area, with the receiver's background color.
(2000) {463460} [463718]: &lt;/p&gt;&lt;p&gt; The center of the arc is the center of the rectangle whose origin is (&lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;) and whose size is specified by the &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; arguments.
(2002) {463871} [464578]: &lt;/p&gt; @param x the x coordinate of the upper-left corner of the arc to be filled @param y the y coordinate of the upper-left corner of the arc to be filled @param width the width of the arc to be filled @param height the height of the arc to be filled @param startAngle the beginning angle @param arcAngle the angular extent of the arc, relative to the start angle @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see #drawArc ------------ Fills the interior of the specified rectangle with a gradient sweeping from left to right or top to bottom progressing from the receiver's foreground color to its background color.
(2003) {464580} [465295]: @param x the x coordinate of the rectangle to be filled @param y the y coordinate of the rectangle to be filled @param width the width of the rectangle to be filled, may be negative (inverts direction of gradient if horizontal) @param height the height of the rectangle to be filled, may be negative (inverts direction of gradient if vertical) @param vertical if true sweeps from top to bottom, else sweeps from left to right @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see #drawRectangle(int, int, int, int) ------------ Fills the interior of an oval, within the specified rectangular area, with the receiver's background color.
(2004) {465297} [465746]: @param x the x coordinate of the upper left corner of the oval to be filled @param y the y coordinate of the upper left corner of the oval to be filled @param width the width of the oval to be filled @param height the height of the oval to be filled @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see #drawOval ------------ Fills the path described by the parameter.
(2006) {465878} [466522]: &lt;/p&gt; @param path the path to fill @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parameter is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the parameter has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_NO_GRAPHICS_LIBRARY - if advanced graphics are not available&lt;/li&gt; &lt;/ul&gt; @see Path @since 3.1 ------------ Fills the interior of the closed polygon which is defined by the specified array of integer coordinates, using the receiver's background color.
(2009) {466752} [467231]: @param pointArray an array of alternating x and y values which are the vertices of the polygon @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT if pointArray is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see #drawPolygon ------------ Fills the interior of the rectangle specified by the arguments, using the receiver's background color.
(2010) {467233} [467720]: @param x the x coordinate of the rectangle to be filled @param y the y coordinate of the rectangle to be filled @param width the width of the rectangle to be filled @param height the height of the rectangle to be filled @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see #drawRectangle(int, int, int, int) ------------ Fills the interior of the specified rectangle, using the receiver's background color.
(2011) {467722} [468187]: @param rect the rectangle to be filled @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the rectangle is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see #drawRectangle(int, int, int, int) ------------ Fills the interior of the round-cornered rectangle specified by the arguments, using the receiver's background color.
(2012) {468189} [468784]: @param x the x coordinate of the rectangle to be filled @param y the y coordinate of the rectangle to be filled @param width the width of the rectangle to be filled @param height the height of the rectangle to be filled @param arcWidth the width of the arc @param arcHeight the height of the arc @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see #drawRoundRectangle ------------ Returns the &lt;em&gt;advance width&lt;/em&gt; of the specified character in the font which is currently selected into the receiver.
(2014) {468925} [469315]: &lt;/p&gt; @param ch the character to measure @return the distance in the x direction to move past the character before painting the next @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns &lt;code&gt;true&lt;/code&gt; if receiver is using the operating system's advanced graphics subsystem.
(2015) {469317} [469415]: Otherwise, &lt;code&gt;false&lt;/code&gt; is returned to indicate that normal graphics are in use.
(2017) {469492} [469556]: In this case, &lt;code&gt;false&lt;/code&gt; is always returned.
(2019) {469615} [469715]: If this subsystem supports advanced graphics, then &lt;code&gt;true&lt;/code&gt; is always returned.
(2021) {469946} [470078]: If the receiver has been explicitly switched to advanced mode and this mode is supported, &lt;code&gt;true&lt;/code&gt; is returned.
(2022) {470079} [470325]: &lt;/p&gt; @return the advanced value @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see #setAdvanced @since 3.1 ------------ Returns the receiver's alpha value.
(2024) {470388} [470744]: @return the alpha value @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Returns the receiver's anti-aliasing setting value, which will be one of &lt;code&gt;SWT.DEFAULT&lt;/code&gt;, &lt;code&gt;SWT.OFF&lt;/code&gt; or &lt;code&gt;SWT.ON&lt;/code&gt;.
(2026) {470842} [471082]: @return the anti-aliasing setting @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see #getTextAntialias @since 3.1 ------------ Returns the background color.
(2027) {471084} [471296]: @return the receiver's background color @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns the background pattern.
(2029) {471350} [471643]: @return the receiver's background pattern @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see Pattern @since 3.1 ------------ Returns the width of the specified character in the font selected into the receiver.
(2031) {471784} [472072]: &lt;/p&gt; @param ch the character to measure @return the width of the character @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns the bounding rectangle of the receiver's clipping region.
(2033) {472214} [472496]: @return the bounding rectangle of the clipping region @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Sets the region managed by the argument to the current clipping region of the receiver.
(2034) {472498} [473036]: @param region the region to fill with the clipping region @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the region is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the region is disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's fill rule, which will be one of &lt;code&gt;SWT.FILL_EVEN_ODD&lt;/code&gt; or &lt;code&gt;SWT.FILL_WINDING&lt;/code&gt;.
(2035) {473038} [473303]: @return the receiver's fill rule @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Returns the font currently being used by the receiver to draw and measure text.
(2036) {473305} [473600]: @return the receiver's font @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns a FontMetrics which contains information about the font currently being used by the receiver to draw and measure text.
(2037) {473602} [473828]: @return font metrics for the receiver's font @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's foreground color.
(2038) {473830} [474055]: @return the color used for drawing foreground things @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns the foreground pattern.
(2040) {474109} [474337]: @return the receiver's foreground pattern @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see Pattern @since 3.1 ------------ Returns the GCData.
(2044) {474649} [474902]: &lt;/p&gt; @return the receiver's GCData @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see GCData @noreference This method is not intended to be referenced by clients.
(2045) {474904} [475138]: @since 3.2 ------------ Returns the receiver's interpolation setting, which will be one of &lt;code&gt;SWT.DEFAULT&lt;/code&gt;, &lt;code&gt;SWT.NONE&lt;/code&gt;, &lt;code&gt;SWT.LOW&lt;/code&gt; or &lt;code&gt;SWT.HIGH&lt;/code&gt;.
(2046) {475140} [475377]: @return the receiver's interpolation setting @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Returns the receiver's line attributes.
(2047) {475379} [475779]: @return the line attributes used for drawing lines @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.3 ------------ Returns the receiver's line cap style, which will be one of the constants &lt;code&gt;SWT.CAP_FLAT&lt;/code&gt;, &lt;code&gt;SWT.CAP_ROUND&lt;/code&gt;, or &lt;code&gt;SWT.CAP_SQUARE&lt;/code&gt;.
(2048) {475781} [476018]: @return the cap style used for drawing lines @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Returns the receiver's line dash style.
(2050) {476072} [476476]: @return the line dash style used for drawing lines @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Returns the receiver's line join style, which will be one of the constants &lt;code&gt;SWT.JOIN_MITER&lt;/code&gt;, &lt;code&gt;SWT.JOIN_ROUND&lt;/code&gt;, or &lt;code&gt;SWT.JOIN_BEVEL&lt;/code&gt;.
(2051) {476478} [476957]: @return the join style used for drawing lines @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Returns the receiver's line style, which will be one of the constants &lt;code&gt;SWT.LINE_SOLID&lt;/code&gt;, &lt;code&gt;SWT.LINE_DASH&lt;/code&gt;, &lt;code&gt;SWT.LINE_DOT&lt;/code&gt;, &lt;code&gt;SWT.LINE_DASHDOT&lt;/code&gt; or &lt;code&gt;SWT.LINE_DASHDOTDOT&lt;/code&gt;.
(2052) {476959} [477374]: @return the style used for drawing lines @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns the width that will be used when drawing lines for all of the figure drawing operations (that is, &lt;code&gt;drawLine&lt;/code&gt;, &lt;code&gt;drawRectangle&lt;/code&gt;, &lt;code&gt;drawPolyline&lt;/code&gt;, and so forth.
(2053) {477376} [477592]: @return the receiver's line width @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's style information.
(2056) {477885} [478267]: &lt;/p&gt; @return the style bits @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 2.1.2 ------------ Returns the receiver's text drawing anti-aliasing setting value, which will be one of &lt;code&gt;SWT.DEFAULT&lt;/code&gt;, &lt;code&gt;SWT.OFF&lt;/code&gt; or &lt;code&gt;SWT.ON&lt;/code&gt;.
(2058) {478362} [478650]: @return the anti-aliasing setting @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see #getAntialias @since 3.1 ------------ Sets the parameter to the transform that is currently being used by the receiver.
(2059) {478652} [479440]: @param transform the destination to copy the transform into @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parameter is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the parameter has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see Transform @since 3.1 ------------ Returns &lt;code&gt;true&lt;/code&gt; if this GC is drawing in the mode where the resulting color in the destination is the &lt;em&gt;exclusive or&lt;/em&gt; of the color values in the source and the destination, and &lt;code&gt;false&lt;/code&gt; if it is drawing in the mode where the destination color is being replaced with the source color value.
(2060) {479442} [479724]: @return &lt;code&gt;true&lt;/code&gt; true if the receiver is in XOR mode, and false otherwise @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns an integer hash code for the receiver.
(2061) {479725} [479873]: Any two objects that return &lt;code&gt;true&lt;/code&gt; when passed to &lt;code&gt;equals&lt;/code&gt; must return the same value for this method.
(2062) {479875} [480192]: @return the receiver's hash @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see #equals ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver has a clipping region set into it, and &lt;code&gt;false&lt;/code&gt; otherwise.
(2065) {480442} [480811]: @return &lt;code&gt;true&lt;/code&gt; if the GC has a clipping region, and &lt;code&gt;false&lt;/code&gt; otherwise @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns &lt;code&gt;true&lt;/code&gt; if the GC has been disposed, and &lt;code&gt;false&lt;/code&gt; otherwise.
(2068) {480983} [481263]: @return &lt;code&gt;true&lt;/code&gt; when the GC is disposed and &lt;code&gt;false&lt;/code&gt; otherwise ------------ Sets the receiver to always use the operating system's advanced graphics subsystem for all graphics operations if the argument is &lt;code&gt;true&lt;/code&gt;.
(2078) {482405} [483023]: &lt;/p&gt; @param advanced the new advanced graphics state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see #setAlpha @see #setAntialias @see #setBackgroundPattern @see #setClipping(Path) @see #setForegroundPattern @see #setLineAttributes @see #setInterpolation @see #setTextAntialias @see #setTransform @see #getAdvanced @since 3.1 ------------ Sets the receiver's anti-aliasing value to the parameter, which must be one of &lt;code&gt;SWT.DEFAULT&lt;/code&gt;, &lt;code&gt;SWT.OFF&lt;/code&gt; or &lt;code&gt;SWT.ON&lt;/code&gt;.
(2081) {483251} [483936]: &lt;/p&gt; @param antialias the anti-aliasing setting @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the parameter is not one of &lt;code&gt;SWT.DEFAULT&lt;/code&gt;, &lt;code&gt;SWT.OFF&lt;/code&gt; or &lt;code&gt;SWT.ON&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_NO_GRAPHICS_LIBRARY - if advanced graphics are not available&lt;/li&gt; &lt;/ul&gt; @see #getAdvanced @see #setAdvanced @see #setTextAntialias @since 3.1 ------------ Sets the receiver's alpha value which must be between 0 (transparent) and 255 (opaque).
(2083) {484068} [484412]: &lt;/p&gt; @param alpha the alpha value @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_NO_GRAPHICS_LIBRARY - if advanced graphics are not available&lt;/li&gt; &lt;/ul&gt; @see #getAdvanced @see #setAdvanced @since 3.1 ------------ Sets the background color.
(2085) {484511} [484935]: @param color the new background color for the receiver @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the color is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the color has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Sets the background pattern.
(2088) {485119} [485728]: &lt;/p&gt; @param pattern the new background pattern @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the parameter has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_NO_GRAPHICS_LIBRARY - if advanced graphics are not available&lt;/li&gt; &lt;/ul&gt; @see Pattern @see #getAdvanced @see #setAdvanced @since 3.1 ------------ Sets the area of the receiver which can be changed by drawing operations to the rectangular area specified by the arguments.
(2089) {485730} [486186]: @param x the x coordinate of the clipping rectangle @param y the y coordinate of the clipping rectangle @param width the width of the clipping rectangle @param height the height of the clipping rectangle @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Sets the area of the receiver which can be changed by drawing operations to the path specified by the argument.
(2091) {486318} [486360]: &lt;/p&gt; @param path the clipping path.
(2092) {486362} [486907]: @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the path has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_NO_GRAPHICS_LIBRARY - if advanced graphics are not available&lt;/li&gt; &lt;/ul&gt; @see Path @see #getAdvanced @see #setAdvanced @since 3.1 ------------ Sets the area of the receiver which can be changed by drawing operations to the rectangular area specified by the argument.
(2093) {486909} [487027]: Specifying &lt;code&gt;null&lt;/code&gt; for the rectangle reverts the receiver's clipping area to its original value.
(2094) {487029} [487351]: @param rect the clipping rectangle or &lt;code&gt;null&lt;/code&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Sets the area of the receiver which can be changed by drawing operations to the region specified by the argument.
(2095) {487353} [487468]: Specifying &lt;code&gt;null&lt;/code&gt; for the region reverts the receiver's clipping area to its original value.
(2096) {487470} [487972]: @param region the clipping region or &lt;code&gt;null&lt;/code&gt; @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the region has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's fill rule to the parameter, which must be one of &lt;code&gt;SWT.FILL_EVEN_ODD&lt;/code&gt; or &lt;code&gt;SWT.FILL_WINDING&lt;/code&gt;.
(2097) {487974} [488466]: @param rule the new fill rule @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the rule is not one of &lt;code&gt;SWT.FILL_EVEN_ODD&lt;/code&gt; or &lt;code&gt;SWT.FILL_WINDING&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Sets the font which will be used by the receiver to draw and measure text to the argument.
(2099) {488564} [488944]: @param font the new font for the receiver, or null to indicate a default font @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the font has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Sets the foreground color.
(2101) {489028} [489452]: @param color the new foreground color for the receiver @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the color is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the color has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Sets the foreground pattern.
(2104) {489636} [490344]: &lt;/p&gt; @param pattern the new foreground pattern @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the parameter has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_NO_GRAPHICS_LIBRARY - if advanced graphics are not available&lt;/li&gt; &lt;/ul&gt; @see Pattern @see #getAdvanced @see #setAdvanced @since 3.1 ------------ Sets the receiver's interpolation setting to the parameter, which must be one of &lt;code&gt;SWT.DEFAULT&lt;/code&gt;, &lt;code&gt;SWT.NONE&lt;/code&gt;, &lt;code&gt;SWT.LOW&lt;/code&gt; or &lt;code&gt;SWT.HIGH&lt;/code&gt;.
(2106) {490476} [491116]: &lt;/p&gt; @param interpolation the new interpolation setting @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the rule is not one of &lt;code&gt;SWT.DEFAULT&lt;/code&gt;, &lt;code&gt;SWT.NONE&lt;/code&gt;, &lt;code&gt;SWT.LOW&lt;/code&gt; or &lt;code&gt;SWT.HIGH&lt;/code&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_NO_GRAPHICS_LIBRARY - if advanced graphics are not available&lt;/li&gt; &lt;/ul&gt; @see #getAdvanced @see #setAdvanced @since 3.1 ------------ Sets the receiver's line attributes.
(2108) {491248} [492021]: &lt;/p&gt; @param attributes the line attributes @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the attributes is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if any of the line attributes is not valid&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_NO_GRAPHICS_LIBRARY - if advanced graphics are not available&lt;/li&gt; &lt;/ul&gt; @see LineAttributes @see #getAdvanced @see #setAdvanced @since 3.3 ------------ Sets the receiver's line cap style to the argument, which must be one of the constants &lt;code&gt;SWT.CAP_FLAT&lt;/code&gt;, &lt;code&gt;SWT.CAP_ROUND&lt;/code&gt;, or &lt;code&gt;SWT.CAP_SQUARE&lt;/code&gt;.
(2109) {492023} [492413]: @param cap the cap style to be used for drawing lines @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the style is not valid&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Sets the receiver's line dash style to the argument.
(2111) {492466} [492661]: If the argument is not &lt;code&gt;null&lt;/code&gt;, the receiver's line style is set to &lt;code&gt;SWT.LINE_CUSTOM&lt;/code&gt;, otherwise it is set to &lt;code&gt;SWT.LINE_SOLID&lt;/code&gt;.
(2112) {492663} [493250]: @param dashes the dash style to be used for drawing lines @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if any of the values in the array is less than or equal 0&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Sets the receiver's line join style to the argument, which must be one of the constants &lt;code&gt;SWT.JOIN_MITER&lt;/code&gt;, &lt;code&gt;SWT.JOIN_ROUND&lt;/code&gt;, or &lt;code&gt;SWT.JOIN_BEVEL&lt;/code&gt;.
(2113) {493252} [493885]: @param join the join style to be used for drawing lines @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the style is not valid&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Sets the receiver's line style to the argument, which must be one of the constants &lt;code&gt;SWT.LINE_SOLID&lt;/code&gt;, &lt;code&gt;SWT.LINE_DASH&lt;/code&gt;, &lt;code&gt;SWT.LINE_DOT&lt;/code&gt;, &lt;code&gt;SWT.LINE_DASHDOT&lt;/code&gt; or &lt;code&gt;SWT.LINE_DASHDOTDOT&lt;/code&gt;.
(2114) {493887} [494445]: @param lineStyle the style to be used for drawing lines @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the style is not valid&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Sets the width that will be used when drawing lines for all of the figure drawing operations (that is, &lt;code&gt;drawLine&lt;/code&gt;, &lt;code&gt;drawRectangle&lt;/code&gt;, &lt;code&gt;drawPolyline&lt;/code&gt;, and so forth.
(2117) {494646} [495222]: &lt;/p&gt; @param lineWidth the width of a line @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ If the argument is &lt;code&gt;true&lt;/code&gt;, puts the receiver in a drawing mode where the resulting color in the destination is the &lt;em&gt;exclusive or&lt;/em&gt; of the color values in the source and the destination, and if the argument is &lt;code&gt;false&lt;/code&gt;, puts the receiver in a drawing mode where the destination color is replaced with the source color value.
(2120) {495413} [495968]: &lt;/p&gt; @param xor if &lt;code&gt;true&lt;/code&gt;, then &lt;em&gt;xor&lt;/em&gt; mode is used, otherwise &lt;em&gt;source copy&lt;/em&gt; mode is used @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @deprecated this functionality is not supported on some platforms ------------ Sets the receiver's text anti-aliasing value to the parameter, which must be one of &lt;code&gt;SWT.DEFAULT&lt;/code&gt;, &lt;code&gt;SWT.OFF&lt;/code&gt; or &lt;code&gt;SWT.ON&lt;/code&gt;.
(2123) {496197} [496855]: &lt;/p&gt; @param antialias the anti-aliasing setting @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the parameter is not one of &lt;code&gt;SWT.DEFAULT&lt;/code&gt;, &lt;code&gt;SWT.OFF&lt;/code&gt; or &lt;code&gt;SWT.ON&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_NO_GRAPHICS_LIBRARY - if advanced graphics are not available&lt;/li&gt; &lt;/ul&gt; @see #getAdvanced @see #setAdvanced @see #setAntialias @since 3.1 ------------ Sets the transform that is currently being used by the receiver.
(2124) {496856} [496961]: If the argument is &lt;code&gt;null&lt;/code&gt;, the current transform is set to the identity transform.
(2126) {497093} [497615]: &lt;/p&gt; @param transform the transform to set @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the parameter has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_NO_GRAPHICS_LIBRARY - if advanced graphics are not available&lt;/li&gt; &lt;/ul&gt; @see Transform @see #getAdvanced @see #setAdvanced @since 3.1 ------------ Returns the extent of the given string.
(2128) {497682} [497878]: &lt;p&gt; The &lt;em&gt;extent&lt;/em&gt; of a string is the width and height of the rectangular area it would cover if drawn in a particular font (in this case, the current font in the receiver).
(2129) {497879} [498283]: &lt;/p&gt; @param string the string to measure @return a point containing the extent of the string @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the string is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns the extent of the given string.
(2131) {498344} [498540]: &lt;p&gt; The &lt;em&gt;extent&lt;/em&gt; of a string is the width and height of the rectangular area it would cover if drawn in a particular font (in this case, the current font in the receiver).
(2132) {498541} [498945]: &lt;/p&gt; @param string the string to measure @return a point containing the extent of the string @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the string is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns the extent of the given string.
(2133) {498946} [499685]: Tab expansion, line delimiter and mnemonic processing are performed according to the specified flags, which can be a combination of: &lt;dl&gt; &lt;dt&gt;&lt;b&gt;DRAW_DELIMITER&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;draw multiple lines&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;DRAW_TAB&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;expand tabs&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;DRAW_MNEMONIC&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;underline the mnemonic character&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;DRAW_TRANSPARENT&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;transparent background&lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; The &lt;em&gt;extent&lt;/em&gt; of a string is the width and height of the rectangular area it would cover if drawn in a particular font (in this case, the current font in the receiver).
(2134) {499686} [500191]: &lt;/p&gt; @param string the string to measure @param flags the flags specifying how to process the text @return a point containing the extent of the string @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the string is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns a string containing a concise, human-readable description of the receiver.
(2139) {500641} [500699]: &lt;/p&gt; @param drawable the Drawable for the receiver.
(2140) {500700} [500738]: @param data the data for the receiver.
(2141) {500740} [500852]: @return a new &lt;code&gt;GC&lt;/code&gt; @noreference This method is not intended to be referenced by clients.
(2142) {500853} [500933]: ------------ Invokes platform specific functionality to wrap a graphics context.
(2147) {501285} [501323]: @param data the data for the receiver.
(2148) {501325} [501437]: @return a new &lt;code&gt;GC&lt;/code&gt; @noreference This method is not intended to be referenced by clients.
(2169) {505001} [505134]: public int y; This field is valid when the &lt;code&gt;detail&lt;/code&gt; field is set to &lt;code&gt;GESTURE_ROTATE&lt;/code&gt;.
(2172) {505322} [505504]: public double rotation; This field is valid when the &lt;code&gt;detail&lt;/code&gt; field is set to &lt;code&gt;GESTURE_SWIPE&lt;/code&gt; or &lt;code&gt;GESTURE_PAN&lt;/code&gt;.
(2175) {505726} [505917]: &lt;p&gt; If &lt;code&gt;detail&lt;/code&gt; is &lt;code&gt;GESTURE_SWIPE&lt;/code&gt; then a positive value indicates a swipe to the right and a negative value indicates a swipe to the left.
(2176) {505918} [506159]: * If &lt;code&gt;detail&lt;/code&gt; is &lt;code&gt;GESTURE_PAN&lt;/code&gt; then a positive value indicates a pan to the right by this field's count of pixels and a negative value indicates a pan to the left by this field's count of pixels.
(2177) {506161} [506342]: public int xDirection; This field is valid when the &lt;code&gt;detail&lt;/code&gt; field is set to &lt;code&gt;GESTURE_SWIPE&lt;/code&gt; or &lt;code&gt;GESTURE_PAN&lt;/code&gt;.
(2180) {506564} [506739]: * If &lt;code&gt;detail&lt;/code&gt; is &lt;code&gt;GESTURE_SWIPE&lt;/code&gt; then a positive value indicates a downward swipe and a negative value indicates an upward swipe.
(2181) {506740} [506973]: * If &lt;code&gt;detail&lt;/code&gt; is &lt;code&gt;GESTURE_PAN&lt;/code&gt; then a positive value indicates a downward pan by this field's count of pixels and a negative value indicates an upward pan by this field's count of pixels.
(2182) {506975} [507118]: public int yDirection; This field is valid when the &lt;code&gt;detail&lt;/code&gt; field is set to &lt;code&gt;GESTURE_MAGNIFY&lt;/code&gt;.
(2186) {507428} [507499]: Setting it to &lt;code&gt;false&lt;/code&gt; will cancel the operation.
(2189) {507830} [507963]: @return a string representation of the event ====== GestureListener.java ====== Copyright (c) 2010, 2016 IBM Corporation and others.
(2193) {508760} [508828]: When a gesture is triggered, the appropriate method will be invoked.
(2205) {510212} [510457]: &lt;/p&gt; &lt;p&gt; Application code does &lt;em&gt;not&lt;/em&gt; need to explicitly release the resources managed by each instance when those instances are no longer required, and thus no &lt;code&gt;dispose()&lt;/code&gt; method is provided.
(2207) {510867} [511298]: @param ascent the GlyphMetrics ascent @param descent the GlyphMetrics descent @param width the GlyphMetrics width @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the ascent, descent or width argument is negative&lt;/li&gt; &lt;/ul&gt; ------------ Compares the argument to the receiver, and returns true if they represent the &lt;em&gt;same&lt;/em&gt; object using a class specific comparison.
(2208) {511300} [511554]: @param object the object to compare with this object @return &lt;code&gt;true&lt;/code&gt; if the object is the same as this object and &lt;code&gt;false&lt;/code&gt; otherwise @see #hashCode() ------------ Returns an integer hash code for the receiver.
(2209) {511555} [511703]: Any two objects that return &lt;code&gt;true&lt;/code&gt; when passed to &lt;code&gt;equals&lt;/code&gt; must return the same value for this method.
(2210) {511705} [511850]: @return the receiver's hash @see #equals(Object) ------------ Returns a string containing a concise, human-readable description of the receiver.
(2211) {511852} [512010]: @return a string representation of the &lt;code&gt;GlyphMetrics&lt;/code&gt; ====== GridData.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(2214) {512435} [512575]: To set a &lt;code&gt;GridData&lt;/code&gt; object into a control, you use the &lt;code&gt;Control.setLayoutData(Object)&lt;/code&gt; method.
(2215) {512576} [512682]: &lt;p&gt; There are two ways to create a &lt;code&gt;GridData&lt;/code&gt; object with certain fields set.
(2224) {515256} [515378]: This value is the wHint passed into Control.computeSize(int, int, boolean) to determine the preferred size of the control.
(2227) {515553} [515675]: This value is the hHint passed into Control.computeSize(int, int, boolean) to determine the preferred size of the control.
(2235) {516572} [516828]: If grabExcessHorizontalSpace is &lt;code&gt;true&lt;/code&gt;, the following rules apply to the width of the cell:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;If extra horizontal space is available in the parent, the cell will grow to be wider than its preferred width.
(2239) {518078} [518333]: If grabExcessVerticalSpace is &lt;code&gt;true&lt;/code&gt;, the following rules apply to the height of the cell:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;If extra vertical space is available in the parent, the cell will grow to be taller than its preferred height.
(2251) {520364} [520483]: If this value is &lt;code&gt;true&lt;/code&gt;, the size and position of the control will not be managed by the layout.
(2252) {520485} [520601]: If this value is &lt;code&gt;false&lt;/code&gt;, the size and position of the control will be computed and assigned.
(2253) {520602} [520656]: * The default value is &lt;code&gt;false&lt;/code&gt;.
(2271) {521657} [521745]: Use &lt;code&gt;new GridData(int, SWT.BEGINNING, boolean, boolean)&lt;/code&gt; instead.
(2274) {521949} [522034]: Use &lt;code&gt;new GridData(int, SWT.CENTER, boolean, boolean)&lt;/code&gt; instead.
(2277) {522225} [522307]: Use &lt;code&gt;new GridData(int, SWT.END, boolean, boolean)&lt;/code&gt; instead.
(2282) {522764} [522852]: Use &lt;code&gt;new GridData(SWT.BEGINNING, int, boolean, boolean)&lt;/code&gt; instead.
(2285) {523060} [523145]: Use &lt;code&gt;new GridData(SWT.CENTER, int, boolean, boolean)&lt;/code&gt; instead.
(2288) {523337} [523419]: Use &lt;code&gt;new GridData(SWT.END, int, boolean, boolean)&lt;/code&gt; instead.
(2291) {523611} [523694]: Use &lt;code&gt;new GridData(SWT.FILL, int, boolean, boolean)&lt;/code&gt; instead.
(2294) {523895} [523970]: Use &lt;code&gt;new GridData(int, int, true, boolean)&lt;/code&gt; instead.
(2297) {524163} [524238]: Use &lt;code&gt;new GridData(int, int, boolean, true)&lt;/code&gt; instead.
(2300) {524514} [524594]: Use &lt;code&gt;new GridData(int, SWT.FILL, boolean, true)&lt;/code&gt; instead.
(2303) {524902} [524982]: Use &lt;code&gt;new GridData(SWT.FILL, int, true, boolean)&lt;/code&gt; instead.
(2306) {525310} [525392]: Use &lt;code&gt;new GridData(SWT.FILL, SWT.FILL, true, true)&lt;/code&gt; instead.
(2314) {527459} [527653]: @param width a minimum width for the column @param height a minimum height for the row @since 3.0 ------------ Returns a string containing a concise, human-readable description of the receiver.
(2315) {527655} [527793]: @return a string representation of the GridData object ====== GridLayout.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(2318) {528209} [528406]: &lt;p&gt; &lt;code&gt;GridLayout&lt;/code&gt; has a number of configuration fields, and the controls it lays out can have an associated layout data object, called &lt;code&gt;GridData&lt;/code&gt;.
(2319) {528407} [528554]: The power of &lt;code&gt;GridLayout&lt;/code&gt; lies in the ability to configure &lt;code&gt;GridData&lt;/code&gt; for each control in the layout.
(2320) {528555} [528981]: &lt;/p&gt; &lt;p&gt; The following code creates a shell managed by a &lt;code&gt;GridLayout&lt;/code&gt; with 3 columns: &lt;pre&gt; Display display = new Display(); Shell shell = new Shell(display); GridLayout gridLayout = new GridLayout(); gridLayout.numColumns = 3; shell.setLayout(gridLayout); &lt;/pre&gt; The &lt;code&gt;numColumns&lt;/code&gt; field is the most important field in a &lt;code&gt;GridLayout&lt;/code&gt;.
(2321) {528982} [529164]: Widgets are laid out in columns from left to right, and a new row is created when &lt;code&gt;numColumns&lt;/code&gt; + 1 controls are added to the &lt;code&gt;Composite&lt;code&gt;.
(2325) {529822} [529851]: * The default value is false.
(2339) {531489} [531642]: ------------ Constructs a new instance of this class given the number of columns, and whether or not the columns should be forced to have the same width.
(2341) {531746} [531983]: @param numColumns the number of columns in the grid @param makeColumnsEqualWidth whether or not the columns will have equal width @since 2.0 ------------ Returns a string containing a concise, human-readable description of the receiver.
(2342) {531985} [532109]: @return a string representation of the layout ====== Group.java ====== Copyright (c) 2000, 2015 IBM Corporation and others.
(2354) {533950} [534743]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT#SHADOW_ETCHED_IN @see SWT#SHADOW_ETCHED_OUT @see SWT#SHADOW_IN @see SWT#SHADOW_OUT @see SWT#SHADOW_NONE @see Widget#checkSubclass @see Widget#getStyle ------------ Returns the receiver's text, which is the string that the is used as the &lt;em&gt;title&lt;/em&gt;.
(2356) {534811} [535229]: @return the text @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's text, which is the string that will be displayed as the receiver's &lt;em&gt;title&lt;/em&gt;, to the argument, which may not be null.
(2364) {535872} [536348]: &lt;/p&gt; @param string the new text @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the text is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ====== HelpEvent.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(2377) {538626} [538806]: That is, they are ready to paint using methods such as &lt;code&gt;GC.drawImage()&lt;/code&gt; and display on widgets with, for example, &lt;code&gt;Button.setImage()&lt;/code&gt;.
(2380) {539064} [539150]: &lt;/p&gt;&lt;p&gt; There are two primary ways to use &lt;code&gt;Images&lt;/code&gt;.
(2381) {539151} [539250]: The first is to load a graphic file from disk and create an &lt;code&gt;Image&lt;/code&gt; from it.
(2397) {542733} [542825]: ------------ Constructs an empty instance of this class with the specified width and height.
(2401) {543372} [544067]: &lt;/p&gt; @param device the device on which to create the image @param width the width of the new image @param height the height of the new image @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if device is null and there is no current device&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if either the width or height is negative or zero&lt;/li&gt; &lt;/ul&gt; @exception SWTError &lt;ul&gt; &lt;li&gt;ERROR_NO_HANDLES if a handle could not be obtained for image creation&lt;/li&gt; &lt;/ul&gt; @see #dispose() ------------ Constructs a new instance of this class based on the provided image, with an appearance that varies depending on the value of the flag.
(2403) {544650} [545904]: &lt;/p&gt; @param device the device on which to create the image @param srcImage the image to use as the source @param flag the style, either &lt;code&gt;IMAGE_COPY&lt;/code&gt;, &lt;code&gt;IMAGE_DISABLE&lt;/code&gt; or &lt;code&gt;IMAGE_GRAY&lt;/code&gt; @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if device is null and there is no current device&lt;/li&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if srcImage is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the flag is not one of &lt;code&gt;IMAGE_COPY&lt;/code&gt;, &lt;code&gt;IMAGE_DISABLE&lt;/code&gt; or &lt;code&gt;IMAGE_GRAY&lt;/code&gt;&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the image has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_IMAGE - if the image is not a bitmap or an icon, or is otherwise in an invalid state&lt;/li&gt; &lt;li&gt;ERROR_UNSUPPORTED_DEPTH - if the depth of the image is not supported&lt;/li&gt; &lt;/ul&gt; @exception SWTError &lt;ul&gt; &lt;li&gt;ERROR_NO_HANDLES if a handle could not be obtained for image creation&lt;/li&gt; &lt;/ul&gt; @see #dispose() ------------ Constructs an empty instance of this class with the width and height of the specified rectangle.
(2407) {546453} [547182]: &lt;/p&gt; @param device the device on which to create the image @param bounds a rectangle specifying the image's width and height (must not be null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if device is null and there is no current device&lt;/li&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the bounds rectangle is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if either the rectangle's width or height is negative&lt;/li&gt; &lt;/ul&gt; @exception SWTError &lt;ul&gt; &lt;li&gt;ERROR_NO_HANDLES if a handle could not be obtained for image creation&lt;/li&gt; &lt;/ul&gt; @see #dispose() ------------ Constructs an instance of this class from the given &lt;code&gt;ImageData&lt;/code&gt;.
(2409) {547251} [548063]: &lt;/p&gt; @param device the device on which to create the image @param data the image data to create the image from (must not be null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if device is null and there is no current device&lt;/li&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the image data is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_UNSUPPORTED_DEPTH - if the depth of the ImageData is not supported&lt;/li&gt; &lt;/ul&gt; @exception SWTError &lt;ul&gt; &lt;li&gt;ERROR_NO_HANDLES if a handle could not be obtained for image creation&lt;/li&gt; &lt;/ul&gt; @see #dispose() ------------ Constructs an instance of this class, whose type is &lt;code&gt;SWT.ICON&lt;/code&gt;, from the two given &lt;code&gt;ImageData&lt;/code&gt; objects.
(2415) {548456} [549183]: &lt;/p&gt; @param device the device on which to create the icon @param source the color data for the icon @param mask the mask data for the icon @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if device is null and there is no current device&lt;/li&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if either the source or mask is null &lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if source and mask are different sizes&lt;/li&gt; &lt;/ul&gt; @exception SWTError &lt;ul&gt; &lt;li&gt;ERROR_NO_HANDLES if a handle could not be obtained for image creation&lt;/li&gt; &lt;/ul&gt; @see #dispose() ------------ Constructs an instance of this class by loading its representation from the specified input stream.
(2420) {549530} [549603]: To load multiple images, use &lt;code&gt;ImageLoader.load()&lt;/code&gt;.
(2422) {550121} [551156]: &lt;/p&gt; @param device the device on which to create the image @param stream the input stream to load the image from @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if device is null and there is no current device&lt;/li&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the stream is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_IO - if an IO error occurs while reading from the stream&lt;/li&gt; &lt;li&gt;ERROR_INVALID_IMAGE - if the image stream contains invalid data &lt;/li&gt; &lt;li&gt;ERROR_UNSUPPORTED_DEPTH - if the image stream describes an image with an unsupported depth&lt;/li&gt; &lt;li&gt;ERROR_UNSUPPORTED_FORMAT - if the image stream contains an unrecognized format&lt;/li&gt; &lt;/ul&gt; @exception SWTError &lt;ul&gt; &lt;li&gt;ERROR_NO_HANDLES if a handle could not be obtained for image creation&lt;/li&gt; &lt;/ul&gt; @see #dispose() ------------ Constructs an instance of this class by loading its representation from the file with the specified name.
(2427) {551508} [552561]: &lt;/p&gt; @param device the device on which to create the image @param filename the name of the file to load the image from @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if device is null and there is no current device&lt;/li&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the file name is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_IO - if an IO error occurs while reading from the file&lt;/li&gt; &lt;li&gt;ERROR_INVALID_IMAGE - if the image file contains invalid data &lt;/li&gt; &lt;li&gt;ERROR_UNSUPPORTED_DEPTH - if the image file describes an image with an unsupported depth&lt;/li&gt; &lt;li&gt;ERROR_UNSUPPORTED_FORMAT - if the image file contains an unrecognized format&lt;/li&gt; &lt;/ul&gt; @exception SWTError &lt;ul&gt; &lt;li&gt;ERROR_NO_HANDLES if a handle could not be obtained for image creation&lt;/li&gt; &lt;/ul&gt; @see #dispose() ------------ Constructs an instance of this class by loading its representation from the file retrieved from the ImageFileNameProvider.
(2430) {552767} [553976]: @param device the device on which to create the image @param imageFileNameProvider the ImageFileNameProvider object that is to be used to get the file name @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if device is null and there is no current device&lt;/li&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the ImageFileNameProvider is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the fileName provided by ImageFileNameProvider is null at 100% zoom&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_IO - if an IO error occurs while reading from the file&lt;/li&gt; &lt;li&gt;ERROR_INVALID_IMAGE - if the image file contains invalid data &lt;/li&gt; &lt;li&gt;ERROR_UNSUPPORTED_DEPTH - if the image file describes an image with an unsupported depth&lt;/li&gt; &lt;li&gt;ERROR_UNSUPPORTED_FORMAT - if the image file contains an unrecognized format&lt;/li&gt; &lt;/ul&gt; @exception SWTError &lt;ul&gt; &lt;li&gt;ERROR_NO_HANDLES if a handle could not be obtained for image creation&lt;/li&gt; &lt;/ul&gt; @since 3.104 ------------ Constructs an instance of this class by loading its representation from the ImageData retrieved from the ImageDataProvider.
(2433) {554182} [555308]: @param device the device on which to create the image @param imageDataProvider the ImageDataProvider object that is to be used to get the ImageData @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if device is null and there is no current device&lt;/li&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the ImageDataProvider is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the ImageData provided by ImageDataProvider is null at 100% zoom&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_IO - if an IO error occurs while reading from the file&lt;/li&gt; &lt;li&gt;ERROR_INVALID_IMAGE - if the image file contains invalid data &lt;/li&gt; &lt;li&gt;ERROR_UNSUPPORTED_DEPTH - if the image file describes an image with an unsupported depth&lt;/li&gt; &lt;li&gt;ERROR_UNSUPPORTED_FORMAT - if the image file contains an unrecognized format&lt;/li&gt; &lt;/ul&gt; @exception SWTError &lt;ul&gt; &lt;li&gt;ERROR_NO_HANDLES if a handle could not be obtained for image creation&lt;/li&gt; &lt;/ul&gt; @since 3.104 ------------ Refresh the Image based on the zoom level, if required.
(2436) {555460} [555618]: ------------ Compares the argument to the receiver, and returns true if they represent the &lt;em&gt;same&lt;/em&gt; object using a class specific comparison.
(2437) {555620} [555932]: @param object the object to compare with this object @return &lt;code&gt;true&lt;/code&gt; if the object is the same as this object and &lt;code&gt;false&lt;/code&gt; otherwise @see #hashCode ------------ Returns the color to which to map the transparent pixel, or null if the receiver has no transparent pixel.
(2442) {556349} [556628]: &lt;p&gt; @return the background color of the image, or null if there is no transparency in the image @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns the bounds of the receiver.
(2444) {556721} [556781]: @return a rectangle specifying the image's bounds in points.
(2445) {556783} [557041]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_INVALID_IMAGE - if the image is not a bitmap or an icon&lt;/li&gt; &lt;/ul&gt; ------------ Returns the bounds of the receiver.
(2447) {557144} [557204]: @return a rectangle specifying the image's bounds in pixels.
(2448) {557206} [557510]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_INVALID_IMAGE - if the image is not a bitmap or an icon&lt;/li&gt; &lt;/ul&gt; @since 3.105 ------------ Returns an &lt;code&gt;ImageData&lt;/code&gt; based on the receiver.
(2449) {557511} [557599]: Modifications made to this &lt;code&gt;ImageData&lt;/code&gt; will not affect the Image.
(2450) {557601} [557709]: @return an &lt;code&gt;ImageData&lt;/code&gt; containing the image's data and attributes at 100% zoom level.
(2451) {557711} [558018]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_INVALID_IMAGE - if the image is not a bitmap or an icon&lt;/li&gt; &lt;/ul&gt; @see ImageData ------------ Returns an &lt;code&gt;ImageData&lt;/code&gt; based on the receiver.
(2452) {558019} [558107]: Modifications made to this &lt;code&gt;ImageData&lt;/code&gt; will not affect the Image.
(2453) {558109} [558224]: @return an &lt;code&gt;ImageData&lt;/code&gt; containing the image's data and attributes at the current zoom level.
(2454) {558226} [558524]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_INVALID_IMAGE - if the image is not a bitmap or an icon&lt;/li&gt; &lt;/ul&gt; @see ImageData @since 3.105 ------------ Returns an integer hash code for the receiver.
(2455) {558525} [558673]: Any two objects that return &lt;code&gt;true&lt;/code&gt; when passed to &lt;code&gt;equals&lt;/code&gt; must return the same value for this method.
(2456) {558675} [558747]: @return the receiver's hash @see #equals ------------ Feature in WinCE.
(2463) {559192} [559273]: ------------ Invokes platform specific functionality to allocate a new GC handle.
(2468) {559753} [559829]: ------------ Invokes platform specific functionality to dispose a GC handle.
(2473) {560312} [560440]: ------------ Returns &lt;code&gt;true&lt;/code&gt; if the image has been disposed, and &lt;code&gt;false&lt;/code&gt; otherwise.
(2476) {560622} [560798]: @return &lt;code&gt;true&lt;/code&gt; when the image is disposed and &lt;code&gt;false&lt;/code&gt; otherwise ------------ Sets the color to which to map the transparent pixel.
(2483) {561649} [562152]: &lt;/p&gt; @param color the color to use when a transparent pixel is specified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the color is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the color has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns a string containing a concise, human-readable description of the receiver.
(2488) {562594} [562959]: &lt;/p&gt; @param device the device on which to allocate the color @param type the type of the image (&lt;code&gt;SWT.BITMAP&lt;/code&gt; or &lt;code&gt;SWT.ICON&lt;/code&gt;) @param handle the OS handle for the image @return a new image object containing the specified device, type and handle @noreference This method is not intended to be referenced by clients.
(2493) {563566} [563819]: &lt;p&gt; Note that the public fields &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, &lt;code&gt;disposalMethod&lt;/code&gt; and &lt;code&gt;delayTime&lt;/code&gt; are typically only used when the image is in a set of images used for animation.
(2496) {564252} [564321]: public int height; The color depth of the image, in bits per pixel.
(2519) {566309} [566512]: &lt;p&gt; If this value is set, the &lt;code&gt;alphaData&lt;/code&gt; field is ignored and when the image is rendered each pixel will be blended with the background an amount proportional to this value.
(2521) {566667} [567540]: * It is expressed as one of the following values: &lt;dl&gt; &lt;dt&gt;&lt;code&gt;IMAGE_BMP&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt;Windows BMP file format, no compression&lt;/dd&gt; &lt;dt&gt;&lt;code&gt;IMAGE_BMP_RLE&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt;Windows BMP file format, RLE compression if appropriate&lt;/dd&gt; &lt;dt&gt;&lt;code&gt;IMAGE_GIF&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt;GIF file format&lt;/dd&gt; &lt;dt&gt;&lt;code&gt;IMAGE_ICO&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt;Windows ICO file format&lt;/dd&gt; &lt;dt&gt;&lt;code&gt;IMAGE_JPEG&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt;JPEG file format&lt;/dd&gt; &lt;dt&gt;&lt;code&gt;IMAGE_PNG&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt;PNG file format&lt;/dd&gt; &lt;/dl&gt; public int type; The x coordinate of the top left corner of the image within the logical screen (this field corresponds to the GIF89a Image Left Position value).
(2522) {567542} [567701]: public int x; The y coordinate of the top left corner of the image within the logical screen (this field corresponds to the GIF89a Image Top Position value).
(2524) {567800} [568547]: * It is expressed as one of the following values: &lt;dl&gt; &lt;dt&gt;&lt;code&gt;DM_UNSPECIFIED&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt;disposal method not specified&lt;/dd&gt; &lt;dt&gt;&lt;code&gt;DM_FILL_NONE&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt;do nothing - leave the image in place&lt;/dd&gt; &lt;dt&gt;&lt;code&gt;DM_FILL_BACKGROUND&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt;fill with the background color&lt;/dd&gt; &lt;dt&gt;&lt;code&gt;DM_FILL_PREVIOUS&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt;restore the previous picture&lt;/dd&gt; &lt;/dl&gt; (this field corresponds to the GIF89a Disposal Method value) public int disposalMethod; The time to delay before displaying the next image in an animation (this field corresponds to the GIF89a Delay Time value).
(2529) {569931} [570485]: @param width the width of the image @param height the height of the image @param depth the depth of the image @param palette the palette of the image (must not be null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the width or height is zero or negative, or if the depth is not one of 1, 2, 4, 8, 16, 24 or 32&lt;/li&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the palette is null&lt;/li&gt; &lt;/ul&gt; ------------ Constructs a new, empty ImageData with the given width, height, depth, palette, scanlinePad and data.
(2530) {570487} [571234]: @param width the width of the image @param height the height of the image @param depth the depth of the image @param palette the palette of the image @param scanlinePad the padding of each line, in bytes @param data the data of the image @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the width or height is zero or negative, or if the depth is not one of 1, 2, 4, 8, 16, 24 or 32, or the data array is too small to contain the image data&lt;/li&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the palette or data is null&lt;/li&gt; &lt;li&gt;ERROR_CANNOT_BE_ZERO - if the scanlinePad is zero&lt;/li&gt; &lt;/ul&gt; ------------ Constructs an &lt;code&gt;ImageData&lt;/code&gt; loaded from the specified input stream.
(2535) {571569} [571642]: To load multiple images, use &lt;code&gt;ImageLoader.load()&lt;/code&gt;.
(2536) {571643} [572750]: &lt;/p&gt;&lt;p&gt; This constructor may be used to load a resource as follows: &lt;/p&gt; &lt;pre&gt; static ImageData loadImageData (Class clazz, String string) { InputStream stream = clazz.getResourceAsStream (string); if (stream == null) return null; ImageData imageData = null; try { imageData = new ImageData (stream); } catch (SWTException ex) { } finally { try { stream.close (); } catch (IOException ex) {} } return imageData; } &lt;/pre&gt; @param stream the input stream to load the image from (must not be null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the stream is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_IO - if an IO error occurs while reading from the stream&lt;/li&gt; &lt;li&gt;ERROR_INVALID_IMAGE - if the image stream contains invalid data&lt;/li&gt; &lt;li&gt;ERROR_UNSUPPORTED_FORMAT - if the image stream contains an unrecognized format&lt;/li&gt; &lt;/ul&gt; @see ImageLoader#load(InputStream) ------------ Constructs an &lt;code&gt;ImageData&lt;/code&gt; loaded from a file with the specified name.
(2540) {573008} [573081]: To load multiple images, use &lt;code&gt;ImageLoader.load()&lt;/code&gt;.
(2541) {573082} [573696]: &lt;/p&gt; @param filename the name of the file to load the image from (must not be null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the file name is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_IO - if an IO error occurs while reading from the file&lt;/li&gt; &lt;li&gt;ERROR_INVALID_IMAGE - if the image file contains invalid data&lt;/li&gt; &lt;li&gt;ERROR_UNSUPPORTED_FORMAT - if the image file contains an unrecognized format&lt;/li&gt; &lt;/ul&gt; ------------ Prevents uninitialized instances from being created outside the package.
(2544) {573856} [573919]: &lt;/p&gt; ------------ Initializes all fields in the receiver.
(2548) {574193} [574291]: &lt;/p&gt; ------------ Invokes internal SWT functionality to create a new instance of this class.
(2553) {574696} [574777]: &lt;/p&gt; @noreference This method is not intended to be referenced by clients.
(2554) {574778} [574957]: ------------ Returns a new instance of the same class as the receiver, whose slots have been filled in with &lt;em&gt;copies&lt;/em&gt; of the values in the slots of the receiver.
(2555) {574958} [575039]: That is, the returned object is a &lt;em&gt;deep copy&lt;/em&gt; of the receiver.
(2556) {575041} [575072]: @return a copy of the receiver.
(2557) {575073} [575215]: ------------ Returns the alpha value at offset &lt;code&gt;x&lt;/code&gt; in scanline &lt;code&gt;y&lt;/code&gt; in the receiver's alpha data.
(2559) {575278} [575828]: @param x the x coordinate of the pixel to get the alpha value of @param y the y coordinate of the pixel to get the alpha value of @return the alpha value at the given coordinates @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if either argument is out of range&lt;/li&gt; &lt;/ul&gt; ------------ Returns &lt;code&gt;getWidth&lt;/code&gt; alpha values starting at offset &lt;code&gt;x&lt;/code&gt; in scanline &lt;code&gt;y&lt;/code&gt; in the receiver's alpha data starting at &lt;code&gt;startIndex&lt;/code&gt;.
(2560) {575829} [575963]: The alpha values are unsigned, between &lt;code&gt;(byte)0&lt;/code&gt; (transparent) and &lt;code&gt;(byte)255&lt;/code&gt; (opaque).
(2561) {575965} [576738]: @param x the x position of the pixel to begin getting alpha values @param y the y position of the pixel to begin getting alpha values @param getWidth the width of the data to get @param alphas the buffer in which to put the alpha values @param startIndex the offset into the image to begin getting alpha values @exception IndexOutOfBoundsException if getWidth is too large @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if pixels is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if x or y is out of bounds&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if getWidth is negative&lt;/li&gt; &lt;/ul&gt; ------------ Returns the pixel value at offset &lt;code&gt;x&lt;/code&gt; in scanline &lt;code&gt;y&lt;/code&gt; in the receiver's data.
(2562) {576740} [577381]: @param x the x position of the pixel to get @param y the y position of the pixel to get @return the pixel at the given coordinates @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if either argument is out of bounds&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_UNSUPPORTED_DEPTH if the depth is not one of 1, 2, 4, 8, 16, 24 or 32&lt;/li&gt; &lt;/ul&gt; ------------ Returns &lt;code&gt;getWidth&lt;/code&gt; pixel values starting at offset &lt;code&gt;x&lt;/code&gt; in scanline &lt;code&gt;y&lt;/code&gt; in the receiver's data starting at &lt;code&gt;startIndex&lt;/code&gt;.
(2563) {577383} [578147]: @param x the x position of the first pixel to get @param y the y position of the first pixel to get @param getWidth the width of the data to get @param pixels the buffer in which to put the pixels @param startIndex the offset into the byte array to begin storing pixels @exception IndexOutOfBoundsException if getWidth is too large @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if pixels is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if x or y is out of bounds&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if getWidth is negative&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_UNSUPPORTED_DEPTH - if the depth is not one of 1, 2, 4 or 8 (For higher depths, use the int[] version of this method.
(2564) {578147} [578396]: )&lt;/li&gt; &lt;/ul&gt; ------------ Returns &lt;code&gt;getWidth&lt;/code&gt; pixel values starting at offset &lt;code&gt;x&lt;/code&gt; in scanline &lt;code&gt;y&lt;/code&gt; in the receiver's data starting at &lt;code&gt;startIndex&lt;/code&gt;.
(2565) {578398} [579304]: @param x the x position of the first pixel to get @param y the y position of the first pixel to get @param getWidth the width of the data to get @param pixels the buffer in which to put the pixels @param startIndex the offset into the buffer to begin storing pixels @exception IndexOutOfBoundsException if getWidth is too large @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if pixels is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if x or y is out of bounds&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if getWidth is negative&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_UNSUPPORTED_DEPTH - if the depth is not one of 1, 2, 4, 8, 16, 24 or 32&lt;/li&gt; &lt;/ul&gt; ------------ Returns an array of &lt;code&gt;RGB&lt;/code&gt;s which comprise the indexed color table of the receiver, or null if the receiver has a direct color model.
(2566) {579306} [579521]: @return the RGB values for the image or null if direct color @see PaletteData#getRGBs() ------------ Returns an &lt;code&gt;ImageData&lt;/code&gt; which specifies the transparency mask information for the receiver.
(2568) {579602} [579898]: @return the transparency mask ------------ Returns the image transparency type, which will be one of &lt;code&gt;SWT.TRANSPARENCY_NONE&lt;/code&gt;, &lt;code&gt;SWT.TRANSPARENCY_MASK&lt;/code&gt;, &lt;code&gt;SWT.TRANSPARENCY_PIXEL&lt;/code&gt; or &lt;code&gt;SWT.TRANSPARENCY_ALPHA&lt;/code&gt;.
(2569) {579900} [579993]: @return the receiver's transparency type ------------ Returns the byte order of the receiver.
(2572) {580233} [580497]: @param width the width of the new ImageData @param height the height of the new ImageData @return a scaled copy of the image ------------ Sets the alpha value at offset &lt;code&gt;x&lt;/code&gt; in scanline &lt;code&gt;y&lt;/code&gt; in the receiver's alpha data.
(2573) {580498} [580563]: The alpha value must be between 0 (transparent) and 255 (opaque).
(2574) {580565} [581103]: @param x the x coordinate of the alpha value to set @param y the y coordinate of the alpha value to set @param alpha the value to set the alpha to @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if x or y is out of bounds&lt;/li&gt; &lt;/ul&gt; ------------ Sets the alpha values starting at offset &lt;code&gt;x&lt;/code&gt; in scanline &lt;code&gt;y&lt;/code&gt; in the receiver's alpha data to the values from the array &lt;code&gt;alphas&lt;/code&gt; starting at &lt;code&gt;startIndex&lt;/code&gt;.
(2575) {581104} [581983]: The alpha values must be between &lt;code&gt;(byte)0&lt;/code&gt; (transparent) and &lt;code&gt;(byte)255&lt;/code&gt; (opaque) @param x the x coordinate of the pixel to being setting the alpha values @param y the y coordinate of the pixel to being setting the alpha values @param putWidth the width of the alpha values to set @param alphas the alpha values to set @param startIndex the index at which to begin setting @exception IndexOutOfBoundsException if putWidth is too large @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if pixels is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if x or y is out of bounds&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if putWidth is negative&lt;/li&gt; &lt;/ul&gt; ------------ Sets the pixel value at offset &lt;code&gt;x&lt;/code&gt; in scanline &lt;code&gt;y&lt;/code&gt; in the receiver's data.
(2576) {581985} [582654]: @param x the x coordinate of the pixel to set @param y the y coordinate of the pixel to set @param pixelValue the value to set the pixel to @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if x or y is out of bounds&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_UNSUPPORTED_DEPTH if the depth is not one of 1, 2, 4, 8, 16, 24 or 32&lt;/li&gt; &lt;/ul&gt; ------------ Sets the pixel values starting at offset &lt;code&gt;x&lt;/code&gt; in scanline &lt;code&gt;y&lt;/code&gt; in the receiver's data to the values from the array &lt;code&gt;pixels&lt;/code&gt; starting at &lt;code&gt;startIndex&lt;/code&gt;.
(2577) {582656} [583367]: @param x the x position of the pixel to set @param y the y position of the pixel to set @param putWidth the width of the pixels to set @param pixels the pixels to set @param startIndex the index at which to begin setting @exception IndexOutOfBoundsException if putWidth is too large @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if pixels is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if x or y is out of bounds&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if putWidth is negative&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_UNSUPPORTED_DEPTH if the depth is not one of 1, 2, 4, 8 (For higher depths, use the int[] version of this method.
(2578) {583367} [583644]: )&lt;/li&gt; &lt;/ul&gt; ------------ Sets the pixel values starting at offset &lt;code&gt;x&lt;/code&gt; in scanline &lt;code&gt;y&lt;/code&gt; in the receiver's data to the values from the array &lt;code&gt;pixels&lt;/code&gt; starting at &lt;code&gt;startIndex&lt;/code&gt;.
(2579) {583646} [584401]: @param x the x position of the pixel to set @param y the y position of the pixel to set @param putWidth the width of the pixels to set @param pixels the pixels to set @param startIndex the index at which to begin setting @exception IndexOutOfBoundsException if putWidth is too large @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if pixels is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if x or y is out of bounds&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if putWidth is negative&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_UNSUPPORTED_DEPTH if the depth is not one of 1, 2, 4, 8, 16, 24 or 32&lt;/li&gt; &lt;/ul&gt; ------------ Returns a palette with 2 colors: black &amp; white.
(2580) {584402} [584478]: ------------ Gets the offset of the most significant bit for the given mask.
(2644) {648772} [648855]: ====== ImageDataProvider.java ====== Copyright (c) 2015 IBM Corporation and others.
(2649) {649491} [649592]: @since 3.104 ====== ImageFileNameProvider.java ====== Copyright (c) 2015 IBM Corporation and others.
(2654) {650228} [650323]: @since 3.104 ====== ImageList.java ====== Copyright (c) 2000, 2014 IBM Corporation and others.
(2659) {651110} [651994]: &lt;p&gt; Currently supported image formats are: &lt;/p&gt;&lt;ul&gt; &lt;li&gt;BMP (Windows or OS/2 Bitmap)&lt;/li&gt; &lt;li&gt;ICO (Windows Icon)&lt;/li&gt; &lt;li&gt;JPEG&lt;/li&gt; &lt;li&gt;GIF&lt;/li&gt; &lt;li&gt;PNG&lt;/li&gt; &lt;li&gt;TIFF&lt;/li&gt; &lt;/ul&gt; &lt;code&gt;ImageLoaders&lt;/code&gt; can be used to: &lt;ul&gt; &lt;li&gt;load/save single images in all formats&lt;/li&gt; &lt;li&gt;load/save multiple images (GIF/ICO/TIFF)&lt;/li&gt; &lt;li&gt;load/save animated GIF images&lt;/li&gt; &lt;li&gt;load interlaced GIF/PNG images&lt;/li&gt; &lt;li&gt;load progressive JPEG images&lt;/li&gt; &lt;/ul&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: ImageAnalyzer&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ the array of ImageData objects in this ImageLoader.
(2669) {653712} [653818]: ------------ Loads an array of &lt;code&gt;ImageData&lt;/code&gt; objects from the specified input stream.
(2672) {653971} [654681]: @param stream the input stream to load the images from @return an array of &lt;code&gt;ImageData&lt;/code&gt; objects loaded from the specified input stream @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the stream is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_IO - if an IO error occurs while reading from the stream&lt;/li&gt; &lt;li&gt;ERROR_INVALID_IMAGE - if the image stream contains invalid data&lt;/li&gt; &lt;li&gt;ERROR_UNSUPPORTED_FORMAT - if the image stream contains an unrecognized format&lt;/li&gt; &lt;/ul&gt; ------------ Loads an array of &lt;code&gt;ImageData&lt;/code&gt; objects from the file with the specified name.
(2675) {654834} [655505]: @param filename the name of the file to load the images from @return an array of &lt;code&gt;ImageData&lt;/code&gt; objects loaded from the specified file @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the file name is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_IO - if an IO error occurs while reading from the file&lt;/li&gt; &lt;li&gt;ERROR_INVALID_IMAGE - if the image file contains invalid data&lt;/li&gt; &lt;li&gt;ERROR_UNSUPPORTED_FORMAT - if the image file contains an unrecognized format&lt;/li&gt; &lt;/ul&gt; ------------ Saves the image data in this ImageLoader to the specified stream.
(2676) {655506} [656859]: The format parameter can have one of the following values: &lt;dl&gt; &lt;dt&gt;&lt;code&gt;IMAGE_BMP&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt;Windows BMP file format, no compression&lt;/dd&gt; &lt;dt&gt;&lt;code&gt;IMAGE_BMP_RLE&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt;Windows BMP file format, RLE compression if appropriate&lt;/dd&gt; &lt;dt&gt;&lt;code&gt;IMAGE_GIF&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt;GIF file format&lt;/dd&gt; &lt;dt&gt;&lt;code&gt;IMAGE_ICO&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt;Windows ICO file format&lt;/dd&gt; &lt;dt&gt;&lt;code&gt;IMAGE_JPEG&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt;JPEG file format&lt;/dd&gt; &lt;dt&gt;&lt;code&gt;IMAGE_PNG&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt;PNG file format&lt;/dd&gt; &lt;/dl&gt; @param stream the output stream to write the images to @param format the format to write the images in @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the stream is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_IO - if an IO error occurs while writing to the stream&lt;/li&gt; &lt;li&gt;ERROR_INVALID_IMAGE - if the image data contains invalid data&lt;/li&gt; &lt;li&gt;ERROR_UNSUPPORTED_FORMAT - if the image data cannot be saved to the requested format&lt;/li&gt; &lt;/ul&gt; ------------ Saves the image data in this ImageLoader to a file with the specified name.
(2677) {656860} [658271]: The format parameter can have one of the following values: &lt;dl&gt; &lt;dt&gt;&lt;code&gt;IMAGE_BMP&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt;Windows BMP file format, no compression&lt;/dd&gt; &lt;dt&gt;&lt;code&gt;IMAGE_BMP_RLE&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt;Windows BMP file format, RLE compression if appropriate&lt;/dd&gt; &lt;dt&gt;&lt;code&gt;IMAGE_GIF&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt;GIF file format&lt;/dd&gt; &lt;dt&gt;&lt;code&gt;IMAGE_ICO&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt;Windows ICO file format&lt;/dd&gt; &lt;dt&gt;&lt;code&gt;IMAGE_JPEG&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt;JPEG file format&lt;/dd&gt; &lt;dt&gt;&lt;code&gt;IMAGE_PNG&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt;PNG file format&lt;/dd&gt; &lt;/dl&gt; @param filename the name of the file to write the images to @param format the format to write the images in @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the file name is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_IO - if an IO error occurs while writing to the file&lt;/li&gt; &lt;li&gt;ERROR_INVALID_IMAGE - if the image data contains invalid data&lt;/li&gt; &lt;li&gt;ERROR_UNSUPPORTED_FORMAT - if the image data cannot be saved to the requested format&lt;/li&gt; &lt;/ul&gt; ------------ Adds the listener to the collection of listeners who will be notified when image data is either partially or completely loaded.
(2680) {658556} [658930]: @param listener the listener which should be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @see ImageLoaderListener @see ImageLoaderEvent ------------ Removes the listener from the collection of listeners who will be notified when image data is either partially or completely loaded.
(2681) {658932} [659314]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @see #addImageLoaderListener(ImageLoaderListener) ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver has image loader listeners, and &lt;code&gt;false&lt;/code&gt; otherwise.
(2682) {659316} [659652]: @return &lt;code&gt;true&lt;/code&gt; if there are &lt;code&gt;ImageLoaderListener&lt;/code&gt;s, and &lt;code&gt;false&lt;/code&gt; otherwise @see #addImageLoaderListener(ImageLoaderListener) @see #removeImageLoaderListener(ImageLoaderListener) ------------ Notifies all image loader listeners that an image loader event has occurred.
(2684) {659704} [659913]: @param event the &lt;code&gt;ImageLoaderEvent&lt;/code&gt; to send to each &lt;code&gt;ImageLoaderListener&lt;/code&gt; ====== ImageLoaderEvent.java ====== Copyright (c) 2000, 2017 IBM Corporation and others.
(2687) {660312} [660455]: &lt;p&gt; &lt;b&gt;Notes:&lt;/b&gt; &lt;/p&gt;&lt;ul&gt; &lt;li&gt;The number of events which will be sent when loading images is not constant.
(2690) {662048} [662185]: @return a string representation of the event ====== ImageLoaderListener.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(2694) {662866} [662952]: When image data is either partially or completely loaded, this method will be invoked.
(2695) {662953} [663079]: &lt;/p&gt; @see ImageLoader @see ImageLoaderEvent ------------ Sent when image data is either partially or completely loaded.
(2697) {663189} [663352]: &lt;/p&gt; @param e an event containing information about the image loading operation ====== IME.java ====== Copyright (c) 2007, 2014 IBM Corporation and others.
(2708) {665027} [665667]: &lt;/p&gt; @param parent a canvas control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see Widget#checkSubclass @see Widget#getStyle ------------ Returns the offset of the caret from the start of the document.
(2710) {665714} [666030]: @return the caret offset @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the commit count of the composition.
(2713) {666207} [666566]: @return the commit count @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see IME#getText ------------ Returns the offset of the composition from the start of the document.
(2715) {666718} [667091]: @return the offset of the composition @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the ranges for the style that should be applied during the in-line edit session.
(2716) {667092} [667148]: &lt;p&gt; The ranges array contains start and end pairs.
(2719) {667367} [667713]: &lt;/p&gt; @return the ranges for the styles @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see IME#getStyles ------------ Returns the styles for the ranges.
(2720) {667714} [667770]: &lt;p&gt; The ranges array contains start and end pairs.
(2723) {667940} [668282]: &lt;/p&gt; @return the ranges for the styles @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see IME#getRanges ------------ Returns the composition text.
(2726) {668497} [668892]: &lt;/p&gt; @return the widget text @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns &lt;code&gt;true&lt;/code&gt; if the caret should be wide, and &lt;code&gt;false&lt;/code&gt; otherwise.
(2728) {669032} [669374]: @return the wide caret state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the offset of the composition from the start of the document.
(2731) {669745} [670100]: @param offset the offset of the composition @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ====== Item.java ====== Copyright (c) 2000, 2015 IBM Corporation and others.
(2735) {670575} [670973]: &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;(none)&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;(none)&lt;/dd&gt; &lt;/dl&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ Constructs a new instance of this class given its parent and a style value describing its behavior and appearance.
(2740) {671525} [672175]: &lt;/p&gt; @param parent a widget which will be the parent of the new instance (cannot be null) @param style the style of item to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;/ul&gt; @see SWT @see Widget#getStyle ------------ Constructs a new instance of this class given its parent and a style value describing its behavior and appearance, and the index at which to place it in the items maintained by its parent.
(2744) {672659} [673396]: &lt;/p&gt; @param parent a widget which will be the parent of the new instance (cannot be null) @param style the style of item to construct @param index the zero-relative index at which to store the receiver in its parent @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_RANGE - if the index is not between 0 and the number of elements in the parent (inclusive)&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;/ul&gt; @see SWT @see Widget#getStyle ------------ Returns the receiver's image if it has one, or null if it does not.
(2745) {673398} [673758]: @return the receiver's image @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's text, which will be an empty string if it has never been set.
(2746) {673760} [674141]: @return the receiver's text @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's image to the argument, which may be null indicating that no image should be displayed.
(2747) {674143} [674615]: @param image the image to display on the receiver (may be null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the image has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's text.
(2750) {674740} [675215]: &lt;/p&gt; @param string the new text @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the text is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ====== JPEGAppn.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(2791) {682454} [682655]: &lt;/p&gt; @see KeyListener @see KeyEvent @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ Sent when a key is pressed on the system keyboard.
(2793) {682696} [682821]: @param e an event containing information about the key press ------------ Sent when a key is released on the system keyboard.
(2795) {682862} [683006]: @param e an event containing information about the key release ====== KeyEvent.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(2804) {683979} [684190]: &lt;/p&gt; @see KeyListener @see TraverseListener @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ the character represented by the key that was typed.
(2808) {684511} [684651]: public char character; the key code of the key that was typed, as defined by the key code constants in class &lt;code&gt;SWT&lt;/code&gt;.
(2812) {685042} [685262]: The possible values for this field are &lt;code&gt;SWT.LEFT&lt;/code&gt;, &lt;code&gt;SWT.RIGHT&lt;/code&gt;, &lt;code&gt;SWT.KEYPAD&lt;/code&gt;, or &lt;code&gt;SWT.NONE&lt;/code&gt; representing the main keyboard area.
(2815) {685565} [685697]: &lt;/p&gt;&lt;p&gt; The location field can only be used to determine the location of the key code or character in the current event.
(2819) {686182} [686261]: Setting this field to &lt;code&gt;false&lt;/code&gt; will cancel the operation.
(2822) {686591} [686720]: @return a string representation of the event ====== KeyListener.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(2826) {687469} [687543]: When a key is pressed or released, the appropriate method will be invoked.
(2827) {687544} [687649]: &lt;/p&gt; @see KeyAdapter @see KeyEvent ------------ Sent when a key is pressed on the system keyboard.
(2828) {687651} [687776]: @param e an event containing information about the key press ------------ Sent when a key is released on the system keyboard.
(2830) {687975} [688121]: @param c the consumer of the event @return KeyListener @since 3.106 ====== Label.java ====== Copyright (c) 2000, 2015 IBM Corporation and others.
(2846) {690394} [691232]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT#SEPARATOR @see SWT#HORIZONTAL @see SWT#VERTICAL @see SWT#SHADOW_IN @see SWT#SHADOW_OUT @see SWT#SHADOW_NONE @see SWT#CENTER @see SWT#LEFT @see SWT#RIGHT @see SWT#WRAP @see Widget#checkSubclass @see Widget#getStyle ------------ Returns a value which describes the position of the text or image in the receiver.
(2848) {691481} [691817]: @return the alignment @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's image if it has one, or null if it does not.
(2849) {691819} [692244]: @return the receiver's image @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's text, which will be an empty string if it has never been set or if the receiver is a &lt;code&gt;SEPARATOR&lt;/code&gt; label.
(2850) {692246} [692584]: @return the receiver's text @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Controls how text and images will be displayed in the receiver.
(2852) {692714} [692834]: If the receiver is a &lt;code&gt;SEPARATOR&lt;/code&gt; label, the argument is ignored and the alignment is not changed.
(2853) {692836} [693224]: @param alignment the new alignment @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's image to the argument, which may be null indicating that no image should be displayed.
(2854) {693226} [693698]: @param image the image to display on the receiver (may be null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the image has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's text.
(2863) {694423} [694897]: &lt;/p&gt; @param string the new text @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the text is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ====== Layout.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(2867) {695340} [695577]: @see Composite#setLayout(Layout) @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ Computes and returns the size of the specified composite's client area according to this layout.
(2869) {695801} [695898]: &lt;/p&gt; &lt;p&gt; When a width or height hint is supplied, it is used to constrain the result.
(2871) {696091} [696781]: &lt;/p&gt; @param composite a composite widget using this layout @param wHint width (&lt;code&gt;SWT.DEFAULT&lt;/code&gt; for preferred size) @param hHint height (&lt;code&gt;SWT.DEFAULT&lt;/code&gt; for preferred size) @param flushCache &lt;code&gt;true&lt;/code&gt; means flush cached layout values @return a point containing the computed size (width, height) @see #layout @see Control#getBorderWidth @see Control#getBounds @see Control#getSize @see Control#pack(boolean) @see "computeTrim, getClientArea for controls that implement them" ------------ Instruct the layout to flush any cached values associated with the control specified in the argument &lt;code&gt;control&lt;/code&gt;.
(2876) {697277} [697414]: &lt;/p&gt; &lt;p&gt; When the flush cache hint is true, the layout is instructed to flush any cached values associated with the children.
(2878) {697563} [697667]: &lt;/p&gt; &lt;p&gt; When layout is triggered explicitly by the programmer the flush cache hint is true.
(2880) {697773} [698010]: &lt;/p&gt; @param composite a composite widget using this layout @param flushCache &lt;code&gt;true&lt;/code&gt; means flush cached layout values ====== LEDataInputStream.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(2892) {699594} [699828]: &lt;p&gt; Application code does &lt;em&gt;not&lt;/em&gt; need to explicitly release the resources managed by each instance when those instances are no longer required, and thus no &lt;code&gt;dispose()&lt;/code&gt; method is provided.
(2903) {701158} [701550]: @param width the line width @param cap the line cap style @param join the line join style @param style the line style @param dash the line dash style @param dashOffset the line dash style offset @param miterLimit the line miter limit ------------ Compares the argument to the receiver, and returns true if they represent the &lt;em&gt;same&lt;/em&gt; object using a class specific comparison.
(2904) {701552} [701806]: @param object the object to compare with this object @return &lt;code&gt;true&lt;/code&gt; if the object is the same as this object and &lt;code&gt;false&lt;/code&gt; otherwise @see #hashCode() ------------ Returns an integer hash code for the receiver.
(2905) {701807} [701955]: Any two objects that return &lt;code&gt;true&lt;/code&gt; when passed to &lt;code&gt;equals&lt;/code&gt; must return the same value for this method.
(2906) {701957} [702084]: @return the receiver's hash @see #equals(Object) ====== Link.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(2915) {703833} [704627]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see Widget#checkSubclass @see Widget#getStyle ------------ Adds the listener to the collection of listeners who will be notified when the control is selected by the user, by sending it one of the messages defined in the &lt;code&gt;SelectionListener&lt;/code&gt; interface.
(2916) {704628} [704729]: &lt;p&gt; &lt;code&gt;widgetSelected&lt;/code&gt; is called when the control is selected by the user.
(2917) {704730} [704791]: &lt;code&gt;widgetDefaultSelected&lt;/code&gt; is not called.
(2918) {704792} [705339]: &lt;/p&gt; @param listener the listener which should be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SelectionListener @see #removeSelectionListener @see SelectionEvent ------------ Returns the link foreground color.
(2919) {705341} [705386]: @return the receiver's link foreground color.
(2920) {705388} [705731]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.105 ------------ Returns the receiver's text, which will be an empty string if it has never been set.
(2921) {705733} [706124]: @return the receiver's text @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Removes the listener from the collection of listeners who will be notified when the control is selected by the user.
(2922) {706126} [706753]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SelectionListener @see #addSelectionListener ------------ Sets the link foreground color to the color specified by the argument, or to the default system color for the link if the argument is null.
(2924) {706834} [707306]: &lt;/p&gt; @param color the new color (or null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the argument has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.105 ------------ Sets the receiver's text.
(2926) {707375} [707443]: A hyperlink is delimited by an anchor tag, &lt;a&gt; and &lt;/a&gt;.
(2938) {708522} [708994]: &lt;/p&gt; @param string the new text @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the text is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ====== List.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(2949) {710840} [711503]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT#SINGLE @see SWT#MULTI @see Widget#checkSubclass @see Widget#getStyle ------------ Adds the argument to the end of the receiver's list.
(2952) {711628} [712134]: &lt;/p&gt; @param string the new item @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the string is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #add(String,int) ------------ Adds the argument to the receiver's list at the given zero-relative index.
(2953) {712135} [712313]: &lt;p&gt; Note: To add an item at the end of the list, use the result of calling &lt;code&gt;getItemCount()&lt;/code&gt; as the index or use &lt;code&gt;add(String)&lt;/code&gt;.
(2956) {712453} [713262]: &lt;/p&gt; @param string the new item @param index the index for the item @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the string is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_RANGE - if the index is not between 0 and the number of elements in the list (inclusive)&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #add(String) ------------ Adds the listener to the collection of listeners who will be notified when the user changes the receiver's selection, by sending it one of the messages defined in the &lt;code&gt;SelectionListener&lt;/code&gt; interface.
(2957) {713263} [713350]: &lt;p&gt; &lt;code&gt;widgetSelected&lt;/code&gt; is called when the selection changes.
(2958) {713351} [713449]: &lt;code&gt;widgetDefaultSelected&lt;/code&gt; is typically called when an item is double-clicked.
(2959) {713450} [714081]: &lt;/p&gt; @param listener the listener which should be notified when the user changes the receiver's selection @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SelectionListener @see #removeSelectionListener @see SelectionEvent ------------ Deselects the items at the given zero-relative indices in the receiver.
(2960) {714082} [714173]: If the item at the given zero-relative index in the receiver is selected, it is deselected.
(2963) {714307} [714816]: @param indices the array of indices for the items to deselect @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the set of indices is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Deselects the item at the given zero-relative index in the receiver.
(2966) {714933} [715298]: @param index the index of the item to deselect @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Deselects the items at the given zero-relative indices in the receiver.
(2967) {715299} [715390]: If the item at the given zero-relative index in the receiver is selected, it is deselected.
(2971) {715542} [715938]: @param start the start index of the items to deselect @param end the end index of the items to deselect @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Deselects all selected items in the receiver.
(2972) {715940} [716304]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the zero-relative index of the item which currently has the focus in the receiver, or -1 if no item has focus.
(2973) {716306} [716659]: @return the index of the selected item @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the item at the given, zero-relative index in the receiver.
(2975) {716711} [717284]: @param index the index of the item to return @return the item at the given index @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_RANGE - if the index is not between 0 and the number of elements in the list minus 1 (inclusive)&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the number of items contained in the receiver.
(2976) {717286} [717673]: @return the number of items @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the height of the area which would be used to display &lt;em&gt;one&lt;/em&gt; of the items in the list.
(2977) {717675} [718058]: @return the height of one item @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns a (possibly empty) array of &lt;code&gt;String&lt;/code&gt;s which are the items in the receiver.
(2979) {718213} [718610]: &lt;/p&gt; @return the items in the receiver's list @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns an array of &lt;code&gt;String&lt;/code&gt;s that are currently selected in the receiver.
(2983) {718854} [719219]: &lt;/p&gt; @return an array representing the selection @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the number of selected items contained in the receiver.
(2984) {719221} [719623]: @return the number of selected items @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the zero-relative index of the item which is currently selected in the receiver, or -1 if no item is selected.
(2985) {719625} [720009]: @return the index of the selected item or -1 @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the zero-relative indices of the items which are currently selected in the receiver.
(2989) {720247} [720646]: &lt;/p&gt; @return the array of indices of the selected items @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the zero-relative index of the item which is currently at the top of the receiver.
(2991) {720729} [721036]: @return the index of the top item @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Gets the index of an item.
(2992) {721037} [721138]: &lt;p&gt; The list is searched starting at 0 until an item is found that is equal to the search item.
(2995) {721202} [721794]: @param string the search item @return the index of the item @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the string is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Searches the receiver's list starting at the given, zero-relative index until an item is found that is equal to the argument, and returns the index of that item.
(2997) {721867} [722472]: @param string the search item @param start the zero-relative index at which to start the search @return the index of the item @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the string is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns &lt;code&gt;true&lt;/code&gt; if the item is selected, and &lt;code&gt;false&lt;/code&gt; otherwise.
(2999) {722509} [722915]: @param index the index of the item @return the selection state of the item at the index @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Removes the items from the receiver at the given zero-relative indices.
(3000) {722917} [723544]: @param indices the array of indices of the items @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_RANGE - if the index is not between 0 and the number of elements in the list minus 1 (inclusive)&lt;/li&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the indices array is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Removes the item from the receiver at the given zero-relative index.
(3001) {723546} [724132]: @param index the index for the item @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_RANGE - if the index is not between 0 and the number of elements in the list minus 1 (inclusive)&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Removes the items from the receiver which are between the given zero-relative start and end indices (inclusive).
(3002) {724134} [724801]: @param start the start of the range @param end the end of the range @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_RANGE - if either the start or end are not between 0 and the number of elements in the list minus 1 (inclusive)&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Searches the receiver's list starting at the first item until an item is found that is equal to the argument, and removes that item from the list.
(3003) {724803} [725335]: @param string the item to remove @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the string is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the string is not found in the list&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Removes all of the items from the receiver.
(3004) {725336} [725714]: &lt;p&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Removes the listener from the collection of listeners who will be notified when the user changes the receiver's selection.
(3005) {725716} [726273]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SelectionListener @see #addSelectionListener ------------ Selects the items at the given zero-relative indices in the receiver.
(3007) {726346} [726417]: &lt;p&gt; If the item at a given index is not selected, it is selected.
(3011) {726655} [727200]: @param indices the array of indices for the items to select @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the array of indices is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see List#setSelection(int[]) ------------ Selects the item at the given zero-relative index in the receiver's list.
(3014) {727314} [727698]: @param index the index of the item to select @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Selects the items in the range specified by the given zero-relative indices in the receiver.
(3017) {727806} [727878]: &lt;p&gt; If an item in the given range is not selected, it is selected.
(3021) {728170} [728559]: @param start the start of the range @param end the end of the range @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see List#setSelection(int,int) ------------ Selects all of the items in the receiver.
(3022) {728560} [728615]: &lt;p&gt; If the receiver is single-select, do nothing.
(3023) {728617} [728968]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the text of the item in the receiver's list at the given zero-relative index to the string argument.
(3024) {728970} [729606]: @param index the index for the item @param string the new text for the item @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_RANGE - if the index is not between 0 and the number of elements in the list minus 1 (inclusive)&lt;/li&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the string is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's items to be the given array of items.
(3025) {729608} [730169]: @param items the array of items @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the items array is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if an item in the items array is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Selects the items at the given zero-relative indices in the receiver.
(3029) {730490} [731031]: @param indices the indices of the items to select @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the array of indices is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see List#deselectAll() @see List#select(int[]) ------------ Sets the receiver's selection to be the given array of items.
(3031) {731177} [731234]: &lt;p&gt; Items that are not in the receiver are ignored.
(3033) {731331} [731887]: @param items the array of items @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the array of items is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see List#deselectAll() @see List#select(int[]) @see List#setSelection(int[]) ------------ Selects the item at the given zero-relative index in the receiver.
(3037) {732148} [732578]: @param index the index of the item to select @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see List#deselectAll() @see List#select(int) ------------ Selects the items in the range specified by the given zero-relative indices in the receiver.
(3042) {732987} [733472]: @param start the start index of the items to select @param end the end index of the items to select @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see List#deselectAll() @see List#select(int,int) ------------ Sets the zero-relative index of the item which is currently at the top of the receiver.
(3044) {733556} [733862]: @param index the index of the top item @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Shows the selection.
(3047) {734013} [734327]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ====== Listener.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(3051) {735101} [735205]: When the specified event occurs, &lt;code&gt;handleEvent(...)&lt;/code&gt; will be sent to the instance.
(3055) {735805} [735974]: &lt;/p&gt; @see Widget#addListener @see java.util.EventListener @see org.eclipse.swt.events ------------ Sent when an event that the receiver has registered for occurs.
(3056) {735976} [736095]: @param event the event which occurred ====== LZWCodec.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(3092) {740655} [741363]: &lt;/p&gt; @param parent a control which will be the parent of the new instance (cannot be null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT#POP_UP @see Widget#checkSubclass @see Widget#getStyle ------------ Constructs a new instance of this class given its parent (which must be a &lt;code&gt;Decorations&lt;/code&gt;) and a style value describing its behavior and appearance.
(3097) {742043} [742956]: &lt;/p&gt; @param parent a decorations control which will be the parent of the new instance (cannot be null) @param style the style of menu to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT#BAR @see SWT#DROP_DOWN @see SWT#POP_UP @see SWT#NO_RADIO_GROUP @see SWT#LEFT_TO_RIGHT @see SWT#RIGHT_TO_LEFT @see Widget#checkSubclass @see Widget#getStyle ------------ Constructs a new instance of this class given its parent (which must be a &lt;code&gt;Menu&lt;/code&gt;) and sets the style for the instance so that the instance will be a drop-down menu on the given parent's parent.
(3099) {743095} [743863]: &lt;/p&gt; @param parentMenu a menu which will be the parent of the new instance (cannot be null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT#DROP_DOWN @see Widget#checkSubclass @see Widget#getStyle ------------ Constructs a new instance of this class given its parent (which must be a &lt;code&gt;MenuItem&lt;/code&gt;) and sets the style for the instance so that the instance will be a drop-down menu on the given parent's parent menu.
(3101) {744002} [744765]: &lt;/p&gt; @param parentItem a menu item which will be the parent of the new instance (cannot be null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT#DROP_DOWN @see Widget#checkSubclass @see Widget#getStyle ------------ Adds the listener to the collection of listeners who will be notified when help events are generated for the control, by sending it one of the messages defined in the &lt;code&gt;HelpListener&lt;/code&gt; interface.
(3102) {744767} [745437]: @param listener the listener which should be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see HelpListener @see #removeHelpListener ------------ Adds the listener to the collection of listeners who will be notified when menus are hidden or shown, by sending it one of the messages defined in the &lt;code&gt;MenuListener&lt;/code&gt; interface.
(3103) {745439} [745950]: @param listener the listener which should be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see MenuListener @see #removeMenuListener ------------ Returns the receiver's background color.
(3104) {745952} [746280]: @return the background color @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.3 ------------ Returns the receiver's background image.
(3105) {746282} [746738]: @return the background image @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.3 ------------ Returns a rectangle describing the receiver's size and location relative to its parent (or its display if its parent is null), unless the receiver is a menu or a shell.
(3107) {746794} [746891]: &lt;p&gt; Note that the bounds of a menu or menu item are undefined when the menu is not visible.
(3109) {746994} [747377]: &lt;/p&gt; @return the receiver's bounding rectangle @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Returns the default menu item or null if none has been previously set.
(3110) {747379} [747409]: @return the default menu item.
(3111) {747411} [747780]: &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver is enabled, and &lt;code&gt;false&lt;/code&gt; otherwise.
(3113) {747895} [748260]: @return the receiver's enabled state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #isEnabled ------------ Returns the foreground color that the receiver will use to draw.
(3114) {748262} [748616]: @return the receiver's foreground color @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the item at the given, zero-relative index in the receiver.
(3116) {748668} [749241]: @param index the index of the item to return @return the item at the given index @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_RANGE - if the index is not between 0 and the number of elements in the list minus 1 (inclusive)&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the number of items contained in the receiver.
(3117) {749243} [749625]: @return the number of items @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns a (possibly empty) array of &lt;code&gt;MenuItem&lt;/code&gt;s which are the items in the receiver.
(3119) {749780} [750238]: &lt;/p&gt; @return the items in the receiver @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the orientation of the receiver, which will be one of the constants &lt;code&gt;SWT.LEFT_TO_RIGHT&lt;/code&gt; or &lt;code&gt;SWT.RIGHT_TO_LEFT&lt;/code&gt;.
(3120) {750240} [750613]: @return the orientation style @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.7 ------------ Returns the receiver's parent, which must be a &lt;code&gt;Decorations&lt;/code&gt;.
(3121) {750615} [751014]: @return the receiver's parent @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's parent item, which must be a &lt;code&gt;MenuItem&lt;/code&gt; or null when the receiver is a root.
(3122) {751016} [751416]: @return the receiver's parent item @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's parent item, which must be a &lt;code&gt;Menu&lt;/code&gt; or null when the receiver is a root.
(3123) {751418} [751729]: @return the receiver's parent item @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's shell.
(3127) {751963} [752375]: @return the receiver's shell or null @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #getParent ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver is visible, and &lt;code&gt;false&lt;/code&gt; otherwise.
(3129) {752597} [753051]: &lt;/p&gt; @return the receiver's visibility state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Searches the receiver's list starting at the first item (index 0) until an item is found that is equal to the argument, and returns the index of that item.
(3131) {753086} [753672]: @param item the search item @return the index of the item @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the item is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver is enabled and all of the receiver's ancestors are enabled, and &lt;code&gt;false&lt;/code&gt; otherwise.
(3133) {753787} [754247]: @return the receiver's enabled state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #getEnabled ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver is visible and all of the receiver's ancestors are visible and &lt;code&gt;false&lt;/code&gt; otherwise.
(3134) {754249} [754680]: @return the receiver's visibility state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #getVisible ------------ Removes the listener from the collection of listeners who will be notified when the help events are generated for the control.
(3135) {754682} [755286]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see HelpListener @see #addHelpListener ------------ Removes the listener from the collection of listeners who will be notified when the menu events are generated for the control.
(3136) {755288} [755914]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see MenuListener @see #addMenuListener ------------ Sets the receiver's background color to the color specified by the argument, or to the default system color for the control if the argument is null.
(3137) {755916} [756499]: @param color the new color (or null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the argument has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.3 ------------ Sets the receiver's background image to the image specified by the argument, or to the default system color for the control if the argument is null.
(3139) {756561} [757222]: @param image the new image (or null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the argument has been disposed&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the argument is not a bitmap&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.3 ------------ Sets the receiver's foreground color to the color specified by the argument, or to the default system color for the control if the argument is null.
(3140) {757224} [757785]: @param color the new color (or null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the argument has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.3 ------------ Sets the default menu item to the argument or removes the default emphasis when the argument is &lt;code&gt;null&lt;/code&gt;.
(3141) {757787} [758313]: @param item the default menu item or null @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the menu item has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Enables the receiver if the argument is &lt;code&gt;true&lt;/code&gt;, and disables it otherwise.
(3143) {758428} [758844]: @param enabled the new enabled state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the location of the receiver, which must be a popup, to the point specified by the arguments which are relative to the display.
(3145) {758961} [759075]: &lt;/p&gt;&lt;p&gt; Note that the platform window manager ultimately has control over the location of popup menus.
(3146) {759076} [759559]: &lt;/p&gt; @param x the new x coordinate for the receiver @param y the new y coordinate for the receiver @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the location of the receiver, which must be a popup, to the point specified by the argument which is relative to the display.
(3148) {759676} [759790]: &lt;/p&gt;&lt;p&gt; Note that the platform window manager ultimately has control over the location of popup menus.
(3149) {759791} [760397]: &lt;/p&gt; @param location the new location for the receiver @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the point is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 2.1 ------------ Sets the orientation of the receiver, which must be one of the constants &lt;code&gt;SWT.LEFT_TO_RIGHT&lt;/code&gt; or &lt;code&gt;SWT.RIGHT_TO_LEFT&lt;/code&gt;.
(3150) {760398} [760822]: &lt;p&gt; @param orientation new orientation style @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.7 ------------ Marks the receiver as visible if the argument is &lt;code&gt;true&lt;/code&gt;, and marks it invisible otherwise.
(3152) {761001} [761371]: &lt;/p&gt; @param visible the new visibility state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ====== MenuAdapter.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(3156) {761976} [762156]: &lt;/p&gt; @see MenuListener @see MenuEvent @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ Sent when a menu is hidden.
(3158) {762197} [762302]: @param e an event containing information about the menu operation ------------ Sent when a menu is shown.
(3160) {762343} [762497]: @param e an event containing information about the menu operation ====== MenuDetectEvent.java ====== Copyright (c) 2000, 2012 IBM Corporation and others.
(3163) {762923} [763162]: @see MenuDetectListener @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @since 3.3 ------------ The display-relative x coordinate of the pointer at the time the context menu trigger occurred.
(3164) {763164} [763275]: public int x; The display-relative y coordinate of the pointer at the time the context menu trigger occurred.
(3166) {763352} [763431]: Setting this field to &lt;code&gt;false&lt;/code&gt; will cancel the operation.
(3172) {764427} [764563]: @return a string representation of the event ====== MenuDetectListener.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(3176) {765369} [765472]: When the context menu trigger occurs, the &lt;code&gt;menuDetected&lt;/code&gt; method will be invoked.
(3178) {765610} [765755]: @param e an event containing information about the menu detect ====== MenuEvent.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(3188) {767524} [767699]: ------------ Constructs a new instance of this class given its parent (which must be a &lt;code&gt;Menu&lt;/code&gt;) and a style value describing its behavior and appearance.
(3193) {768251} [769139]: &lt;/p&gt; @param parent a menu control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT#CHECK @see SWT#CASCADE @see SWT#PUSH @see SWT#RADIO @see SWT#SEPARATOR @see Widget#checkSubclass @see Widget#getStyle ------------ Constructs a new instance of this class given its parent (which must be a &lt;code&gt;Menu&lt;/code&gt;), a style value describing its behavior and appearance, and the index at which to place it in the items maintained by its parent.
(3197) {769623} [770694]: &lt;/p&gt; @param parent a menu control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @param index the zero-relative index to store the receiver in its parent @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_RANGE - if the index is not between 0 and the number of elements in the parent (inclusive)&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT#CHECK @see SWT#CASCADE @see SWT#PUSH @see SWT#RADIO @see SWT#SEPARATOR @see Widget#checkSubclass @see Widget#getStyle ------------ Adds the listener to the collection of listeners who will be notified when the arm events are generated for the control, by sending it one of the messages defined in the &lt;code&gt;ArmListener&lt;/code&gt; interface.
(3198) {770696} [771384]: @param listener the listener which should be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see ArmListener @see #removeArmListener ------------ Adds the listener to the collection of listeners who will be notified when the help events are generated for the control, by sending it one of the messages defined in the &lt;code&gt;HelpListener&lt;/code&gt; interface.
(3199) {771386} [772073]: @param listener the listener which should be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see HelpListener @see #removeHelpListener ------------ Adds the listener to the collection of listeners who will be notified when the menu item is selected by the user, by sending it one of the messages defined in the &lt;code&gt;SelectionListener&lt;/code&gt; interface.
(3200) {772074} [772189]: &lt;p&gt; When &lt;code&gt;widgetSelected&lt;/code&gt; is called, the stateMask field of the event object is valid.
(3201) {772190} [772251]: &lt;code&gt;widgetDefaultSelected&lt;/code&gt; is not called.
(3202) {772252} [772505]: &lt;/p&gt; &lt;p&gt; When the &lt;code&gt;SWT.RADIO&lt;/code&gt; style bit is set, the &lt;code&gt;widgetSelected&lt;/code&gt; method is also called when the receiver loses selection because another item in the same radio group was selected by the user.
(3203) {772506} [772673]: During &lt;code&gt;widgetSelected&lt;/code&gt; the application can use &lt;code&gt;getSelection()&lt;/code&gt; to determine the current selected state of the receiver.
(3204) {772674} [773261]: &lt;/p&gt; @param listener the listener which should be notified when the menu item is selected by the user @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SelectionListener @see #removeSelectionListener @see SelectionEvent ------------ Returns the widget accelerator.
(3208) {773511} [773925]: @return the accelerator or 0 &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns a rectangle describing the receiver's size and location relative to its parent (or its display if its parent is null).
(3209) {773927} [774339]: @return the receiver's bounding rectangle @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver is enabled, and &lt;code&gt;false&lt;/code&gt; otherwise.
(3211) {774459} [774809]: @return the receiver's enabled state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #isEnabled ------------ Gets the identifier associated with the receiver.
(3212) {774811} [775177]: @return the receiver's identifier @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.7 ------------ Returns the receiver's cascade menu if it has one or null if it does not.
(3215) {775386} [775738]: @return the receiver's menu @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's parent, which must be a &lt;code&gt;Menu&lt;/code&gt;.
(3216) {775740} [776104]: @return the receiver's parent @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver is selected, and false otherwise.
(3218) {776246} [776590]: @return the selection state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's tool tip text, or null if it has not been set.
(3219) {776592} [777049]: @return the receiver's tool tip text @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.104 ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver is enabled and all of the receiver's ancestors are enabled, and &lt;code&gt;false&lt;/code&gt; otherwise.
(3221) {777169} [777596]: @return the receiver's enabled state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #getEnabled ------------ Removes the listener from the collection of listeners who will be notified when the arm events are generated for the control.
(3222) {777598} [778200]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see ArmListener @see #addArmListener ------------ Removes the listener from the collection of listeners who will be notified when the help events are generated for the control.
(3223) {778202} [778796]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see HelpListener @see #addHelpListener ------------ Removes the listener from the collection of listeners who will be notified when the control is selected by the user.
(3224) {778798} [779314]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SelectionListener @see #addSelectionListener ------------ Sets the widget accelerator.
(3229) {779635} [780064]: @param accelerator an integer that is the bit-wise OR of masks and a key &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Enables the receiver if the argument is &lt;code&gt;true&lt;/code&gt;, and disables it otherwise.
(3231) {780184} [780533]: @param enabled the new enabled state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the identifier associated with the receiver to the argument.
(3235) {780649} [781103]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if called with an negative-valued argument.&lt;/li&gt; &lt;/ul&gt; @since 3.7 ------------ Sets the receiver's image to the argument, which may be null indicating that no image should be displayed.
(3236) {781104} [781256]: &lt;p&gt; Note: This operation is a &lt;em&gt;HINT&lt;/em&gt; and is not supported on platforms that do not have this concept (for example, Windows NT).
(3240) {781489} [781863]: &lt;/p&gt; @param image the image to display on the receiver (may be null) @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's pull down menu to the argument.
(3245) {782244} [782994]: &lt;/p&gt; @param menu the new pull down menu @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_MENU_NOT_DROP_DOWN - if the menu is not a drop down menu&lt;/li&gt; &lt;li&gt;ERROR_MENUITEM_NOT_CASCADE - if the menu item is not a &lt;code&gt;CASCADE&lt;/code&gt;&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the menu has been disposed&lt;/li&gt; &lt;li&gt;ERROR_INVALID_PARENT - if the menu is not in the same widget tree&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the selection state of the receiver.
(3247) {783136} [783448]: @param selected the new selection state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's text.
(3258) {784435} [785001]: &lt;/p&gt; @param string the new text @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the text is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #setAccelerator ------------ Sets the receiver's tool tip text to the argument, which may be null indicating that the default tool tip for the control will be shown.
(3263) {785541} [785932]: &lt;/p&gt; @param toolTip the new tool tip text (or null) @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.104 ====== MenuListener.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(3267) {786584} [786657]: When the menu is hidden or shown, the appropriate method will be invoked.
(3268) {786658} [786742]: &lt;/p&gt; @see MenuAdapter @see MenuEvent ------------ Sent when a menu is hidden.
(3269) {786744} [786849]: @param e an event containing information about the menu operation ------------ Sent when a menu is shown.
(3270) {786851} [787000]: @param e an event containing information about the menu operation ====== MessageBox.java ====== Copyright (c) 2000, 2015 IBM Corporation and others.
(3277) {788369} [788927]: @param parent a shell which will be the parent of the new instance @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; ------------ Constructs a new instance of this class given its parent and a style value describing its behavior and appearance.
(3281) {789412} [790188]: @param parent a shell which will be the parent of the new instance @param style the style of dialog to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT#ICON_ERROR @see SWT#ICON_INFORMATION @see SWT#ICON_QUESTION @see SWT#ICON_WARNING @see SWT#ICON_WORKING @see SWT#OK @see SWT#CANCEL @see SWT#YES @see SWT#NO @see SWT#ABORT @see SWT#RETRY @see SWT#IGNORE ------------ Returns the dialog's message, or an empty string if it does not have one.
(3287) {790537} [790868]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the dialog has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the dialog&lt;/li&gt; &lt;/ul&gt; ------------ Sets the dialog's message, which is a description of the purpose for which it was opened.
(3289) {790931} [791166]: @param string the message @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the string is null&lt;/li&gt; &lt;/ul&gt; ====== ModifyEvent.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(3297) {792651} [792716]: When the text is modified, the modifyText method will be invoked.
(3298) {792717} [792790]: &lt;/p&gt; @see ModifyEvent ------------ Sent when the text is modified.
(3302) {793297} [793595]: @see Display @see &lt;a href="http://www.eclipse.org/swt/snippets/#monitor"&gt;Monitor snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @since 3.0 ------------ Prevents uninitialized instances from being created outside the package.
(3303) {793596} [793754]: ------------ Compares the argument to the receiver, and returns true if they represent the &lt;em&gt;same&lt;/em&gt; object using a class specific comparison.
(3304) {793756} [794051]: @param object the object to compare with this object @return &lt;code&gt;true&lt;/code&gt; if the object is the same as this object and &lt;code&gt;false&lt;/code&gt; otherwise @see #hashCode() ------------ Returns a rectangle describing the receiver's size and location relative to its device.
(3306) {794116} [794268]: @return the receiver's bounding rectangle ------------ Returns a rectangle which describes the area of the receiver which is capable of displaying data.
(3307) {794270} [794353]: @return the client area ------------ Returns an integer hash code for the receiver.
(3308) {794354} [794502]: Any two objects that return &lt;code&gt;true&lt;/code&gt; when passed to &lt;code&gt;equals&lt;/code&gt; must return the same value for this method.
(3309) {794504} [794639]: @return the receiver's hash @see #equals(Object) ====== MouseAdapter.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(3313) {795300} [795557]: &lt;/p&gt; @see MouseListener @see MouseEvent @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ Sent when a mouse button is pressed twice within the (operating system specified) double click period.
(3315) {795598} [795776]: @param e an event containing information about the mouse double click @see org.eclipse.swt.widgets.Display#getDoubleClickTime() ------------ Sent when a mouse button is pressed.
(3317) {795817} [795937]: @param e an event containing information about the mouse button press ------------ Sent when a mouse button is released.
(3319) {795978} [796133]: @param e an event containing information about the mouse button release ====== MouseEvent.java ====== Copyright (c) 2000, 2012 IBM Corporation and others.
(3323) {796652} [796764]: &lt;p&gt; Note: The &lt;code&gt;button&lt;/code&gt; field is an integer that represents the mouse button number.
(3324) {796766} [796871]: This is not the same as the &lt;code&gt;SWT&lt;/code&gt; mask constants &lt;code&gt;BUTTONx&lt;/code&gt;.
(3325) {796872} [797437]: &lt;/p&gt; @see MouseListener @see MouseMoveListener @see MouseTrackListener @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ the button that was pressed or released; &lt;ul&gt; &lt;li&gt;1 for the first button (usually 'left')&lt;/li&gt; &lt;li&gt;2 for the second button (usually 'middle')&lt;/li&gt; &lt;li&gt;3 for the third button (usually 'right')&lt;/li&gt; &lt;li&gt;etc.&lt;/li&gt; public int button; the state of the keyboard modifier keys and mouse masks at the time the event was generated.
(3329) {798256} [798387]: @return a string representation of the event ====== MouseListener.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(3333) {799071} [799154]: When a mouse button is pressed or released, the appropriate method will be invoked.
(3334) {799155} [799316]: &lt;/p&gt; @see MouseAdapter @see MouseEvent ------------ Sent when a mouse button is pressed twice within the (operating system specified) double click period.
(3335) {799318} [799496]: @param e an event containing information about the mouse double click @see org.eclipse.swt.widgets.Display#getDoubleClickTime() ------------ Sent when a mouse button is pressed.
(3336) {799498} [799618]: @param e an event containing information about the mouse button press ------------ Sent when a mouse button is released.
(3337) {799620} [799782]: @param e an event containing information about the mouse button release ====== MouseMoveListener.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(3341) {800529} [800586]: As the mouse moves, the mouseMove method will be invoked.
(3342) {800587} [800654]: &lt;/p&gt; @see MouseEvent ------------ Sent when the mouse moves.
(3343) {800656} [800808]: @param e an event containing information about the mouse move ====== MouseTrackAdapter.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(3347) {801486} [801730]: &lt;/p&gt; @see MouseTrackListener @see MouseEvent @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ Sent when the mouse pointer passes into the area of the screen covered by a control.
(3349) {801771} [801933]: @param e an event containing information about the mouse enter ------------ Sent when the mouse pointer passes out of the area of the screen covered by a control.
(3351) {801974} [802174]: @param e an event containing information about the mouse exit ------------ Sent when the mouse pointer hovers (that is, stops moving for an (operating system specified) period of time) over a control.
(3357) {803082} [803242]: When the mouse pointer passes into or out of the area of the screen covered by a control or pauses while over a control, the appropriate method will be invoked.
(3358) {803243} [803391]: &lt;/p&gt; @see MouseTrackAdapter @see MouseEvent ------------ Sent when the mouse pointer passes into the area of the screen covered by a control.
(3359) {803393} [803555]: @param e an event containing information about the mouse enter ------------ Sent when the mouse pointer passes out of the area of the screen covered by a control.
(3360) {803557} [803757]: @param e an event containing information about the mouse exit ------------ Sent when the mouse pointer hovers (that is, stops moving for an (operating system specified) period of time) over a control.
(3365) {804603} [804702]: When the mouse wheel is scrolled the &lt;code&gt;mouseScrolled&lt;/code&gt; method will be invoked.
(3366) {804703} [804794]: &lt;/p&gt; @see MouseEvent @since 3.3 ------------ Sent when the mouse wheel is scrolled.
(3367) {804796} [804955]: @param e an event containing information about the mouse wheel action ====== OS2BMPFileFormat.java ====== Copyright (c) 2000, 2008 IBM Corporation and others.
(3379) {807185} [807316]: @return a string representation of the event ====== PaintListener.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(3384) {808131} [808219]: &lt;/p&gt; @see PaintEvent ------------ Sent when a paint event occurs for the control.
(3385) {808221} [808362]: @param e an event containing information about the paint ====== PaletteData.java ====== Copyright (c) 2000, 2015 IBM Corporation and others.
(3388) {808795} [809127]: &lt;p&gt; Depending on the depth of the image, the PaletteData can take one of two forms, indicated by the isDirect field: &lt;/p&gt; &lt;dl&gt; &lt;dt&gt; &lt;em&gt;isDirect is false&lt;/em&gt; &lt;/dt&gt; &lt;dd&gt; If isDirect is &lt;code&gt;false&lt;/code&gt;, this palette is an indexed palette which maps pixel values to RGBs.
(3390) {809198} [809367]: &lt;/dd&gt; &lt;dt&gt; &lt;em&gt;isDirect is true&lt;/em&gt; &lt;/dt&gt; &lt;dd&gt; If isDirect is &lt;code&gt;true&lt;/code&gt;, this palette is a direct color palette.
(3398) {810794} [811075]: @param colors the array of &lt;code&gt;RGB&lt;/code&gt;s for the palette @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the argument is null&lt;/li&gt; &lt;/ul&gt; ------------ Constructs a new direct palette given the red, green and blue masks.
(3399) {811077} [811260]: @param redMask the red mask @param greenMask the green mask @param blueMask the blue mask ------------ Returns the pixel value corresponding to the given &lt;code&gt;RGB&lt;/code&gt;.
(3400) {811262} [811654]: @param rgb the RGB to get the pixel value for @return the pixel value for the given RGB @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the argument is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the RGB is not found in the palette&lt;/li&gt; &lt;/ul&gt; ------------ Returns an &lt;code&gt;RGB&lt;/code&gt; corresponding to the given pixel value.
(3401) {811656} [812081]: @param pixel the pixel to get the RGB value for @return the RGB value for the given pixel @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the argument is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the pixel does not exist in the palette&lt;/li&gt; &lt;/ul&gt; ------------ Returns all the RGB values in the receiver if it is an indexed palette, or null if it is a direct palette.
(3402) {812083} [812205]: @return the &lt;code&gt;RGB&lt;/code&gt;s for the receiver or null ------------ Computes the shift value for a given mask.
(3403) {812207} [812373]: @param mask the mask to compute the shift for @return the shift amount @see PaletteData ====== Path.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(3416) {814368} [814954]: &lt;/p&gt; @param device the device on which to allocate the path @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the device is null and there is no current device&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_NO_GRAPHICS_LIBRARY - if advanced graphics are not available&lt;/li&gt; &lt;/ul&gt; @exception SWTError &lt;ul&gt; &lt;li&gt;ERROR_NO_HANDLES if a handle for the path could not be obtained&lt;/li&gt; &lt;/ul&gt; @see #dispose() ------------ Constructs a new Path that is a copy of &lt;code&gt;path&lt;/code&gt;.
(3417) {814955} [815064]: If &lt;code&gt;flatness&lt;/code&gt; is less than or equal to zero, an unflatten copy of the path is created.
(3422) {815398} [816185]: &lt;/p&gt; @param device the device on which to allocate the path @param path the path to make a copy @param flatness the flatness value @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the device is null and there is no current device&lt;/li&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the path is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the path has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_NO_GRAPHICS_LIBRARY - if advanced graphics are not available&lt;/li&gt; &lt;/ul&gt; @exception SWTError &lt;ul&gt; &lt;li&gt;ERROR_NO_HANDLES if a handle for the path could not be obtained&lt;/li&gt; &lt;/ul&gt; @see #dispose() @since 3.4 ------------ Constructs a new Path with the specified PathData.
(3425) {816395} [817117]: &lt;/p&gt; @param device the device on which to allocate the path @param data the data for the path @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the device is null and there is no current device&lt;/li&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the data is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_NO_GRAPHICS_LIBRARY - if advanced graphics are not available&lt;/li&gt; &lt;/ul&gt; @exception SWTError &lt;ul&gt; &lt;li&gt;ERROR_NO_HANDLES if a handle for the path could not be obtained&lt;/li&gt; &lt;/ul&gt; @see #dispose() @since 3.4 ------------ Adds to the receiver a circular or elliptical arc that lies within the specified rectangular area.
(3429) {817435} [817693]: &lt;/p&gt;&lt;p&gt; The center of the arc is the center of the rectangle whose origin is (&lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;) and whose size is specified by the &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; arguments.
(3431) {817846} [818363]: &lt;/p&gt; @param x the x coordinate of the upper-left corner of the arc @param y the y coordinate of the upper-left corner of the arc @param width the width of the arc @param height the height of the arc @param startAngle the beginning angle @param arcAngle the angular extent of the arc, relative to the start angle @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Adds to the receiver the path described by the parameter.
(3432) {818365} [818829]: @param path the path to add to the receiver @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parameter is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the parameter has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Adds to the receiver the rectangle specified by x, y, width and height.
(3433) {818831} [819299]: @param x the x coordinate of the rectangle to add @param y the y coordinate of the rectangle to add @param width the width of the rectangle to add @param height the height of the rectangle to add @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Adds to the receiver the pattern of glyphs generated by drawing the given string using the given font starting at the point (x, y).
(3434) {819301} [819933]: @param string the text to use @param x the x coordinate of the starting point @param y the y coordinate of the starting point @param font the font to use @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the font is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the font has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Closes the current sub path by adding to the receiver a line from the current point of the path back to the starting point of the sub path.
(3435) {819935} [820185]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns &lt;code&gt;true&lt;/code&gt; if the specified point is contained by the receiver and false otherwise.
(3436) {820186} [820308]: &lt;p&gt; If outline is &lt;code&gt;true&lt;/code&gt;, the point (x, y) checked for containment in the receiver's outline.
(3437) {820309} [820465]: If outline is &lt;code&gt;false&lt;/code&gt;, the point is checked to see if it is contained within the bounds of the (closed) area covered by the receiver.
(3438) {820467} [821244]: @param x the x coordinate of the point to test for containment @param y the y coordinate of the point to test for containment @param gc the GC to use when testing for containment @param outline controls whether to check the outline or contained area of the path @return &lt;code&gt;true&lt;/code&gt; if the path contains the point and &lt;code&gt;false&lt;/code&gt; otherwise @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the gc is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the gc has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Adds to the receiver a cubic bezier curve based on the parameters.
(3439) {821246} [821907]: @param cx1 the x coordinate of the first control point of the spline @param cy1 the y coordinate of the first control of the spline @param cx2 the x coordinate of the second control of the spline @param cy2 the y coordinate of the second control of the spline @param x the x coordinate of the end point of the spline @param y the y coordinate of the end point of the spline @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Replaces the first four elements in the parameter with values that describe the smallest rectangle that will completely contain the receiver (i.e.
(3441) {821928} [822445]: @param bounds the array to hold the result @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parameter is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the parameter is too small to hold the bounding box&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Replaces the first two elements in the parameter with values that describe the current point of the path.
(3442) {822447} [822915]: @param point the array to hold the result @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parameter is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the parameter is too small to hold the end point&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns a device independent representation of the receiver.
(3443) {822917} [823195]: @return the PathData for the receiver @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see PathData ------------ Adds to the receiver a line from the current point to the point specified by (x, y).
(3444) {823197} [823564]: @param x the x coordinate of the end of the line to add @param y the y coordinate of the end of the line to add @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns &lt;code&gt;true&lt;/code&gt; if the Path has been disposed, and &lt;code&gt;false&lt;/code&gt; otherwise.
(3447) {823742} [823937]: @return &lt;code&gt;true&lt;/code&gt; when the Path is disposed, and &lt;code&gt;false&lt;/code&gt; otherwise ------------ Sets the current point of the receiver to the point specified by (x, y).
(3449) {823977} [824275]: @param x the x coordinate of the new end point @param y the y coordinate of the new end point @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Adds to the receiver a quadratic curve based on the parameters.
(3450) {824277} [824738]: @param cx the x coordinate of the control point of the spline @param cy the y coordinate of the control point of the spline @param x the x coordinate of the end point of the spline @param y the y coordinate of the end point of the spline @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns a string containing a concise, human-readable description of the receiver.
(3451) {824740} [824869]: @return a string representation of the receiver ====== PathData.java ====== Copyright (c) 2000, 2008 IBM Corporation and others.
(3454) {825241} [825438]: @see Path @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @since 3.1 ====== Pattern.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(3468) {827373} [828114]: &lt;/p&gt; @param device the device on which to allocate the pattern @param image the image that the pattern will draw @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the device is null and there is no current device, or the image is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the image has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_NO_GRAPHICS_LIBRARY - if advanced graphics are not available&lt;/li&gt; &lt;/ul&gt; @exception SWTError &lt;ul&gt; &lt;li&gt;ERROR_NO_HANDLES if a handle for the pattern could not be obtained&lt;/li&gt; &lt;/ul&gt; @see #dispose() ------------ Constructs a new Pattern that represents a linear, two color gradient.
(3472) {828440} [829518]: &lt;/p&gt; @param device the device on which to allocate the pattern @param x1 the x coordinate of the starting corner of the gradient @param y1 the y coordinate of the starting corner of the gradient @param x2 the x coordinate of the ending corner of the gradient @param y2 the y coordinate of the ending corner of the gradient @param color1 the starting color of the gradient @param color2 the ending color of the gradient @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the device is null and there is no current device, or if either color1 or color2 is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if either color1 or color2 has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_NO_GRAPHICS_LIBRARY - if advanced graphics are not available&lt;/li&gt; &lt;/ul&gt; @exception SWTError &lt;ul&gt; &lt;li&gt;ERROR_NO_HANDLES if a handle for the pattern could not be obtained&lt;/li&gt; &lt;/ul&gt; @see #dispose() ------------ Constructs a new Pattern that represents a linear, two color gradient.
(3476) {829844} [831089]: &lt;/p&gt; @param device the device on which to allocate the pattern @param x1 the x coordinate of the starting corner of the gradient @param y1 the y coordinate of the starting corner of the gradient @param x2 the x coordinate of the ending corner of the gradient @param y2 the y coordinate of the ending corner of the gradient @param color1 the starting color of the gradient @param alpha1 the starting alpha value of the gradient @param color2 the ending color of the gradient @param alpha2 the ending alpha value of the gradient @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the device is null and there is no current device, or if either color1 or color2 is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if either color1 or color2 has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_NO_GRAPHICS_LIBRARY - if advanced graphics are not available&lt;/li&gt; &lt;/ul&gt; @exception SWTError &lt;ul&gt; &lt;li&gt;ERROR_NO_HANDLES if a handle for the pattern could not be obtained&lt;/li&gt; &lt;/ul&gt; @see #dispose() @since 3.2 ------------ Returns &lt;code&gt;true&lt;/code&gt; if the Pattern has been disposed, and &lt;code&gt;false&lt;/code&gt; otherwise.
(3479) {831276} [831484]: @return &lt;code&gt;true&lt;/code&gt; when the Pattern is disposed, and &lt;code&gt;false&lt;/code&gt; otherwise ------------ Returns a string containing a concise, human-readable description of the receiver.
(3480) {831486} [831615]: @return a string representation of the receiver ====== PngChunk.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(3500) {833101} [833133]: ------------ Set the chunk type.
(3509) {833513} [833547]: ------------ Set the chunk's data.
(3528) {834595} [834727]: @return a string representation of the event ====== PngChunkReader.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(3603) {842372} [842417]: ------------ Get the image's width in pixels.
(3604) {842418} [842463]: ------------ Set the image's width in pixels.
(3605) {842464} [842510]: ------------ Get the image's height in pixels.
(3606) {842511} [842557]: ------------ Set the image's height in pixels.
(3607) {842558} [842597]: ------------ Get the image's bit depth.
(3609) {842647} [842686]: ------------ Set the image's bit depth.
(3611) {842736} [842776]: ------------ Get the image's color type.
(3617) {842920} [842960]: ------------ Set the image's color type.
(3623) {843104} [843152]: ------------ Get the image's compression method.
(3625) {843175} [843223]: ------------ Set the image's compression method.
(3627) {843246} [843289]: ------------ Get the image's filter method.
(3629) {843312} [843355]: ------------ Set the image's filter method.
(3631) {843378} [843424]: ------------ Get the image's interlace method.
(3634) {843504} [843550]: ------------ Set the image's interlace method.
(3640) {843856} [843942]: ====== PngInputStream.java ====== Copyright (c) 2000, 2006 IBM Corporation and others.
(3667) {847209} [847454]: &lt;/p&gt; &lt;p&gt; Application code does &lt;em&gt;not&lt;/em&gt; need to explicitly release the resources managed by each instance when those instances are no longer required, and thus no &lt;code&gt;dispose()&lt;/code&gt; method is provided.
(3668) {847455} [847802]: &lt;/p&gt; @see Rectangle @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ the x coordinate of the point public int x; the y coordinate of the point public int y; static final long serialVersionUID = 3257002163938146354L; Constructs a new point with the given x and y coordinates.
(3669) {847804} [848048]: @param x the x coordinate of the new point @param y the y coordinate of the new point ------------ Compares the argument to the receiver, and returns true if they represent the &lt;em&gt;same&lt;/em&gt; object using a class specific comparison.
(3670) {848050} [848304]: @param object the object to compare with this object @return &lt;code&gt;true&lt;/code&gt; if the object is the same as this object and &lt;code&gt;false&lt;/code&gt; otherwise @see #hashCode() ------------ Returns an integer hash code for the receiver.
(3671) {848305} [848453]: Any two objects that return &lt;code&gt;true&lt;/code&gt; when passed to &lt;code&gt;equals&lt;/code&gt; must return the same value for this method.
(3672) {848455} [848600]: @return the receiver's hash @see #equals(Object) ------------ Returns a string containing a concise, human-readable description of the receiver.
(3673) {848602} [848731]: @return a string representation of the point ====== ProgressBar.java ====== Copyright (c) 2000, 2012 IBM Corporation and others.
(3683) {850557} [851270]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT#SMOOTH @see SWT#HORIZONTAL @see SWT#VERTICAL @see SWT#INDETERMINATE @see Widget#checkSubclass @see Widget#getStyle ------------ Returns the maximum value which the receiver will allow.
(3684) {851272} [851595]: @return the maximum @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the minimum value which the receiver will allow.
(3685) {851597} [851927]: @return the minimum @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the single 'selection' that is the receiver's position.
(3686) {851929} [852232]: @return the selection @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the state of the receiver.
(3687) {852233} [852731]: The value will be one of: &lt;ul&gt; &lt;li&gt;{@link SWT#NORMAL}&lt;/li&gt; &lt;li&gt;{@link SWT#ERROR}&lt;/li&gt; &lt;li&gt;{@link SWT#PAUSED}&lt;/li&gt; &lt;/ul&gt; @return the state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.4 ------------ Sets the maximum value that the receiver will allow.
(3690) {852956} [853332]: @param value the new maximum, which must be greater than the current minimum @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the minimum value that the receiver will allow.
(3693) {853569} [854026]: @param value the new minimum, which must be nonnegative and less than the current maximum @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the single 'selection' that is the receiver's position to the argument which must be greater than or equal to zero.
(3694) {854028} [854363]: @param value the new selection (must be zero or greater) @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the state of the receiver.
(3695) {854364} [854650]: The state must be one of these values: &lt;ul&gt; &lt;li&gt;{@link SWT#NORMAL}&lt;/li&gt; &lt;li&gt;{@link SWT#ERROR}&lt;/li&gt; &lt;li&gt;{@link SWT#PAUSED}&lt;/li&gt; &lt;/ul&gt; &lt;p&gt; Note: This operation is a hint and is not supported on platforms that do not have this concept.
(3696) {854651} [855018]: &lt;/p&gt; @param state the new state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.4 ====== Rectangle.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(3699) {855414} [855556]: The top left corner of the rectangle is specified by its x and y values, and the extent of the rectangle is specified by its width and height.
(3703) {856060} [856305]: &lt;/p&gt; &lt;p&gt; Application code does &lt;em&gt;not&lt;/em&gt; need to explicitly release the resources managed by each instance when those instances are no longer required, and thus no &lt;code&gt;dispose()&lt;/code&gt; method is provided.
(3704) {856306} [856776]: &lt;/p&gt; @see Point @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ the x coordinate of the rectangle public int x; the y coordinate of the rectangle public int y; the width of the rectangle public int width; the height of the rectangle public int height; static final long serialVersionUID = 3256439218279428914L; Construct a new instance of this class given the x, y, width and height values.
(3705) {856778} [857164]: @param x the x coordinate of the origin of the rectangle @param y the y coordinate of the origin of the rectangle @param width the width of the rectangle @param height the height of the rectangle ------------ Destructively replaces the x, y, width and height values in the receiver with ones which represent the union of the rectangles specified by the receiver and the given rectangle.
(3707) {857314} [857688]: &lt;/p&gt; @param rect the rectangle to merge with the receiver @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the argument is null&lt;/li&gt; &lt;/ul&gt; ------------ Returns &lt;code&gt;true&lt;/code&gt; if the point specified by the arguments is inside the area specified by the receiver, and &lt;code&gt;false&lt;/code&gt; otherwise.
(3708) {857690} [858096]: @param x the x coordinate of the point to test for containment @param y the y coordinate of the point to test for containment @return &lt;code&gt;true&lt;/code&gt; if the rectangle contains the point and &lt;code&gt;false&lt;/code&gt; otherwise ------------ Returns &lt;code&gt;true&lt;/code&gt; if the given point is inside the area specified by the receiver, and &lt;code&gt;false&lt;/code&gt; otherwise.
(3709) {858098} [858546]: @param pt the point to test for containment @return &lt;code&gt;true&lt;/code&gt; if the rectangle contains the point and &lt;code&gt;false&lt;/code&gt; otherwise @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the argument is null&lt;/li&gt; &lt;/ul&gt; ------------ Compares the argument to the receiver, and returns true if they represent the &lt;em&gt;same&lt;/em&gt; object using a class specific comparison.
(3710) {858548} [858802]: @param object the object to compare with this object @return &lt;code&gt;true&lt;/code&gt; if the object is the same as this object and &lt;code&gt;false&lt;/code&gt; otherwise @see #hashCode() ------------ Returns an integer hash code for the receiver.
(3711) {858803} [858951]: Any two objects that return &lt;code&gt;true&lt;/code&gt; when passed to &lt;code&gt;equals&lt;/code&gt; must return the same value for this method.
(3712) {858953} [859200]: @return the receiver's hash @see #equals(Object) ------------ Destructively replaces the x, y, width and height values in the receiver with ones which represent the intersection of the rectangles specified by the receiver and the given rectangle.
(3713) {859202} [859508]: @param rect the rectangle to intersect with the receiver @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the argument is null&lt;/li&gt; &lt;/ul&gt; since 3.0 ------------ Returns a new rectangle which represents the intersection of the receiver and the given rectangle.
(3715) {859635} [860058]: &lt;/p&gt; @param rect the rectangle to intersect with the receiver @return the intersection of the receiver and the argument @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the argument is null&lt;/li&gt; &lt;/ul&gt; ------------ Returns &lt;code&gt;true&lt;/code&gt; if the rectangle described by the arguments intersects with the receiver and &lt;code&gt;false&lt;/code&gt; otherwise.
(3717) {860169} [860841]: &lt;/p&gt; @param x the x coordinate of the origin of the rectangle @param y the y coordinate of the origin of the rectangle @param width the width of the rectangle @param height the height of the rectangle @return &lt;code&gt;true&lt;/code&gt; if the rectangle intersects with the receiver, and &lt;code&gt;false&lt;/code&gt; otherwise @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the argument is null&lt;/li&gt; &lt;/ul&gt; @see #intersection(Rectangle) @see #isEmpty() @since 3.0 ------------ Returns &lt;code&gt;true&lt;/code&gt; if the given rectangle intersects with the receiver and &lt;code&gt;false&lt;/code&gt; otherwise.
(3719) {860952} [861527]: &lt;/p&gt; @param rect the rectangle to test for intersection @return &lt;code&gt;true&lt;/code&gt; if the rectangle intersects with the receiver, and &lt;code&gt;false&lt;/code&gt; otherwise @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the argument is null&lt;/li&gt; &lt;/ul&gt; @see #intersection(Rectangle) @see #isEmpty() ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver does not cover any area in the (x, y) coordinate plane, and &lt;code&gt;false&lt;/code&gt; if the receiver does cover some area in the plane.
(3720) {861528} [861672]: &lt;p&gt; A rectangle is considered to &lt;em&gt;cover area&lt;/em&gt; in the (x, y) coordinate plane if both its width and height are non-zero.
(3721) {861673} [861889]: &lt;/p&gt; @return &lt;code&gt;true&lt;/code&gt; if the receiver is empty, and &lt;code&gt;false&lt;/code&gt; otherwise ------------ Returns a string containing a concise, human-readable description of the receiver.
(3722) {861891} [862044]: @return a string representation of the rectangle ------------ Returns a new rectangle which represents the union of the receiver and the given rectangle.
(3724) {862194} [862533]: &lt;/p&gt; @param rect the rectangle to perform union with @return the union of the receiver and the argument @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the argument is null&lt;/li&gt; &lt;/ul&gt; @see #add(Rectangle) ====== Region.java ====== Copyright (c) 2000, 2014 IBM Corporation and others.
(3734) {863985} [864192]: &lt;/p&gt; @exception SWTError &lt;ul&gt; &lt;li&gt;ERROR_NO_HANDLES if a handle could not be obtained for region creation&lt;/li&gt; &lt;/ul&gt; @see #dispose() ------------ Constructs a new empty region.
(3736) {864262} [864758]: &lt;/p&gt; @param device the device on which to allocate the region @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if device is null and there is no current device&lt;/li&gt; &lt;/ul&gt; @exception SWTError &lt;ul&gt; &lt;li&gt;ERROR_NO_HANDLES if a handle could not be obtained for region creation&lt;/li&gt; &lt;/ul&gt; @see #dispose() @since 3.0 ------------ Constructs a new region given a handle to the operating system resources that it should represent.
(3737) {864760} [864910]: @param handle the handle for the result ------------ Adds the given polygon to the collection of polygons the receiver maintains to describe its area.
(3738) {864912} [865368]: @param pointArray points that describe the polygon to merge with the receiver @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the argument is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.0 ------------ Adds the given rectangle to the collection of polygons the receiver maintains to describe its area.
(3739) {865370} [865882]: @param rect the rectangle to merge with the receiver @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the argument is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the rectangle's width or height is negative&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Adds the given rectangle to the collection of polygons the receiver maintains to describe its area.
(3740) {865884} [866525]: @param x the x coordinate of the rectangle @param y the y coordinate of the rectangle @param width the width coordinate of the rectangle @param height the height coordinate of the rectangle @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the rectangle's width or height is negative&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Adds all of the polygons which make up the area covered by the argument to the collection of polygons the receiver maintains to describe its area.
(3741) {866527} [867077]: @param region the region to merge @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the argument is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the argument has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns &lt;code&gt;true&lt;/code&gt; if the point specified by the arguments is inside the area specified by the receiver, and &lt;code&gt;false&lt;/code&gt; otherwise.
(3742) {867079} [867610]: @param x the x coordinate of the point to test for containment @param y the y coordinate of the point to test for containment @return &lt;code&gt;true&lt;/code&gt; if the region contains the point and &lt;code&gt;false&lt;/code&gt; otherwise @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns &lt;code&gt;true&lt;/code&gt; if the given point is inside the area specified by the receiver, and &lt;code&gt;false&lt;/code&gt; otherwise.
(3743) {867612} [868184]: @param pt the point to test for containment @return &lt;code&gt;true&lt;/code&gt; if the region contains the point and &lt;code&gt;false&lt;/code&gt; otherwise @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the argument is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Compares the argument to the receiver, and returns true if they represent the &lt;em&gt;same&lt;/em&gt; object using a class specific comparison.
(3744) {868186} [868525]: @param object the object to compare with this object @return &lt;code&gt;true&lt;/code&gt; if the object is the same as this object and &lt;code&gt;false&lt;/code&gt; otherwise @see #hashCode ------------ Returns a rectangle which represents the rectangular union of the collection of polygons the receiver maintains to describe its area.
(3745) {868527} [868780]: @return a bounding rectangle for the region @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see Rectangle#union ------------ Returns an integer hash code for the receiver.
(3746) {868781} [868929]: Any two objects that return &lt;code&gt;true&lt;/code&gt; when passed to &lt;code&gt;equals&lt;/code&gt; must return the same value for this method.
(3747) {868931} [869091]: @return the receiver's hash @see #equals ------------ Intersects the given rectangle to the collection of polygons the receiver maintains to describe its area.
(3748) {869093} [869627]: @param rect the rectangle to intersect with the receiver @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the argument is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the rectangle's width or height is negative&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.0 ------------ Intersects the given rectangle to the collection of polygons the receiver maintains to describe its area.
(3749) {869629} [870276]: @param x the x coordinate of the rectangle @param y the y coordinate of the rectangle @param width the width coordinate of the rectangle @param height the height coordinate of the rectangle @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the rectangle's width or height is negative&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Intersects all of the polygons which make up the area covered by the argument to the collection of polygons the receiver maintains to describe its area.
(3750) {870278} [870883]: @param region the region to intersect @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the argument is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the argument has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.0 ------------ Returns &lt;code&gt;true&lt;/code&gt; if the rectangle described by the arguments intersects with any of the polygons the receiver maintains to describe its area, and &lt;code&gt;false&lt;/code&gt; otherwise.
(3751) {870885} [871576]: @param x the x coordinate of the origin of the rectangle @param y the y coordinate of the origin of the rectangle @param width the width of the rectangle @param height the height of the rectangle @return &lt;code&gt;true&lt;/code&gt; if the rectangle intersects with the receiver, and &lt;code&gt;false&lt;/code&gt; otherwise @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see Rectangle#intersects(Rectangle) ------------ Returns &lt;code&gt;true&lt;/code&gt; if the given rectangle intersects with any of the polygons the receiver maintains to describe its area and &lt;code&gt;false&lt;/code&gt; otherwise.
(3752) {871578} [872180]: @param rect the rectangle to test for intersection @return &lt;code&gt;true&lt;/code&gt; if the rectangle intersects with the receiver, and &lt;code&gt;false&lt;/code&gt; otherwise @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the argument is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see Rectangle#intersects(Rectangle) ------------ Returns &lt;code&gt;true&lt;/code&gt; if the region has been disposed, and &lt;code&gt;false&lt;/code&gt; otherwise.
(3755) {872364} [872684]: @return &lt;code&gt;true&lt;/code&gt; when the region is disposed, and &lt;code&gt;false&lt;/code&gt; otherwise ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver does not cover any area in the (x, y) coordinate plane, and &lt;code&gt;false&lt;/code&gt; if the receiver does cover some area in the plane.
(3756) {872686} [873040]: @return &lt;code&gt;true&lt;/code&gt; if the receiver is empty, and &lt;code&gt;false&lt;/code&gt; otherwise @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Subtracts the given polygon from the collection of polygons the receiver maintains to describe its area.
(3757) {873042} [873505]: @param pointArray points that describe the polygon to merge with the receiver @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the argument is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.0 ------------ Subtracts the given rectangle from the collection of polygons the receiver maintains to describe its area.
(3758) {873507} [874041]: @param rect the rectangle to subtract from the receiver @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the argument is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the rectangle's width or height is negative&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.0 ------------ Subtracts the given rectangle from the collection of polygons the receiver maintains to describe its area.
(3759) {874043} [874691]: @param x the x coordinate of the rectangle @param y the y coordinate of the rectangle @param width the width coordinate of the rectangle @param height the height coordinate of the rectangle @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the rectangle's width or height is negative&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Subtracts all of the polygons which make up the area covered by the argument from the collection of polygons the receiver maintains to describe its area.
(3760) {874693} [875186]: @param region the region to subtract @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the argument is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the argument has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.0 ------------ Translate all of the polygons the receiver maintains to describe its area by the specified point.
(3761) {875188} [875542]: @param x the x coordinate of the point to translate @param y the y coordinate of the point to translate @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Translate all of the polygons the receiver maintains to describe its area by the specified point.
(3762) {875544} [875938]: @param pt the point to translate @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the argument is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Returns a string containing a concise, human-readable description of the receiver.
(3767) {876382} [876632]: &lt;/p&gt; @param device the device on which to allocate the region @param handle the handle for the region @return a new region object containing the specified device and handle @noreference This method is not intended to be referenced by clients.
(3777) {877894} [878390]: &lt;/p&gt; @see #dispose @see #isDisposed @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @since 3.1 ------------ the device where this resource was created Device device; public Resource() { } Resource(Device device) { if (device == null) device = Device.getDevice(); if (device == null) SWT.error(SWT.ERROR_NULL_ARGUMENT); this.device = device; } void destroy() { } Disposes of the operating system resources associated with this resource.
(3780) {878517} [878606]: ------------ Returns the &lt;code&gt;Device&lt;/code&gt; where this resource was created.
(3781) {878608} [878818]: @return &lt;code&gt;Device&lt;/code&gt; the device of the receiver @since 3.2 ------------ Returns &lt;code&gt;true&lt;/code&gt; if the resource has been disposed, and &lt;code&gt;false&lt;/code&gt; otherwise.
(3784) {879008} [879197]: @return &lt;code&gt;true&lt;/code&gt; when the resource is disposed and &lt;code&gt;false&lt;/code&gt; otherwise ====== RGB.java ====== Copyright (c) 2000, 2013 IBM Corporation and others.
(3791) {880105} [880350]: &lt;/p&gt; &lt;p&gt; Application code does &lt;em&gt;not&lt;/em&gt; need to explicitly release the resources managed by each instance when those instances are no longer required, and thus no &lt;code&gt;dispose()&lt;/code&gt; method is provided.
(3792) {880351} [880868]: &lt;/p&gt; @see Color @see &lt;a href="http://www.eclipse.org/swt/snippets/#color"&gt;Color and RGB snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ the red component of the RGB public int red; the green component of the RGB public int green; the blue component of the RGB public int blue; static final long serialVersionUID = 3258415023461249074L; Constructs an instance of this class with the given red, green and blue values.
(3793) {880870} [881286]: @param red the red component of the new instance @param green the green component of the new instance @param blue the blue component of the new instance @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the red, green or blue argument is not between 0 and 255&lt;/li&gt; &lt;/ul&gt; ------------ Constructs an instance of this class with the given hue, saturation, and brightness.
(3795) {882645} [883045]: @return color space values in float format:&lt;ul&gt; &lt;li&gt;hue (from 0 to 360)&lt;/li&gt; &lt;li&gt;saturation (from 0 to 1)&lt;/li&gt; &lt;li&gt;brightness (from 0 to 1)&lt;/li&gt; &lt;/ul&gt; @see #RGB(float, float, float) @since 3.2 ------------ Compares the argument to the receiver, and returns true if they represent the &lt;em&gt;same&lt;/em&gt; object using a class specific comparison.
(3796) {883047} [883301]: @param object the object to compare with this object @return &lt;code&gt;true&lt;/code&gt; if the object is the same as this object and &lt;code&gt;false&lt;/code&gt; otherwise @see #hashCode() ------------ Returns an integer hash code for the receiver.
(3797) {883302} [883450]: Any two objects that return &lt;code&gt;true&lt;/code&gt; when passed to &lt;code&gt;equals&lt;/code&gt; must return the same value for this method.
(3798) {883452} [883597]: @return the receiver's hash @see #equals(Object) ------------ Returns a string containing a concise, human-readable description of the receiver.
(3799) {883599} [883744]: @return a string representation of the &lt;code&gt;RGB&lt;/code&gt; ====== RGBA.java ====== Copyright (c) 2015, 2016 IBM Corporation and others.
(3806) {884722} [884967]: &lt;/p&gt; &lt;p&gt; Application code does &lt;em&gt;not&lt;/em&gt; need to explicitly release the resources managed by each instance when those instances are no longer required, and thus no &lt;code&gt;dispose()&lt;/code&gt; method is provided.
(3807) {884968} [885463]: &lt;/p&gt; @see Color @see &lt;a href="http://www.eclipse.org/swt/snippets/#color"&gt;Color and RGB snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @since 3.104 ------------ the RGB component of the RGBA public final RGB rgb; the alpha component of the RGBA public int alpha; static final long serialVersionUID = 1049467103126495855L; Constructs an instance of this class with the given red, green, blue and alpha values.
(3808) {885465} [885941]: @param red the red component of the new instance @param green the green component of the new instance @param blue the blue component of the new instance @param alpha the alpha component of the new instance @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the red, green, blue or alpha argument is not between 0 and 255&lt;/li&gt; &lt;/ul&gt; ------------ Constructs an instance of this class with the given hue, saturation, and brightness.
(3810) {886745} [887184]: @return color space values in float format:&lt;ul&gt; &lt;li&gt;hue (from 0 to 360)&lt;/li&gt; &lt;li&gt;saturation (from 0 to 1)&lt;/li&gt; &lt;li&gt;brightness (from 0 to 1)&lt;/li&gt; &lt;li&gt;alpha (from 0 to 255)&lt;/li&gt; &lt;/ul&gt; @see #RGBA(float, float, float, float) ------------ Compares the argument to the receiver, and returns true if they represent the &lt;em&gt;same&lt;/em&gt; object using a class specific comparison.
(3811) {887186} [887440]: @param object the object to compare with this object @return &lt;code&gt;true&lt;/code&gt; if the object is the same as this object and &lt;code&gt;false&lt;/code&gt; otherwise @see #hashCode() ------------ Returns an integer hash code for the receiver.
(3812) {887441} [887589]: Any two objects that return &lt;code&gt;true&lt;/code&gt; when passed to &lt;code&gt;equals&lt;/code&gt; must return the same value for this method.
(3813) {887591} [887736]: @return the receiver's hash @see #equals(Object) ------------ Returns a string containing a concise, human-readable description of the receiver.
(3814) {887738} [887887]: @return a string representation of the &lt;code&gt;RGBA&lt;/code&gt; ====== RowData.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(3817) {888382} [888983]: &lt;p&gt; The following code uses a &lt;code&gt;RowData&lt;/code&gt; object to change the initial size of a &lt;code&gt;Button&lt;/code&gt; in a &lt;code&gt;Shell&lt;/code&gt;: &lt;pre&gt; Display display = new Display(); Shell shell = new Shell(display); shell.setLayout(new RowLayout()); Button button1 = new Button(shell, SWT.PUSH); button1.setText("Button 1"); button1.setLayoutData(new RowData(50, 40)); &lt;/pre&gt; &lt;/p&gt; @see RowLayout @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ width specifies the desired width in pixels.
(3818) {888984} [889106]: This value is the wHint passed into Control.computeSize(int, int, boolean) to determine the preferred size of the control.
(3821) {889296} [889418]: This value is the hHint passed into Control.computeSize(int, int, boolean) to determine the preferred size of the control.
(3824) {889650} [889769]: If this value is &lt;code&gt;true&lt;/code&gt;, the size and position of the control will not be managed by the layout.
(3825) {889771} [889887]: If this value is &lt;code&gt;false&lt;/code&gt;, the size and position of the control will be computed and assigned.
(3826) {889888} [889942]: * The default value is &lt;code&gt;false&lt;/code&gt;.
(3830) {890220} [890389]: @param width a minimum width for the control @param height a minimum height for the control ------------ Constructs a new instance of RowData according to the parameter.
(3832) {890481} [890718]: @param point a point whose x coordinate specifies a minimum width for the control and y coordinate specifies a minimum height for the control ------------ Returns a string containing a concise, human-readable description of the receiver.
(3833) {890720} [890856]: @return a string representation of the RowData object ====== RowLayout.java ====== Copyright (c) 2000, 2013 IBM Corporation and others.
(3836) {891396} [891571]: &lt;p&gt; &lt;code&gt;RowLayout&lt;/code&gt; aligns all controls in one row if the &lt;code&gt;type&lt;/code&gt; is set to horizontal, and one column if it is set to vertical.
(3838) {891647} [891719]: &lt;code&gt;RowLayout&lt;/code&gt; has a number of configuration fields.
(3840) {891946} [892141]: &lt;/p&gt; &lt;p&gt; The following example code creates a &lt;code&gt;RowLayout&lt;/code&gt;, sets all of its fields to non-default values, and then sets it into a &lt;code&gt;Shell&lt;/code&gt;.
(3841) {892142} [892999]: &lt;pre&gt; RowLayout rowLayout = new RowLayout(); rowLayout.wrap = false; rowLayout.pack = false; rowLayout.justify = true; rowLayout.type = SWT.VERTICAL; rowLayout.marginLeft = 5; rowLayout.marginTop = 5; rowLayout.marginRight = 5; rowLayout.marginBottom = 5; rowLayout.spacing = 0; shell.setLayout(rowLayout); &lt;/pre&gt; If you are using the default field values, you only need one line of code: &lt;pre&gt; shell.setLayout(new RowLayout()); &lt;/pre&gt; &lt;/p&gt; @see RowData @see &lt;a href="http://www.eclipse.org/swt/snippets/#rowlayout"&gt;RowLayout snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: LayoutExample&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ type specifies whether the layout places controls in rows or columns.
(3849) {893983} [894011]: * The default value is true.
(3852) {894314} [894342]: * The default value is true.
(3854) {894513} [894542]: * The default value is false.
(3856) {894762} [894791]: * The default value is false.
(3858) {894964} [894993]: * The default value is false.
(3863) {895669} [895788]: * The default value is 3. public int marginBottom = 3; Constructs a new instance of this class with type HORIZONTAL.
(3865) {895859} [896001]: @param type the type of row layout @since 2.0 ------------ Returns a string containing a concise, human-readable description of the receiver.
(3866) {896003} [896134]: @return a string representation of the layout ====== RunnableLock.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(3879) {898554} [899402]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT#HORIZONTAL @see SWT#VERTICAL @see SWT#SMOOTH @see Widget#checkSubclass @see Widget#getStyle ------------ Adds the listener to the collection of listeners who will be notified when the control is selected by the user, by sending it one of the messages defined in the &lt;code&gt;SelectionListener&lt;/code&gt; interface.
(3880) {899403} [899534]: &lt;p&gt; When &lt;code&gt;widgetSelected&lt;/code&gt; is called, the x, y, width, and height fields of the event object are valid.
(3882) {899653} [899714]: &lt;code&gt;widgetDefaultSelected&lt;/code&gt; is not called.
(3883) {899715} [900385]: &lt;/p&gt; @param listener the listener which should be notified when the control is selected by the user @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SelectionListener @see #removeSelectionListener @see SelectionEvent ------------ Removes the listener from the collection of listeners who will be notified when the control is selected by the user.
(3884) {900387} [900940]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SelectionListener @see #addSelectionListener ====== Scale.java ====== Copyright (c) 2000, 2012 IBM Corporation and others.
(3894) {902726} [903560]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT#HORIZONTAL @see SWT#VERTICAL @see Widget#checkSubclass @see Widget#getStyle ------------ Adds the listener to the collection of listeners who will be notified when the user changes the receiver's value, by sending it one of the messages defined in the &lt;code&gt;SelectionListener&lt;/code&gt; interface.
(3895) {903561} [903664]: &lt;p&gt; &lt;code&gt;widgetSelected&lt;/code&gt; is called when the user changes the receiver's value.
(3896) {903665} [903726]: &lt;code&gt;widgetDefaultSelected&lt;/code&gt; is not called.
(3897) {903727} [904337]: &lt;/p&gt; @param listener the listener which should be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SelectionListener @see #removeSelectionListener ------------ Returns the amount that the receiver's value will be modified by when the up/down (or right/left) arrows are pressed.
(3898) {904339} [904664]: @return the increment @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the maximum value which the receiver will allow.
(3899) {904666} [904989]: @return the maximum @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the minimum value which the receiver will allow.
(3900) {904991} [905376]: @return the minimum @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the amount that the receiver's value will be modified by when the page increment/decrement areas are selected.
(3901) {905378} [905710]: @return the page increment @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the 'selection', which is the receiver's position.
(3902) {905712} [906099]: @return the selection @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Removes the listener from the collection of listeners who will be notified when the user changes the receiver's value.
(3903) {906101} [906747]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SelectionListener @see #addSelectionListener ------------ Sets the amount that the receiver's value will be modified by when the up/down (or right/left) arrows are pressed to the argument, which must be at least one.
(3904) {906749} [907111]: @param increment the new increment (must be greater than zero) @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the maximum value that the receiver will allow.
(3907) {907336} [907712]: @param value the new maximum, which must be greater than the current minimum @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the minimum value that the receiver will allow.
(3910) {907949} [908445]: @param value the new minimum, which must be nonnegative and less than the current maximum @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the amount that the receiver's value will be modified by when the page increment/decrement areas are selected to the argument, which must be at least one.
(3911) {908447} [908875]: @param pageIncrement the page increment (must be greater than zero) @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the 'selection', which is the receiver's value, to the argument which must be greater than or equal to zero.
(3912) {908877} [909251]: @param value the new selection (must be zero or greater) @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ====== Scrollable.java ====== Copyright (c) 2000, 2015 IBM Corporation and others.
(3923) {911098} [911896]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT#H_SCROLL @see SWT#V_SCROLL @see Widget#checkSubclass @see Widget#getStyle ------------ Given a desired &lt;em&gt;client area&lt;/em&gt; for the receiver (as described by the arguments), returns the bounding rectangle which would be required to produce that client area.
(3925) {912200} [913075]: &lt;/p&gt; @param x the desired x coordinate of the client area @param y the desired y coordinate of the client area @param width the desired width of the client area @param height the desired height of the client area @return the required bounds to produce the given client area @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #getClientArea ------------ @return &lt;li&gt;0 to remove THEME_BACKGROUND&lt;/li&gt; &lt;li&gt;1 to apply THEME_BACKGROUND&lt;/li&gt; &lt;li&gt;otherwise don't change THEME_BACKGROUND state&lt;/li&gt; ------------ Returns a rectangle which describes the area of the receiver which is capable of displaying data (that is, not covered by the "trimmings").
(3926) {913077} [913451]: @return the client area @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #computeTrim ------------ Returns the receiver's horizontal scroll bar if it has one, and null if it does not.
(3927) {913453} [913790]: @return the horizontal scroll bar (or null) @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the mode of the receiver's scrollbars.
(3928) {913791} [914499]: This will be &lt;em&gt;bitwise&lt;/em&gt; OR of one or more of the constants defined in class &lt;code&gt;SWT&lt;/code&gt;.&lt;br&gt; &lt;li&gt;&lt;code&gt;SWT.SCROLLBAR_OVERLAY&lt;/code&gt; - if receiver uses overlay scrollbars&lt;/li&gt; &lt;li&gt;&lt;code&gt;SWT.NONE&lt;/code&gt; - otherwise&lt;/li&gt; @return the mode of scrollbars @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SWT#SCROLLBAR_OVERLAY @since 3.8 ------------ Returns the receiver's vertical scroll bar if it has one, and null if it does not.
(3929) {914501} [914859]: @return the vertical scroll bar (or null) @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ====== ScrollBar.java ====== Copyright (c) 2000, 2013 IBM Corporation and others.
(3950) {919070} [919904]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT#HORIZONTAL @see SWT#VERTICAL @see Widget#checkSubclass @see Widget#getStyle ------------ Adds the listener to the collection of listeners who will be notified when the user changes the receiver's value, by sending it one of the messages defined in the &lt;code&gt;SelectionListener&lt;/code&gt; interface.
(3951) {919905} [920097]: &lt;p&gt; When &lt;code&gt;widgetSelected&lt;/code&gt; is called, the event object detail field contains one of the following values: &lt;code&gt;SWT.NONE&lt;/code&gt; - for the end of a drag.
(3959) {920360} [920421]: &lt;code&gt;widgetDefaultSelected&lt;/code&gt; is not called.
(3960) {920422} [921089]: &lt;/p&gt; @param listener the listener which should be notified when the user changes the receiver's value @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SelectionListener @see #removeSelectionListener @see SelectionEvent ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver is enabled, and &lt;code&gt;false&lt;/code&gt; otherwise.
(3962) {921207} [921625]: @return the receiver's enabled state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #isEnabled ------------ Returns the amount that the receiver's value will be modified by when the up/down (or right/left) arrows are pressed.
(3963) {921627} [921952]: @return the increment @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the maximum value which the receiver will allow.
(3964) {921954} [922277]: @return the maximum @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the minimum value which the receiver will allow.
(3965) {922279} [922664]: @return the minimum @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the amount that the receiver's value will be modified by when the page increment/decrement areas are selected.
(3966) {922666} [922998]: @return the page increment @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's parent, which must be a Scrollable.
(3967) {923000} [923337]: @return the receiver's parent @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the single 'selection' that is the receiver's value.
(3968) {923339} [923655]: @return the selection @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns a point describing the receiver's size.
(3969) {923656} [923716]: The x coordinate of the result is the width of the receiver.
(3970) {923717} [923778]: The y coordinate of the result is the height of the receiver.
(3971) {923780} [924090]: @return the receiver's size @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's thumb value.
(3972) {924092} [924479]: @return the thumb value @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see ScrollBar ------------ Returns a rectangle describing the size and location of the receiver's thumb relative to its parent.
(3973) {924481} [924916]: @return the thumb bounds, relative to the {@link #getParent() parent} @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.6 ------------ Returns a rectangle describing the size and location of the receiver's thumb track relative to its parent.
(3975) {925000} [925446]: @return the thumb track bounds, relative to the {@link #getParent() parent} @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.6 ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver is visible, and &lt;code&gt;false&lt;/code&gt; otherwise.
(3977) {925668} [926126]: &lt;/p&gt; @return the receiver's visibility state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver is enabled and all of the receiver's ancestors are enabled, and &lt;code&gt;false&lt;/code&gt; otherwise.
(3979) {926244} [926704]: @return the receiver's enabled state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #getEnabled ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver is visible and all of the receiver's ancestors are visible and &lt;code&gt;false&lt;/code&gt; otherwise.
(3980) {926706} [927129]: @return the receiver's visibility state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #getVisible ------------ Removes the listener from the collection of listeners who will be notified when the user changes the receiver's value.
(3981) {927131} [927716]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SelectionListener @see #addSelectionListener ------------ Enables the receiver if the argument is &lt;code&gt;true&lt;/code&gt;, and disables it otherwise.
(3983) {927834} [928276]: @param enabled the new enabled state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the amount that the receiver's value will be modified by when the up/down (or right/left) arrows are pressed to the argument, which must be at least one.
(3984) {928278} [928601]: @param value the new increment (must be greater than zero) @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the maximum.
(3987) {928784} [929083]: @param value the new maximum @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the minimum value.
(3990) {929269} [929704]: @param value the new minimum @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the amount that the receiver's value will be modified by when the page increment/decrement areas are selected to the argument, which must be at least one.
(3991) {929706} [930149]: @param value the page increment (must be greater than zero) @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the single &lt;em&gt;selection&lt;/em&gt; that is the receiver's value to the argument which must be greater than or equal to zero.
(3992) {930151} [930480]: @param selection the new selection (must be zero or greater) @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the thumb value.
(3996) {930767} [931246]: &lt;/p&gt; @param value the new thumb value, which must be at least one and not larger than the size of the current range @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's selection, minimum value, maximum value, thumb, increment and page increment all at once.
(3998) {931415} [932025]: &lt;/p&gt; @param selection the new selection value @param minimum the new minimum value @param maximum the new maximum value @param thumb the new thumb value @param increment the new increment value @param pageIncrement the new pageIncrement value @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Marks the receiver as visible if the argument is &lt;code&gt;true&lt;/code&gt;, and marks it invisible otherwise.
(4000) {932204} [932575]: &lt;/p&gt; @param visible the new visibility state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ====== SegmentEvent.java ====== Copyright (c) 2000, 2012 IBM Corporation and others.
(4018) {934847} [935184]: When both fields are set, the rules for the segments field are less restrictive: &lt;ul&gt; &lt;li&gt;elements must be in ascending order, duplicates are allowed &lt;li&gt;elements must not exceed the text length &lt;/ul&gt; &lt;/p&gt; @since 3.8 ====== SegmentListener.java ====== Copyright (c) 2000, 2016s IBM Corporation and others.
(4021) {935629} [935730]: @see SegmentEvent @since 3.8 ------------ This method is called when text content is being modified.
(4022) {935731} [936170]: &lt;p&gt; The following event fields are used:&lt;ul&gt; &lt;li&gt;event.lineText text content (input)&lt;/li&gt; &lt;li&gt;event.segments text offsets for segment characters (output)&lt;/li&gt; &lt;li&gt;event.segmentsChars characters that should be inserted (output, optional)&lt;/li&gt; &lt;/ul&gt; @param event the given event @see SegmentEvent ====== SelectionAdapter.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(4026) {936785} [936990]: &lt;/p&gt; @see SelectionListener @see SelectionEvent @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ Sent when selection occurs in the control.
(4028) {937031} [937155]: @param e an event containing information about the selection ------------ Sent when default selection occurs in the control.
(4034) {937804} [937974]: &lt;/p&gt; @see SelectionListener @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ The item that was selected.
(4040) {939255} [939368]: public int height; The state of the keyboard modifier keys and mouse masks at the time the event was generated.
(4041) {939369} [939497]: &lt;p&gt; &lt;b&gt;Note:&lt;/b&gt; Mouse button states are currently not included consistently for all widgets on all platforms.
(4046) {939997} [940101]: Setting this field to &lt;code&gt;false&lt;/code&gt; will cancel the operation, depending on the widget.
(4049) {940431} [940566]: @return a string representation of the event ====== SelectionListener.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(4053) {941320} [941394]: When selection occurs in a control the appropriate method will be invoked.
(4054) {941395} [941504]: &lt;/p&gt; @see SelectionAdapter @see SelectionEvent ------------ Sent when selection occurs in the control.
(4059) {941833} [941969]: &lt;/p&gt; @param e an event containing information about the selection ------------ Sent when default selection occurs in the control.
(4065) {942549} [942701]: @param c the consumer of the event @return SelectionListener @since 3.106 ====== Shell.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(4068) {943112} [943315]: Instances that do not have a parent (that is, they are built using the constructor, which takes a &lt;code&gt;Display&lt;/code&gt; as the argument) are described as &lt;em&gt;top level&lt;/em&gt; shells.
(4069) {943316} [943434]: Instances that do have a parent are described as &lt;em&gt;secondary&lt;/em&gt; or &lt;em&gt;dialog&lt;/em&gt; shells.
(4074) {944527} [944654]: &lt;/li&gt; &lt;/ul&gt; &lt;/p&gt;&lt;p&gt; The &lt;em&gt;modality&lt;/em&gt; of an instance may be specified using style bits.
(4076) {944759} [944856]: The &lt;code&gt;PRIMARY_MODAL&lt;/code&gt; style allows an instance to block input to its parent.
(4077) {944857} [944980]: The &lt;code&gt;APPLICATION_MODAL&lt;/code&gt; style allows an instance to block input to every other shell in the display.
(4078) {944981} [945131]: The &lt;code&gt;SYSTEM_MODAL&lt;/code&gt; style allows an instance to block input to all shells, including shells belonging to different applications.
(4082) {945646} [945786]: For example, if &lt;code&gt;PRIMARY_MODAL&lt;/code&gt; is not supported, it would be upgraded to &lt;code&gt;APPLICATION_MODAL&lt;/code&gt;.
(4084) {945858} [946066]: For example, most operating systems no longer support &lt;code&gt;SYSTEM_MODAL&lt;/code&gt; because it can freeze up the desktop, so this is typically downgraded to &lt;code&gt;APPLICATION_MODAL&lt;/code&gt;.
(4088) {947692} [947745]: ------------ Constructs a new instance of this class.
(4090) {947825} [948183]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; ------------ Constructs a new instance of this class given only the style value describing its behavior and appearance.
(4095) {948752} [949442]: &lt;/p&gt; @param style the style of control to construct @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT#BORDER @see SWT#CLOSE @see SWT#MIN @see SWT#MAX @see SWT#RESIZE @see SWT#TITLE @see SWT#TOOL @see SWT#NO_TRIM @see SWT#NO_MOVE @see SWT#SHELL_TRIM @see SWT#DIALOG_TRIM @see SWT#ON_TOP @see SWT#MODELESS @see SWT#PRIMARY_MODAL @see SWT#APPLICATION_MODAL @see SWT#SYSTEM_MODAL @see SWT#SHEET ------------ Constructs a new instance of this class given only the display to create it on.
(4100) {949752} [950353]: &lt;b&gt;Passing in null as the display argument is not considered to be good coding style, and may not be supported in a future release of SWT.&lt;/b&gt; &lt;/p&gt; @param display the display to create the shell on @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; ------------ Constructs a new instance of this class given the display to create it on and a style value describing its behavior and appearance.
(4107) {951090} [951968]: &lt;b&gt;Passing in null as the display argument is not considered to be good coding style, and may not be supported in a future release of SWT.&lt;/b&gt; &lt;/p&gt; @param display the display to create the shell on @param style the style of control to construct @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT#BORDER @see SWT#CLOSE @see SWT#MIN @see SWT#MAX @see SWT#RESIZE @see SWT#TITLE @see SWT#TOOL @see SWT#NO_TRIM @see SWT#NO_MOVE @see SWT#SHELL_TRIM @see SWT#DIALOG_TRIM @see SWT#ON_TOP @see SWT#MODELESS @see SWT#PRIMARY_MODAL @see SWT#APPLICATION_MODAL @see SWT#SYSTEM_MODAL @see SWT#SHEET ------------ Constructs a new instance of this class given only its parent.
(4112) {952269} [952991]: &lt;b&gt;Passing in null as the parent is not considered to be good coding style, and may not be supported in a future release of SWT.&lt;/b&gt; &lt;/p&gt; @param parent a shell which will be the parent of the new instance @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the parent is disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; ------------ Constructs a new instance of this class given its parent and a style value describing its behavior and appearance.
(4119) {953718} [954753]: &lt;b&gt;Passing in null as the parent is not considered to be good coding style, and may not be supported in a future release of SWT.&lt;/b&gt; &lt;/p&gt; @param parent a shell which will be the parent of the new instance @param style the style of control to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the parent is disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT#BORDER @see SWT#CLOSE @see SWT#MIN @see SWT#MAX @see SWT#RESIZE @see SWT#TITLE @see SWT#NO_TRIM @see SWT#NO_MOVE @see SWT#SHELL_TRIM @see SWT#DIALOG_TRIM @see SWT#ON_TOP @see SWT#TOOL @see SWT#MODELESS @see SWT#PRIMARY_MODAL @see SWT#APPLICATION_MODAL @see SWT#SYSTEM_MODAL @see SWT#SHEET ------------ Invokes platform specific functionality to allocate a new shell that is embedded.
(4123) {955068} [955301]: &lt;/p&gt; @param display the display for the shell @param handle the handle for the shell @return a new shell object containing the specified display and handle @noreference This method is not intended to be referenced by clients.
(4124) {955302} [955400]: ------------ Invokes platform specific functionality to allocate a new shell that is not embedded.
(4128) {955715} [955948]: &lt;/p&gt; @param display the display for the shell @param handle the handle for the shell @return a new shell object containing the specified display and handle @noreference This method is not intended to be referenced by clients.
(4129) {955950} [956199]: @since 3.3 ------------ Adds the listener to the collection of listeners who will be notified when operations are performed on the receiver, by sending the listener one of the messages defined in the &lt;code&gt;ShellListener&lt;/code&gt; interface.
(4130) {956201} [956911]: @param listener the listener which should be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see ShellListener @see #removeShellListener ------------ Requests that the window manager close the receiver in the same way it would be closed when the user clicks on the "close box" or performs some other platform specific key or mouse combination that indicates the window should be removed.
(4131) {956913} [957459]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SWT#Close @see #dispose ------------ If the receiver is visible, moves it to the top of the drawing order for the display on which it was created (so that all other shells on that display, which are not the receiver's children will be drawn behind it) and forces the window manager to make the shell active.
(4132) {957461} [957930]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 2.0 @see Control#moveAbove @see Control#setFocus @see Control#setVisible @see Display#getActiveShell @see Decorations#setDefaultButton(Button) @see Shell#open @see Shell#setActive ------------ Returns the receiver's alpha value.
(4134) {957993} [958384]: @return the alpha value @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.4 ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver is currently in fullscreen state, and false otherwise.
(4135) {958385} [958732]: &lt;p&gt; @return the fullscreen state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.4 ------------ Returns the receiver's input method editor mode.
(4136) {958733} [959063]: This will be the result of bitwise OR'ing together one or more of the following constants defined in class &lt;code&gt;SWT&lt;/code&gt;: &lt;code&gt;NONE&lt;/code&gt;, &lt;code&gt;ROMAN&lt;/code&gt;, &lt;code&gt;DBCS&lt;/code&gt;, &lt;code&gt;PHONETIC&lt;/code&gt;, &lt;code&gt;NATIVE&lt;/code&gt;, &lt;code&gt;ALPHA&lt;/code&gt;.
(4137) {959065} [959398]: @return the IME mode @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SWT ------------ Returns a point describing the minimum receiver's size.
(4138) {959399} [959467]: The x coordinate of the result is the minimum width of the receiver.
(4139) {959468} [959537]: The y coordinate of the result is the minimum height of the receiver.
(4140) {959539} [959861]: @return the receiver's size @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Gets the receiver's modified state.
(4141) {959863} [960367]: @return &lt;code&gt;true&lt;/code&gt; if the receiver is marked as modified, or &lt;code&gt;false&lt;/code&gt; otherwise @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.5 ------------ Returns the region that defines the shape of the shell, or &lt;code&gt;null&lt;/code&gt; if the shell has the default shape.
(4142) {960369} [960794]: @return the region that defines the shape of the shell, or &lt;code&gt;null&lt;/code&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.0 ------------ Returns an array containing all shells which are descendants of the receiver.
(4143) {960795} [961170]: &lt;p&gt; @return the dialog shells @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns a ToolBar object representing the tool bar that can be shown in the receiver's trim.
(4144) {961171} [961372]: This will return &lt;code&gt;null&lt;/code&gt; if the platform does not support tool bars that are not part of the content area of the shell, or if the Shell's style does not support having a tool bar.
(4145) {961373} [961477]: &lt;p&gt; @return a ToolBar object representing the Shell's tool bar, or &lt;code&gt;null&lt;/code&gt;.
(4146) {961479} [962021]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.7 ------------ Moves the receiver to the top of the drawing order for the display on which it was created (so that all other shells on that display, which are not the receiver's children will be drawn behind it), marks it visible, sets the focus and asks the window manager to make the shell active.
(4147) {962023} [962574]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see Control#moveAbove @see Control#setFocus @see Control#setVisible @see Display#getActiveShell @see Decorations#setDefaultButton(Button) @see Shell#setActive @see Shell#forceActive ------------ Removes the listener from the collection of listeners who will be notified when operations are performed on the receiver.
(4148) {962576} [963846]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see ShellListener @see #addShellListener ------------ If the receiver is visible, moves it to the top of the drawing order for the display on which it was created (so that all other shells on that display, which are not the receiver's children will be drawn behind it) and asks the window manager to make the shell active @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 2.0 @see Control#moveAbove @see Control#setFocus @see Control#setVisible @see Display#getActiveShell @see Decorations#setDefaultButton(Button) @see Shell#open @see Shell#setActive ------------ Sets the receiver's alpha value which must be between 0 (transparent) and 255 (opaque).
(4150) {963977} [964319]: &lt;/p&gt; @param alpha the alpha value @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.4 ------------ Sets the full screen state of the receiver.
(4151) {964320} [964620]: If the argument is &lt;code&gt;true&lt;/code&gt; causes the receiver to switch to the full screen state, and if the argument is &lt;code&gt;false&lt;/code&gt; and the receiver was previously switched into full screen state, causes the receiver to switch back to either the maximized or normal states.
(4152) {964621} [964832]: &lt;p&gt; Note: The result of intermixing calls to &lt;code&gt;setFullScreen(true)&lt;/code&gt;, &lt;code&gt;setMaximized(true)&lt;/code&gt; and &lt;code&gt;setMinimized(true)&lt;/code&gt; will vary by platform.
(4155) {964954} [965651]: &lt;/p&gt; @param fullScreen the new fullscreen state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.4 ------------ Sets the input method editor mode to the argument which should be the result of bitwise OR'ing together one or more of the following constants defined in class &lt;code&gt;SWT&lt;/code&gt;: &lt;code&gt;NONE&lt;/code&gt;, &lt;code&gt;ROMAN&lt;/code&gt;, &lt;code&gt;DBCS&lt;/code&gt;, &lt;code&gt;PHONETIC&lt;/code&gt;, &lt;code&gt;NATIVE&lt;/code&gt;, &lt;code&gt;ALPHA&lt;/code&gt;.
(4156) {965653} [966011]: @param mode the new IME mode @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SWT ------------ Sets the receiver's minimum size to the size specified by the arguments.
(4158) {966135} [966571]: @param width the new minimum width for the receiver @param height the new minimum height for the receiver @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Sets the receiver's minimum size to the size specified by the argument.
(4160) {966695} [967191]: @param size the new minimum size for the receiver @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the point is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Sets the receiver's modified state as specified by the argument.
(4161) {967193} [967588]: @param modified the new modified state for the receiver &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.5 ------------ Sets the shape of the shell to the region specified by the argument.
(4164) {967745} [967805]: &lt;p&gt; NOTE: This method also sets the size of the shell.
(4167) {967948} [968499]: &lt;/p&gt; @param region the region that defines the shape of the shell (or null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the region has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.0 ====== ShellAdapter.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(4171) {969106} [969305]: &lt;/p&gt; @see ShellListener @see ShellEvent @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ Sent when a shell becomes the active window.
(4173) {969346} [969449]: @param e an event containing information about the activation ------------ Sent when a shell is closed.
(4175) {969490} [969608]: @param e an event containing information about the close ------------ Sent when a shell stops being the active window.
(4177) {969649} [969760]: @param e an event containing information about the deactivation ------------ Sent when a shell is un-minimized.
(4179) {969801} [969912]: @param e an event containing information about the un-minimization ------------ Sent when a shell is minimized.
(4184) {970499} [970684]: @see ShellListener @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ A flag indicating whether the operation should be allowed.
(4185) {970685} [970764]: Setting this field to &lt;code&gt;false&lt;/code&gt; will cancel the operation.
(4188) {971094} [971225]: @return a string representation of the event ====== ShellListener.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(4191) {971900} [971976]: When the state of the shell changes, the appropriate method will be invoked.
(4192) {971977} [972080]: &lt;/p&gt; @see ShellAdapter @see ShellEvent ------------ Sent when a shell becomes the active window.
(4193) {972082} [972185]: @param e an event containing information about the activation ------------ Sent when a shell is closed.
(4194) {972187} [972305]: @param e an event containing information about the close ------------ Sent when a shell stops being the active window.
(4195) {972307} [972418]: @param e an event containing information about the deactivation ------------ Sent when a shell is un-minimized.
(4196) {972420} [972531]: @param e an event containing information about the un-minimization ------------ Sent when a shell is minimized.
(4212) {976122} [976956]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT#HORIZONTAL @see SWT#VERTICAL @see Widget#checkSubclass @see Widget#getStyle ------------ Adds the listener to the collection of listeners who will be notified when the user changes the receiver's value, by sending it one of the messages defined in the &lt;code&gt;SelectionListener&lt;/code&gt; interface.
(4213) {976957} [977149]: &lt;p&gt; When &lt;code&gt;widgetSelected&lt;/code&gt; is called, the event object detail field contains one of the following values: &lt;code&gt;SWT.NONE&lt;/code&gt; - for the end of a drag.
(4221) {977412} [977473]: &lt;code&gt;widgetDefaultSelected&lt;/code&gt; is not called.
(4222) {977474} [978147]: &lt;/p&gt; @param listener the listener which should be notified when the user changes the receiver's value @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SelectionListener @see #removeSelectionListener @see SelectionEvent ------------ Returns the amount that the receiver's value will be modified by when the up/down (or right/left) arrows are pressed.
(4223) {978149} [978474]: @return the increment @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the maximum value which the receiver will allow.
(4224) {978476} [978799]: @return the maximum @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the minimum value which the receiver will allow.
(4225) {978801} [979186]: @return the minimum @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the amount that the receiver's value will be modified by when the page increment/decrement areas are selected.
(4226) {979188} [979517]: @return the page increment @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the 'selection', which is the receiver's value.
(4227) {979519} [979823]: @return the selection @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's thumb value.
(4228) {979825} [980214]: @return the thumb value @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Removes the listener from the collection of listeners who will be notified when the user changes the receiver's value.
(4229) {980216} [980862]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SelectionListener @see #addSelectionListener ------------ Sets the amount that the receiver's value will be modified by when the up/down (or right/left) arrows are pressed to the argument, which must be at least one.
(4230) {980864} [981187]: @param value the new increment (must be greater than zero) @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the maximum.
(4233) {981370} [981717]: @param value the new maximum, which must be greater than the current minimum @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the minimum value.
(4236) {981903} [982338]: @param value the new minimum @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the amount that the receiver's value will be modified by when the page increment/decrement areas are selected to the argument, which must be at least one.
(4237) {982340} [982760]: @param value the page increment (must be greater than zero) @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the 'selection', which is the receiver's value, to the argument which must be greater than or equal to zero.
(4238) {982762} [983087]: @param value the new selection (must be zero or greater) @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the thumb value.
(4242) {983374} [983853]: &lt;/p&gt; @param value the new thumb value, which must be at least one and not larger than the size of the current range @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's selection, minimum value, maximum value, thumb, increment and page increment all at once.
(4244) {984022} [984586]: &lt;/p&gt; @param selection the new selection value @param minimum the new minimum value @param maximum the new maximum value @param thumb the new thumb value @param increment the new increment value @param pageIncrement the new pageIncrement value @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ====== Spinner.java ====== Copyright (c) 2000, 2012 IBM Corporation and others.
(4257) {986849} [987669]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT#READ_ONLY @see SWT#WRAP @see Widget#checkSubclass @see Widget#getStyle ------------ Adds the listener to the collection of listeners who will be notified when the receiver's text is modified, by sending it one of the messages defined in the &lt;code&gt;ModifyListener&lt;/code&gt; interface.
(4258) {987671} [988360]: @param listener the listener which should be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see ModifyListener @see #removeModifyListener ------------ Adds the listener to the collection of listeners who will be notified when the control is selected by the user, by sending it one of the messages defined in the &lt;code&gt;SelectionListener&lt;/code&gt; interface.
(4259) {988361} [988435]: &lt;p&gt; &lt;code&gt;widgetSelected&lt;/code&gt; is not called for texts.
(4260) {988436} [988547]: &lt;code&gt;widgetDefaultSelected&lt;/code&gt; is typically called when ENTER is pressed in a single-line text.
(4261) {988548} [989309]: &lt;/p&gt; @param listener the listener which should be notified when the control is selected by the user @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SelectionListener @see #removeSelectionListener @see SelectionEvent ------------ Adds the listener to the collection of listeners who will be notified when the receiver's text is verified, by sending it one of the messages defined in the &lt;code&gt;VerifyListener&lt;/code&gt; interface.
(4262) {989311} [989811]: @param listener the listener which should be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see VerifyListener @see #removeVerifyListener ------------ Copies the selected text.
(4264) {989872} [990153]: &lt;/p&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Cuts the selected text.
(4266) {990253} [990569]: &lt;/p&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the number of decimal places used by the receiver.
(4267) {990571} [990938]: @return the digits @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the amount that the receiver's value will be modified by when the up/down arrows are pressed.
(4268) {990940} [991265]: @return the increment @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the maximum value which the receiver will allow.
(4269) {991267} [991590]: @return the maximum @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the minimum value which the receiver will allow.
(4270) {991592} [991966]: @return the minimum @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the amount that the receiver's position will be modified by when the page up/down keys are pressed.
(4271) {991968} [992319]: @return the page increment @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the &lt;em&gt;selection&lt;/em&gt;, which is the receiver's position.
(4272) {992321} [992715]: @return the selection @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns a string containing a copy of the contents of the receiver's text field, or an empty string if there are no contents.
(4273) {992717} [993098]: @return the receiver's text @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.4 ------------ Returns the maximum number of characters that the receiver's text field is capable of holding.
(4274) {993099} [993235]: If this has not been changed by &lt;code&gt;setTextLimit()&lt;/code&gt;, it will be the constant &lt;code&gt;Spinner.LIMIT&lt;/code&gt;.
(4275) {993237} [993559]: @return the text limit @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #LIMIT @since 3.4 ------------ Pastes text from clipboard.
(4277) {993657} [994027]: &lt;/p&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Removes the listener from the collection of listeners who will be notified when the receiver's text is modified.
(4278) {994029} [994627]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see ModifyListener @see #addModifyListener ------------ Removes the listener from the collection of listeners who will be notified when the control is selected by the user.
(4279) {994629} [995221]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SelectionListener @see #addSelectionListener ------------ Removes the listener from the collection of listeners who will be notified when the control is verified.
(4280) {995223} [995760]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see VerifyListener @see #addVerifyListener ------------ Sets the number of decimal places used by the receiver.
(4281) {995761} [995848]: &lt;p&gt; The digit setting is used to allow for floating point values in the receiver.
(4285) {996136} [996741]: &lt;/p&gt; @param value the new digits (must be greater than or equal to zero) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the value is less than zero&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the amount that the receiver's value will be modified by when the up/down arrows are pressed to the argument, which must be at least one.
(4286) {996743} [997101]: @param value the new increment (must be greater than zero) @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the maximum value that the receiver will allow.
(4289) {997319} [997707]: @param value the new maximum, which must be greater than or equal to the current minimum @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the minimum value that the receiver will allow.
(4292) {997928} [998409]: @param value the new minimum, which must be less than or equal to the current maximum @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the amount that the receiver's position will be modified by when the page up/down keys are pressed to the argument, which must be at least one.
(4293) {998411} [998809]: @param value the page increment (must be greater than zero) @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the &lt;em&gt;selection&lt;/em&gt;, which is the receiver's position, to the argument.
(4295) {998932} [999346]: @param value the new selection (must be zero or greater) @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the maximum number of characters that the receiver's text field is capable of holding to be the argument.
(4296) {999347} [999450]: &lt;p&gt; To reset this value to the default, use &lt;code&gt;setTextLimit(Spinner.LIMIT)&lt;/code&gt;.
(4297) {999451} [999595]: Specifying a limit value larger than &lt;code&gt;Spinner.LIMIT&lt;/code&gt; sets the receiver's limit to &lt;code&gt;Spinner.LIMIT&lt;/code&gt;.
(4298) {999596} [1000141]: &lt;/p&gt; @param limit new text limit @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_CANNOT_BE_ZERO - if the limit is zero&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #LIMIT @since 3.4 ------------ Sets the receiver's selection, minimum value, maximum value, digits, increment and page increment all at once.
(4300) {1000310} [1000884]: &lt;/p&gt; @param selection the new selection value @param minimum the new minimum value @param maximum the new maximum value @param digits the new digits value @param increment the new increment value @param pageIncrement the new pageIncrement value @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.2 ====== SWT.java ====== Copyright (c) 2000, 2015 IBM Corporation and others.
(4305) {1001843} [1002115]: These constants are marked as &lt;em&gt;HINT&lt;/em&gt;s. The set of widgets which support a particular &lt;em&gt;HINT&lt;/em&gt; may change from release to release, although we typically will not withdraw support for a &lt;em&gt;HINT&lt;/em&gt; once it is made available.
(4306) {1002116} [1002269]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ The null event type (value is 0).
(4359) {1019932} [1020439]: &lt;/p&gt; * The detail field indicates the action to be taken: &lt;p&gt;&lt;ul&gt; &lt;li&gt;{@link SWT#COMPOSITION_CHANGED}&lt;/li&gt; &lt;li&gt;{@link SWT#COMPOSITION_OFFSET}&lt;/li&gt; &lt;li&gt;{@link SWT#COMPOSITION_SELECTION}&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @see org.eclipse.swt.widgets.Widget#addListener @see org.eclipse.swt.widgets.Display#addFilter @see org.eclipse.swt.widgets.Event * @since 3.4 public static final int ImeComposition = 43; The orientation change event type (value is 44).
(4361) {1020537} [1020648]: The application can use the &lt;code&gt;doit&lt;/code&gt; field of the event to stop the change from happening.
(4362) {1020649} [1020890]: &lt;/p&gt; * @see org.eclipse.swt.widgets.Widget#addListener @see org.eclipse.swt.widgets.Display#addFilter @see org.eclipse.swt.widgets.Event * @since 3.6 public static final int OrientationChange = 44; The skin event type (value is 45).
(4364) {1020976} [1021261]: &lt;/p&gt; * @see org.eclipse.swt.widgets.Widget#addListener @see org.eclipse.swt.widgets.Display#addFilter @see org.eclipse.swt.widgets.Event @see org.eclipse.swt.widgets.Widget#reskin(int) * @since 3.6 public static final int Skin = 45; The open document event type (value is 46).
(4366) {1021358} [1021548]: &lt;/p&gt; * @see org.eclipse.swt.widgets.Display#addListener @see org.eclipse.swt.widgets.Event @since 3.6 public static final int OpenDocument = 46; The touch event type (value is 47).
(4368) {1021643} [1021828]: &lt;/p&gt; * @see org.eclipse.swt.widgets.Display#addListener @see org.eclipse.swt.widgets.Event @since 3.7 public static final int Touch = 47; The gesture event type (value is 48).
(4370) {1021895} [1022176]: &lt;/p&gt; * @see org.eclipse.swt.widgets.Display#addListener @see org.eclipse.swt.widgets.Event @see SWT#GESTURE_MAGNIFY @see SWT#GESTURE_PAN @see SWT#GESTURE_ROTATE @see SWT#GESTURE_SWIPE @since 3.7 public static final int Gesture = 48; The segments event type (value is 49).
(4372) {1022244} [1022575]: &lt;/p&gt; * @see org.eclipse.swt.widgets.Widget#addListener @see org.eclipse.swt.widgets.Display#addFilter @see org.eclipse.swt.widgets.Event * @see org.eclipse.swt.widgets.Text#addSegmentListener @see org.eclipse.swt.events.SegmentEvent @since 3.8 public static final int Segments = 49; The PreEvent event type (value is 50).
(4374) {1022721} [1022813]: &lt;/p&gt; &lt;p&gt; The detail field of the event contains the type of the following event.
(4375) {1022814} [1022921]: &lt;/p&gt; * @since 3.103 public static final int PreEvent = 50; The PostEvent event type (value is 51).
(4377) {1023066} [1023154]: &lt;/p&gt; &lt;p&gt; The detail field of the event contains the type of the prior event.
(4378) {1023155} [1023278]: &lt;/p&gt; * @since 3.103 public static final int PostEvent = 51; The PreExternalEventDispatch event type (value is 52).
(4380) {1023401} [1023540]: &lt;/p&gt; * @since 3.104 public static final int PreExternalEventDispatch = 52; The PostExternalEventDispatch event type (value is 53).
(4382) {1023662} [1023810]: &lt;/p&gt; * @since 3.104 public static final int PostExternalEventDispatch = 53; @deprecated The same as PreExternalEventDispatch (value is 52).
(4385) {1024152} [1024208]: The text field of the event is the new composition text.
(4412) {1029367} [1029413]: Only the rotation field of the event is valid.
(4423) {1030925} [1031275]: * &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Composite&lt;/code&gt; layout&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @see org.eclipse.swt.widgets.Composite#layout(org.eclipse.swt.widgets.Control[], int) * @since 3.6 public static final int CHANGED = 1 &lt;&lt; 1; A constant indicating that a given operation should be deferred.
(4425) {1031299} [1031701]: * &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Composite&lt;/code&gt; layout&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @see org.eclipse.swt.widgets.Composite#layout(org.eclipse.swt.widgets.Control[], int) * @since 3.6 public static final int DEFER = 1 &lt;&lt; 2; A constant known to be zero (0), typically used in operations which take bit flags to indicate that "no bits are set".
(4426) {1031703} [1031839]: public static final int NONE = 0; A constant known to be zero (0), used in operations which take pointers to indicate a null argument.
(4433) {1032395} [1032632]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Menu&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int BAR = 1 &lt;&lt; 1; Style constant for drop down menu/list behavior (value is 1&lt;&lt;2).
(4434) {1032633} [1033085]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Menu&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;ToolItem&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;CoolItem&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Combo&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int DROP_DOWN = 1 &lt;&lt; 2; Style constant for pop up menu behavior (value is 1&lt;&lt;3).
(4435) {1033086} [1033321]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Menu&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int POP_UP = 1 &lt;&lt; 3; Style constant for line separator behavior (value is 1&lt;&lt;1).
(4436) {1033322} [1033668]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Label&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;MenuItem&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;ToolItem&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int SEPARATOR = 1 &lt;&lt; 1; Constant representing a flexible space separator in a ToolBar.
(4437) {1033669} [1033930]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;ToolItem.setWidth()&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @since 3.7 / public static final int SEPARATOR_FILL = -2; Style constant for toggle button behavior (value is 1&lt;&lt;1).
(4438) {1033931} [1034166]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Button&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int TOGGLE = 1 &lt;&lt; 1; Style constant for arrow button behavior (value is 1&lt;&lt;2).
(4439) {1034167} [1034400]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Button&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int ARROW = 1 &lt;&lt; 2; Style constant for push button behavior (value is 1&lt;&lt;3).
(4440) {1034401} [1034744]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Button&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;MenuItem&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;ToolItem&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int PUSH = 1 &lt;&lt; 3; Style constant for radio button behavior (value is 1&lt;&lt;4).
(4441) {1034745} [1035086]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Button&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;MenuItem&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;ToolItem&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int RADIO = 1 &lt;&lt; 4; Style constant for check box behavior (value is 1&lt;&lt;5).
(4442) {1035087} [1035529]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Button&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;MenuItem&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;ToolItem&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Table&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Tree&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int CHECK = 1 &lt;&lt; 5; Style constant for cascade behavior (value is 1&lt;&lt;6).
(4443) {1035530} [1035821]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;MenuItem&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int CASCADE = 1 &lt;&lt; 6; Style constant for multi-selection behavior in lists and multiple line support on text fields (value is 1&lt;&lt;1).
(4444) {1035822} [1036317]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;List&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Table&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Tree&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;FileDialog&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int MULTI = 1 &lt;&lt; 1; Style constant for single selection behavior in lists and single line support on text fields (value is 1&lt;&lt;2).
(4445) {1036318} [1036702]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;List&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Table&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Tree&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int SINGLE = 1 &lt;&lt; 2; Style constant for read-only behavior (value is 1&lt;&lt;3).
(4446) {1036703} [1036998]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Combo&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int READ_ONLY = 1 &lt;&lt; 3; Style constant for automatic line wrap behavior (value is 1&lt;&lt;6).
(4447) {1036999} [1037437]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Button&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Label&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;ToolBar&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Spinner&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int WRAP = 1 &lt;&lt; 6; Style constant for search behavior (value is 1&lt;&lt;7).
(4448) {1037438} [1037694]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @since 3.3 public static final int SEARCH = 1 &lt;&lt; 7; Style constant for simple (not drop down) behavior (value is 1&lt;&lt;6).
(4449) {1037695} [1037751]: &lt;br&gt;Note that this is a &lt;em&gt;HINT&lt;/em&gt;.
(4450) {1037752} [1037983]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Combo&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int SIMPLE = 1 &lt;&lt; 6; Style constant for password behavior (value is 1&lt;&lt;22).
(4451) {1037984} [1038230]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @since 3.0 public static final int PASSWORD = 1 &lt;&lt; 22; Style constant for shadow in behavior (value is 1&lt;&lt;2).
(4452) {1038231} [1038287]: &lt;br&gt;Note that this is a &lt;em&gt;HINT&lt;/em&gt;.
(4453) {1038288} [1038575]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Label&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Group&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int SHADOW_IN = 1 &lt;&lt; 2; Style constant for shadow out behavior (value is 1&lt;&lt;3).
(4454) {1038576} [1038632]: &lt;br&gt;Note that this is a &lt;em&gt;HINT&lt;/em&gt;.
(4455) {1038633} [1038981]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Label&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Group&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;ToolBar&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int SHADOW_OUT = 1 &lt;&lt; 3; Style constant for shadow etched in behavior (value is 1&lt;&lt;4).
(4456) {1038982} [1039038]: &lt;br&gt;Note that this is a &lt;em&gt;HINT&lt;/em&gt;.
(4458) {1039081} [1039330]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Group&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int SHADOW_ETCHED_IN = 1 &lt;&lt; 4; Style constant for shadow etched out behavior (value is 1&lt;&lt;6).
(4459) {1039331} [1039387]: &lt;br&gt;Note that this is a &lt;em&gt;HINT&lt;/em&gt;.
(4461) {1039430} [1039672]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Group&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int SHADOW_ETCHED_OUT = 1 &lt;&lt; 6; Style constant for no shadow behavior (value is 1&lt;&lt;5).
(4462) {1039673} [1039729]: &lt;br&gt;Note that this is a &lt;em&gt;HINT&lt;/em&gt;.
(4463) {1039730} [1040021]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Label&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Group&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int SHADOW_NONE = 1 &lt;&lt; 5; Style constant for progress bar behavior (value is 1&lt;&lt;1).
(4464) {1040022} [1040268]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;ProgressBar&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int INDETERMINATE = 1 &lt;&lt; 1; Style constant for tool window behavior (value is 1&lt;&lt;2).
(4465) {1040269} [1040347]: &lt;p&gt; A tool window is a window intended to be used as a floating toolbar.
(4467) {1040480} [1040536]: &lt;br&gt;Note that this is a &lt;em&gt;HINT&lt;/em&gt;.
(4468) {1040537} [1040806]: &lt;/p&gt;&lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Decorations&lt;/code&gt; and subclasses&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int TOOL = 1 &lt;&lt; 2; Style constant to ensure no trimmings are used (value is 1&lt;&lt;3).
(4469) {1040807} [1040864]: &lt;br&gt;Note that this overrides all other trim styles.
(4470) {1040865} [1041115]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Decorations&lt;/code&gt; and subclasses&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int NO_TRIM = 1 &lt;&lt; 3; Style constant for resize box trim (value is 1&lt;&lt;4).
(4471) {1041116} [1041419]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Decorations&lt;/code&gt; and subclasses&lt;/li&gt; &lt;li&gt;&lt;code&gt;Tracker&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int RESIZE = 1 &lt;&lt; 4; Style constant for title area trim (value is 1&lt;&lt;5).
(4472) {1041420} [1041731]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Decorations&lt;/code&gt; and subclasses&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int TITLE = 1 &lt;&lt; 5; Style constant for close box trim (value is 1&lt;&lt;6, since we do not distinguish between CLOSE style and MENU style).
(4473) {1041732} [1042044]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Decorations&lt;/code&gt; and subclasses&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int CLOSE = 1 &lt;&lt; 6; Style constant for shell menu trim (value is 1&lt;&lt;6, since we do not distinguish between CLOSE style and MENU style).
(4474) {1042045} [1042287]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Decorations&lt;/code&gt; and subclasses&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int MENU = CLOSE; Style constant for minimize box trim (value is 1&lt;&lt;7).
(4475) {1042288} [1042537]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Decorations&lt;/code&gt; and subclasses&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int MIN = 1 &lt;&lt; 7; Style constant for maximize box trim (value is 1&lt;&lt;10).
(4476) {1042538} [1042791]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Decorations&lt;/code&gt; and subclasses&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int MAX = 1 &lt;&lt; 10; Style constant for the no move behavior (value is 1&lt;&lt;23).
(4479) {1042911} [1042966]: &lt;p&gt;Note that this is a &lt;em&gt;HINT&lt;/em&gt;.
(4480) {1042967} [1043224]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Shell&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; @since 3.105 public static final int NO_MOVE = 1 &lt;&lt; 23; Style constant for horizontal scrollbar behavior (value is 1&lt;&lt;8).
(4481) {1043225} [1043487]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Scrollable&lt;/code&gt; and subclasses&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int H_SCROLL = 1 &lt;&lt; 8; Style constant for vertical scrollbar behavior (value is 1&lt;&lt;9).
(4482) {1043488} [1043744]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Scrollable&lt;/code&gt; and subclasses&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int V_SCROLL = 1 &lt;&lt; 9; Style constant for no scrollbar behavior (value is 1&lt;&lt;4).
(4485) {1043958} [1044249]: * &lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Tree&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Table&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @since 3.4 public static final int NO_SCROLL = 1 &lt;&lt; 4; Style constant for bordered behavior (value is 1&lt;&lt;11).
(4486) {1044250} [1044306]: &lt;br&gt;Note that this is a &lt;em&gt;HINT&lt;/em&gt;.
(4487) {1044307} [1044612]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Control&lt;/code&gt; and subclasses&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int BORDER = 1 &lt;&lt; 11; Style constant indicating that the window manager should clip a widget's children with respect to its viewable area.
(4488) {1044613} [1044636]: (value is 1&lt;&lt;12).
(4489) {1044637} [1044693]: &lt;br&gt;Note that this is a &lt;em&gt;HINT&lt;/em&gt;.
(4490) {1044694} [1045006]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Control&lt;/code&gt; and subclasses&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int CLIP_CHILDREN = 1 &lt;&lt; 12; Style constant indicating that the window manager should clip a widget's siblings with respect to its viewable area.
(4491) {1045007} [1045030]: (value is 1&lt;&lt;13).
(4492) {1045031} [1045087]: &lt;br&gt;Note that this is a &lt;em&gt;HINT&lt;/em&gt;.
(4493) {1045088} [1045349]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Control&lt;/code&gt; and subclasses&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int CLIP_SIBLINGS = 1 &lt;&lt; 13; Style constant for always on top behavior (value is 1&lt;&lt;14).
(4494) {1045350} [1045406]: &lt;br&gt;Note that this is a &lt;em&gt;HINT&lt;/em&gt;.
(4495) {1045407} [1045658]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Shell&lt;/code&gt; and subclasses&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int ON_TOP = 1 &lt;&lt; 14; Style constant for sheet window behavior (value is 1&lt;&lt;28).
(4496) {1045659} [1045780]: &lt;p&gt; A sheet window is a window intended to be used as a temporary modal dialog that is attached to a parent window.
(4500) {1046034} [1046090]: &lt;br&gt;Note that this is a &lt;em&gt;HINT&lt;/em&gt;.
(4501) {1046091} [1046485]: &lt;/p&gt;&lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Dialog&lt;/code&gt; and subclasses&lt;/li&gt; &lt;li&gt;&lt;code&gt;Shell&lt;/code&gt; and subclasses&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @since 3.5 public static final int SHEET = 1 &lt;&lt; 28; Trim style convenience constant for the most common top level shell appearance (value is CLOSE|TITLE|MIN|MAX|RESIZE).
(4502) {1046486} [1046789]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Shell&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int SHELL_TRIM = CLOSE | TITLE | MIN | MAX | RESIZE; Trim style convenience constant for the most common dialog shell appearance (value is CLOSE|TITLE|BORDER).
(4503) {1046790} [1047026]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Shell&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int DIALOG_TRIM = TITLE | CLOSE | BORDER; Style constant for modeless behavior (value is 0).
(4504) {1047027} [1047083]: &lt;br&gt;Note that this is a &lt;em&gt;HINT&lt;/em&gt;.
(4505) {1047084} [1047364]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Dialog&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Shell&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int MODELESS = 0; Style constant for primary modal behavior (value is 1&lt;&lt;15).
(4506) {1047365} [1047421]: &lt;br&gt;Note that this is a &lt;em&gt;HINT&lt;/em&gt;.
(4507) {1047422} [1047723]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Dialog&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Shell&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int PRIMARY_MODAL = 1 &lt;&lt; 15; Style constant for application modal behavior (value is 1&lt;&lt;16).
(4508) {1047724} [1047780]: &lt;br&gt;Note that this is a &lt;em&gt;HINT&lt;/em&gt;.
(4509) {1047781} [1048081]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Dialog&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Shell&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int APPLICATION_MODAL = 1 &lt;&lt; 16; Style constant for system modal behavior (value is 1&lt;&lt;17).
(4510) {1048082} [1048138]: &lt;br&gt;Note that this is a &lt;em&gt;HINT&lt;/em&gt;.
(4511) {1048139} [1048466]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Dialog&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Shell&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int SYSTEM_MODAL = 1 &lt;&lt; 17; Style constant for selection hiding behavior when the widget loses focus (value is 1&lt;&lt;15).
(4512) {1048467} [1048523]: &lt;br&gt;Note that this is a &lt;em&gt;HINT&lt;/em&gt;.
(4513) {1048524} [1048818]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Table&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int HIDE_SELECTION = 1 &lt;&lt; 15; Style constant for full row selection behavior and selection constant indicating that a full line should be drawn.
(4514) {1048819} [1048842]: (value is 1&lt;&lt;16).
(4515) {1048843} [1048916]: &lt;br&gt;Note that for some widgets this is a &lt;em&gt;HINT&lt;/em&gt;.
(4516) {1048917} [1049297]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Table&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Tree&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;StyledText&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TextLayout&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int FULL_SELECTION = 1 &lt;&lt; 16; Style constant for flat appearance.
(4517) {1049298} [1049321]: (value is 1&lt;&lt;23).
(4518) {1049322} [1049378]: &lt;br&gt;Note that this is a &lt;em&gt;HINT&lt;/em&gt;.
(4519) {1049379} [1049641]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Button&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;ToolBar&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int FLAT = 1 &lt;&lt; 23; Style constant for smooth appearance.
(4520) {1049642} [1049665]: (value is 1&lt;&lt;16).
(4521) {1049666} [1049722]: &lt;br&gt;Note that this is a &lt;em&gt;HINT&lt;/em&gt;.
(4522) {1049723} [1050017]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;ProgressBar&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Sash&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int SMOOTH = 1 &lt;&lt; 16; Style constant for no background behavior (value is 1&lt;&lt;18).
(4527) {1050441} [1050709]: &lt;/p&gt;&lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Composite&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int NO_BACKGROUND = 1 &lt;&lt; 18; Style constant for no focus from the mouse behavior (value is 1&lt;&lt;19).
(4531) {1051062} [1051120]: * &lt;br&gt;Note that this is a &lt;em&gt;HINT&lt;/em&gt;.
(4532) {1051121} [1051381]: &lt;/p&gt; &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Composite&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int NO_FOCUS = 1 &lt;&lt; 19; Style constant for no redraw on resize behavior (value is 1&lt;&lt;20).
(4537) {1051746} [1051804]: * &lt;br&gt;Note that this is a &lt;em&gt;HINT&lt;/em&gt;.
(4538) {1051805} [1052075]: &lt;/p&gt;&lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Composite&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int NO_REDRAW_RESIZE = 1 &lt;&lt; 20; Style constant for no paint event merging behavior (value is 1&lt;&lt;21).
(4539) {1052076} [1052134]: * &lt;br&gt;Note that this is a &lt;em&gt;HINT&lt;/em&gt;.
(4540) {1052135} [1052400]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Composite&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int NO_MERGE_PAINTS = 1 &lt;&lt; 21; Style constant for preventing child radio group behavior (value is 1&lt;&lt;22).
(4541) {1052401} [1052704]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Composite&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Menu&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int NO_RADIO_GROUP = 1 &lt;&lt; 22; Style constant for left to right orientation (value is 1&lt;&lt;25).
(4545) {1053000} [1053056]: &lt;br&gt;Note that this is a &lt;em&gt;HINT&lt;/em&gt;.
(4546) {1053057} [1053432]: &lt;/p&gt; &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Control&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Menu&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;GC&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @since 2.1.2 public static final int LEFT_TO_RIGHT = 1 &lt;&lt; 25; Style constant for right to left orientation (value is 1&lt;&lt;26).
(4550) {1053728} [1053784]: &lt;br&gt;Note that this is a &lt;em&gt;HINT&lt;/em&gt;.
(4551) {1053785} [1054163]: &lt;/p&gt; &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Control&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Menu&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;GC&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @since 2.1.2 public static final int RIGHT_TO_LEFT = 1 &lt;&lt; 26; Style constant to indicate coordinate mirroring (value is 1&lt;&lt;27).
(4552) {1054164} [1054463]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Control&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Menu&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @since 2.1.2 public static final int MIRRORED = 1 &lt;&lt; 27; Style constant to allow embedding (value is 1&lt;&lt;24).
(4553) {1054464} [1054715]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Composite&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @since 3.0 public static final int EMBEDDED = 1 &lt;&lt; 24; Style constant to allow virtual data (value is 1&lt;&lt;28).
(4554) {1054716} [1055020]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Table&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Tree&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @since 3.0 public static final int VIRTUAL = 1 &lt;&lt; 28; Style constant to indicate double buffering (value is 1&lt;&lt;29).
(4555) {1055021} [1055280]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Control&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @since 3.1 public static final int DOUBLE_BUFFERED = 1 &lt;&lt; 29; Style constant for transparent behavior (value is 1&lt;&lt;30).
(4558) {1055490} [1055829]: &lt;/p&gt;&lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Composite&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @since 3.4 * WARNING: THIS API IS UNDER CONSTRUCTION AND SHOULD NOT BE USED public static final int TRANSPARENT = 1 &lt;&lt; 30; Style constant to indicate base text direction (value is 1&lt;&lt;31).
(4559) {1055830} [1055910]: &lt;p&gt; When the bit is set, text direction mismatches the widget orientation.
(4560) {1055911} [1055967]: &lt;br&gt;Note that this is a &lt;em&gt;HINT&lt;/em&gt;.
(4561) {1055968} [1056348]: &lt;/p&gt; &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Control&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @see org.eclipse.swt.widgets.Control#setTextDirection(int) @see org.eclipse.swt.widgets.Control#getTextDirection() * @since 3.102 public static final int FLIP_TEXT_DIRECTION = 1 &lt;&lt; 31; A bit mask to indicate Bidi "auto" text direction.
(4562) {1056349} [1056460]: &lt;p&gt; When the bit is set, text direction is derived from the direction of the first strong Bidi character.
(4563) {1056461} [1056557]: &lt;/p&gt; &lt;br&gt;Note that this is a &lt;em&gt;HINT&lt;/em&gt; and it works on Windows only.
(4564) {1056558} [1057078]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Control&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TextLayout&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @see org.eclipse.swt.widgets.Control#setTextDirection(int) @see org.eclipse.swt.graphics.TextLayout#setTextDirection(int) * @since 3.105 public static final int AUTO_TEXT_DIRECTION = SWT.LEFT_TO_RIGHT | SWT.RIGHT_TO_LEFT; Style constant for align up behavior (value is 1&lt;&lt;7, since align UP and align TOP are considered the same).
(4565) {1057079} [1057503]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Button&lt;/code&gt; with &lt;code&gt;ARROW&lt;/code&gt; style&lt;/li&gt; &lt;li&gt;&lt;code&gt;Tracker&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Table&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Tree&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int UP = 1 &lt;&lt; 7; Style constant to indicate single underline (value is 0).
(4566) {1057504} [1057748]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;TextStyle&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @since 3.4 public static final int UNDERLINE_SINGLE = 0; Style constant to indicate double underline (value is 1).
(4567) {1057749} [1057992]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;TextStyle&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @since 3.4 public static final int UNDERLINE_DOUBLE = 1; Style constant to indicate error underline (value is 2).
(4568) {1057993} [1058238]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;TextStyle&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @since 3.4 public static final int UNDERLINE_ERROR = 2; Style constant to indicate squiggle underline (value is 3).
(4569) {1058239} [1058483]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;TextStyle&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @since 3.4 public static final int UNDERLINE_SQUIGGLE = 3; Style constant to indicate link underline (value is 0).
(4571) {1058884} [1059133]: &lt;/p&gt; &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;TextStyle&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @since 3.5 public static final int UNDERLINE_LINK = 4; Style constant to indicate solid border (value is 1).
(4572) {1059134} [1059371]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;TextStyle&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @since 3.4 public static final int BORDER_SOLID = 1; Style constant to indicate dashed border (value is 2).
(4573) {1059372} [1059608]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;TextStyle&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @since 3.4 public static final int BORDER_DASH = 2; Style constant to indicate dotted border (value is 4).
(4574) {1059609} [1059904]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;TextStyle&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @since 3.4 public static final int BORDER_DOT = 4; Style constant for align top behavior (value is 1&lt;&lt;7, since align UP and align TOP are considered the same).
(4575) {1059905} [1060234]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;FormAttachment&lt;/code&gt; in a &lt;code&gt;FormLayout&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int TOP = UP; Style constant for align down behavior (value is 1&lt;&lt;10, since align DOWN and align BOTTOM are considered the same).
(4576) {1060235} [1060742]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Button&lt;/code&gt; with &lt;code&gt;ARROW&lt;/code&gt; style&lt;/li&gt; &lt;li&gt;&lt;code&gt;Tracker&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Table&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Tree&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int DOWN = 1 &lt;&lt; 10; Style constant for align bottom behavior (value is 1&lt;&lt;10, since align DOWN and align BOTTOM are considered the same).
(4577) {1060743} [1061084]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;FormAttachment&lt;/code&gt; in a &lt;code&gt;FormLayout&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TabFolder&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int BOTTOM = DOWN; Style constant for leading alignment (value is 1&lt;&lt;14).
(4578) {1061085} [1061721]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Button&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Label&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TableColumn&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TreeColumn&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Tracker&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;FormAttachment&lt;/code&gt; in a &lt;code&gt;FormLayout&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @since 2.1.2 public static final int LEAD = 1 &lt;&lt; 14; Style constant for align left behavior (value is 1&lt;&lt;14).
(4579) {1061722} [1061781]: This is a synonym for {@link #LEAD} (value is 1&lt;&lt;14).
(4582) {1062017} [1062143]: &lt;/p&gt; public static final int LEFT = LEAD; Style constant for trailing alignment (value is 1&lt;&lt;17).
(4583) {1062144} [1062781]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Button&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Label&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TableColumn&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TreeColumn&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Tracker&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;FormAttachment&lt;/code&gt; in a &lt;code&gt;FormLayout&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @since 2.1.2 public static final int TRAIL = 1 &lt;&lt; 17; Style constant for align right behavior (value is 1&lt;&lt;17).
(4584) {1062782} [1062842]: This is a synonym for {@link #TRAIL} (value is 1&lt;&lt;17).
(4587) {1063081} [1063211]: &lt;/p&gt; public static final int RIGHT = TRAIL; Style constant for align center behavior (value is 1&lt;&lt;24).
(4588) {1063212} [1063683]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Button&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Label&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TableColumn&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;FormAttachment&lt;/code&gt; in a &lt;code&gt;FormLayout&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int CENTER = 1 &lt;&lt; 24; Style constant for horizontal alignment or orientation behavior (value is 1&lt;&lt;8).
(4589) {1063684} [1064390]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Label&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;ProgressBar&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Sash&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Scale&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;ScrollBar&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Slider&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;ToolBar&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;FillLayout&lt;/code&gt; type&lt;/li&gt; &lt;li&gt;&lt;code&gt;RowLayout&lt;/code&gt; type&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int HORIZONTAL = 1 &lt;&lt; 8; Style constant for vertical alignment or orientation behavior (value is 1&lt;&lt;9).
(4590) {1064391} [1065119]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Label&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;ProgressBar&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Sash&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Scale&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;ScrollBar&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Slider&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;ToolBar&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;CoolBar&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;FillLayout&lt;/code&gt; type&lt;/li&gt; &lt;li&gt;&lt;code&gt;RowLayout&lt;/code&gt; type&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int VERTICAL = 1 &lt;&lt; 9; Style constant for date display (value is 1&lt;&lt;5).
(4591) {1065120} [1065359]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @since 3.3 public static final int DATE = 1 &lt;&lt; 5; Style constant for time display (value is 1&lt;&lt;7).
(4592) {1065360} [1065604]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @since 3.3 public static final int TIME = 1 &lt;&lt; 7; Style constant for calendar display (value is 1&lt;&lt;10).
(4593) {1065605} [1065860]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @since 3.3 public static final int CALENDAR = 1 &lt;&lt; 10; Style constant for short date/time format (value is 1&lt;&lt;15).
(4596) {1065954} [1066010]: &lt;br&gt;Note that this is a &lt;em&gt;HINT&lt;/em&gt;.
(4597) {1066011} [1066275]: &lt;/p&gt; &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @since 3.3 public static final int SHORT = 1 &lt;&lt; 15; Style constant for medium date/time format (value is 1&lt;&lt;16).
(4600) {1066386} [1066442]: &lt;br&gt;Note that this is a &lt;em&gt;HINT&lt;/em&gt;.
(4601) {1066443} [1066706]: &lt;/p&gt; &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @since 3.3 public static final int MEDIUM = 1 &lt;&lt; 16; Style constant for long date/time format (value is 1&lt;&lt;28).
(4605) {1066855} [1066911]: &lt;br&gt;Note that this is a &lt;em&gt;HINT&lt;/em&gt;.
(4606) {1066912} [1067224]: &lt;/p&gt; &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @since 3.3 public static final int LONG = 1 &lt;&lt; 28; Style constant specifying that a Browser should use a Mozilla GRE for rendering its content (value is 1&lt;&lt;15).
(4607) {1067225} [1067531]: &lt;p&gt; &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Browser&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @since 3.3 public static final int MOZILLA = 1 &lt;&lt; 15; Style constant specifying that a Browser should use WebKit for rendering its content (value is 1&lt;&lt;16).
(4608) {1067532} [1067788]: &lt;p&gt; &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Browser&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @since 3.7 public static final int WEBKIT = 1 &lt;&lt; 16; Style constant for balloon behavior (value is 1&lt;&lt;12).
(4609) {1067789} [1068052]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;ToolTip&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @since 3.2 public static final int BALLOON = 1 &lt;&lt; 12; Style constant for vertical alignment or orientation behavior (value is 1).
(4610) {1068053} [1068301]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;GridLayout&lt;/code&gt; type&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int BEGINNING = 1; Style constant for vertical alignment or orientation behavior (value is 4).
(4611) {1068302} [1068558]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;GridLayout&lt;/code&gt; type&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int FILL = 4; Input Method Editor style constant for double byte input behavior (value is 1&lt;&lt;1).
(4612) {1068560} [1068689]: public static final int DBCS = 1 &lt;&lt; 1; Input Method Editor style constant for alpha input behavior (value is 1&lt;&lt;2).
(4613) {1068691} [1068822]: public static final int ALPHA = 1 &lt;&lt; 2; Input Method Editor style constant for native input behavior (value is 1&lt;&lt;3).
(4614) {1068824} [1068958]: public static final int NATIVE = 1 &lt;&lt; 3; Input Method Editor style constant for phonetic input behavior (value is 1&lt;&lt;4).
(4615) {1068960} [1069099]: public static final int PHONETIC = 1 &lt;&lt; 4; Input Method Editor style constant for romanicized input behavior (value is 1&lt;&lt;5).
(4616) {1069101} [1069264]: public static final int ROMAN = 1 &lt;&lt; 5; ASCII character convenience constant for the backspace character (value is the &lt;code&gt;char&lt;/code&gt; '\b').
(4617) {1069266} [1069425]: public static final char BS = '\b'; ASCII character convenience constant for the carriage return character (value is the &lt;code&gt;char&lt;/code&gt; '\r').
(4618) {1069427} [1069587]: public static final char CR = '\r'; ASCII character convenience constant for the delete character (value is the &lt;code&gt;char&lt;/code&gt; with value 127).
(4619) {1069589} [1069749]: public static final char DEL = 0x7F; ASCII character convenience constant for the escape character (value is the &lt;code&gt;char&lt;/code&gt; with value 27).
(4620) {1069751} [1069905]: public static final char ESC = 0x1B; ASCII character convenience constant for the line feed character (value is the &lt;code&gt;char&lt;/code&gt; '\n').
(4621) {1069907} [1070054]: public static final char LF = '\n'; ASCII character convenience constant for the tab character (value is the &lt;code&gt;char&lt;/code&gt; '\t').
(4622) {1070055} [1070218]: * @since 2.1 public static final char TAB = '\t'; ASCII character convenience constant for the space character (value is the &lt;code&gt;char&lt;/code&gt; ' ').
(4627) {1070965} [1071015]: This is a synonym for CTRL (value is 1&lt;&lt;18).
(4632) {1071617} [1071685]: * &lt;code&gt;(stateMask &amp; SWT.MODIFIER_MASK) != 0&lt;/code&gt;.
(4634) {1071865} [1071888]: (value is 1&lt;&lt;19).
(4636) {1072067} [1072090]: (value is 1&lt;&lt;20).
(4638) {1072270} [1072293]: (value is 1&lt;&lt;21).
(4640) {1072454} [1072477]: (value is 1&lt;&lt;23).
(4642) {1072651} [1072674]: (value is 1&lt;&lt;25).
(4646) {1073075} [1073141]: * &lt;code&gt;(stateMask &amp; SWT.BUTTON_MASK) != 0&lt;/code&gt;.
(4657) {1074185} [1074292]: &lt;/p&gt; * @since 2.1 public static final int MOD4; Constants to indicate line scrolling (value is 1).
(4658) {1074293} [1074523]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Control&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @since 3.1 public static final int SCROLL_LINE = 1; Constants to indicate page scrolling (value is 2).
(4659) {1074524} [1074783]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Control&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @since 3.1 public static final int SCROLL_PAGE = 2; Accelerator constant used to differentiate a key code from a unicode character.
(4662) {1074970} [1075091]: * The following expression is false: * &lt;code&gt;((SWT.MOD1 | SWT.MOD2 | 'T') &amp; SWT.KEYCODE_BIT) != 0&lt;/code&gt;.
(4663) {1075092} [1075204]: * The following expression is true: * &lt;code&gt;((SWT.MOD3 | SWT.F2) &amp; SWT.KEYCODE_BIT) != 0&lt;/code&gt;.
(4664) {1075205} [1075381]: * (value is (1&lt;&lt;24)) * @since 2.1 public static final int KEYCODE_BIT = (1 &lt;&lt; 24); Accelerator constant used to extract the key stroke portion of an accelerator.
(4666) {1075438} [1075519]: If the key stroke is a key code &lt;code&gt;KEYCODE_BIT&lt;/code&gt; will be set.
(4697) {1079542} [1079564]: (value is 1&lt;&lt;1).
(4725) {1083654} [1083819]: * @since 3.0 public static final int PRINT_SCREEN = KEYCODE_BIT + 87; The &lt;code&gt;MessageBox&lt;/code&gt; style constant for error icon behavior (value is 1).
(4726) {1083821} [1083970]: public static final int ICON_ERROR = 1; The &lt;code&gt;MessageBox&lt;/code&gt; style constant for information icon behavior (value is 1&lt;&lt;1).
(4727) {1083972} [1084135]: public static final int ICON_INFORMATION = 1 &lt;&lt; 1; The &lt;code&gt;MessageBox&lt;/code&gt; style constant for question icon behavior (value is 1&lt;&lt;2).
(4728) {1084137} [1084296]: public static final int ICON_QUESTION = 1 &lt;&lt; 2; The &lt;code&gt;MessageBox&lt;/code&gt; style constant for warning icon behavior (value is 1&lt;&lt;3).
(4729) {1084298} [1084458]: public static final int ICON_WARNING = 1 &lt;&lt; 3; The &lt;code&gt;MessageBox&lt;/code&gt; style constant for "working" icon behavior (value is 1&lt;&lt;4).
(4730) {1084460} [1084552]: public static final int ICON_WORKING = 1 &lt;&lt; 4; The style constant for "search" icon.
(4731) {1084553} [1084695]: This style constant is used with &lt;code&gt;Text&lt;/code&gt; in combination with &lt;code&gt;SWT.SEARCH &lt;/code&gt; (value is 1&lt;&lt;9).
(4732) {1084696} [1084752]: &lt;br&gt;Note that this is a &lt;em&gt;HINT&lt;/em&gt;.
(4733) {1084753} [1085013]: * &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @see #SEARCH @see #ICON_CANCEL * @since 3.5 public static final int ICON_SEARCH = 1 &lt;&lt; 9; The style constant for "cancel" icon.
(4734) {1085014} [1085156]: This style constant is used with &lt;code&gt;Text&lt;/code&gt; in combination with &lt;code&gt;SWT.SEARCH &lt;/code&gt; (value is 1&lt;&lt;8).
(4735) {1085157} [1085213]: &lt;br&gt;Note that this is a &lt;em&gt;HINT&lt;/em&gt;.
(4736) {1085214} [1085569]: * &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @see #SEARCH @see #ICON_SEARCH * @since 3.5 public static final int ICON_CANCEL = 1 &lt;&lt; 8; The &lt;code&gt;MessageBox&lt;/code&gt; style constant for an OK button; valid combinations are OK, OK|CANCEL (value is 1&lt;&lt;5).
(4737) {1085571} [1085754]: public static final int OK = 1 &lt;&lt; 5; The &lt;code&gt;MessageBox&lt;/code&gt; style constant for YES button; valid combinations are YES|NO, YES|NO|CANCEL (value is 1&lt;&lt;6).
(4738) {1085756} [1085939]: public static final int YES = 1 &lt;&lt; 6; The &lt;code&gt;MessageBox&lt;/code&gt; style constant for NO button; valid combinations are YES|NO, YES|NO|CANCEL (value is 1&lt;&lt;7).
(4739) {1085941} [1086146]: public static final int NO = 1 &lt;&lt; 7; The &lt;code&gt;MessageBox&lt;/code&gt; style constant for a CANCEL button; valid combinations are OK|CANCEL, YES|NO|CANCEL, RETRY|CANCEL (value is 1&lt;&lt;8).
(4740) {1086147} [1086472]: * &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;MessageBox&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int CANCEL = 1 &lt;&lt; 8; The &lt;code&gt;MessageBox&lt;/code&gt; style constant for an ABORT button; the only valid combination is ABORT|RETRY|IGNORE (value is 1&lt;&lt;9).
(4741) {1086474} [1086677]: public static final int ABORT = 1 &lt;&lt; 9; The &lt;code&gt;MessageBox&lt;/code&gt; style constant for a RETRY button; valid combinations are ABORT|RETRY|IGNORE, RETRY|CANCEL (value is 1&lt;&lt;10).
(4742) {1086679} [1086877]: public static final int RETRY = 1 &lt;&lt; 10; The &lt;code&gt;MessageBox&lt;/code&gt; style constant for an IGNORE button; the only valid combination is ABORT|RETRY|IGNORE (value is 1&lt;&lt;11).
(4743) {1086879} [1087037]: public static final int IGNORE = 1 &lt;&lt; 11; The &lt;code&gt;FileDialog&lt;/code&gt; style constant for open file dialog behavior (value is 1&lt;&lt;12).
(4744) {1087039} [1087195]: public static final int OPEN = 1 &lt;&lt; 12; The &lt;code&gt;FileDialog&lt;/code&gt; style constant for save file dialog behavior (value is 1&lt;&lt;13).
(4745) {1087197} [1087390]: public static final int SAVE = 1 &lt;&lt; 13; The &lt;code&gt;Composite&lt;/code&gt; constant to indicate that an attribute (such as background) is not inherited by the children (value is 0).
(4746) {1087391} [1087627]: * @since 3.2 public static final int INHERIT_NONE = 0; The &lt;code&gt;Composite&lt;/code&gt; constant to indicate that an attribute (such as background) is inherited by children who choose this value as their "default" (value is 1).
(4748) {1087757} [1087946]: * @since 3.2 public static final int INHERIT_DEFAULT = 1; The &lt;code&gt;Composite&lt;/code&gt; constant to indicate that an attribute (such as background) is inherited by all children.
(4749) {1087947} [1088039]: * @since 3.2 public static final int INHERIT_FORCE = 2; Default color white (value is 1).
(4750) {1088041} [1088117]: public static final int COLOR_WHITE = 1; Default color black (value is 2).
(4751) {1088119} [1088193]: public static final int COLOR_BLACK = 2; Default color red (value is 3).
(4752) {1088195} [1088272]: public static final int COLOR_RED = 3; Default color dark red (value is 4).
(4792) {1092404} [1092499]: &lt;br&gt; Note that this is a &lt;em&gt;HINT&lt;/em&gt; and may be overridden by the platform.
(4797) {1093636} [1093783]: public static final int DRAW_MNEMONIC = 1 &lt;&lt; 3; Selection constant indicating that a line delimiter should be drawn (value is 1&lt;&lt;17).
(4798) {1093784} [1094206]: * &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;TextLayout&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @see #FULL_SELECTION @see #LAST_LINE_SELECTION * @since 3.3 public static final int DELIMITER_SELECTION = 1 &lt;&lt; 17; Selection constant indicating that the last line is selected to the end and should be drawn using either a line delimiter or full line selection (value is 1&lt;&lt;20).
(4799) {1094207} [1094539]: * &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;TextLayout&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @see #DELIMITER_SELECTION @see #FULL_SELECTION * @since 3.3 public static final int LAST_LINE_SELECTION = 1 &lt;&lt; 20; SWT error constant indicating that no error number was specified (value is 1).
(4801) {1094703} [1094840]: public static final int ERROR_NO_HANDLES = 2; SWT error constant indicating that no more callback resources are available (value is 3).
(4802) {1094842} [1094975]: public static final int ERROR_NO_MORE_CALLBACKS = 3; SWT error constant indicating that a null argument was passed in (value is 4).
(4803) {1094977} [1095110]: public static final int ERROR_NULL_ARGUMENT = 4; SWT error constant indicating that an invalid argument was passed in (value is 5).
(4836) {1100862} [1101013]: public static final int ERROR_DEVICE_DISPOSED = 45; SWT error constant indicating that an exception happened when executing a runnable (value is 46).
(4838) {1101185} [1101326]: * @since 3.1 public static final int ERROR_FAILED_LOAD_LIBRARY = 47; SWT error constant indicating that a font is not valid (value is 48).
(4840) {1101527} [1101708]: * @since 3.5 public static final int ERROR_FUNCTION_DISPOSED = 49; SWT error constant indicating that an exception happened when evaluating a javascript expression (value is 50).
(4841) {1101709} [1101856]: * @since 3.5 public static final int ERROR_FAILED_EVALUATE = 50; SWT error constant indicating that an invalid value was returned (value is 51).
(4842) {1101857} [1102009]: * @since 3.5 public static final int ERROR_INVALID_RETURN_VALUE = 51; Constant indicating that an image or operation is of type bitmap (value is 0).
(4843) {1102011} [1102126]: public static final int BITMAP = 0; Constant indicating that an image or operation is of type icon (value is 1).
(4844) {1102128} [1102318]: public static final int ICON = 1; The &lt;code&gt;Image&lt;/code&gt; constructor argument indicating that the new image should be a copy of the image provided as an argument (value is 0).
(4845) {1102320} [1102601]: public static final int IMAGE_COPY = 0; The &lt;code&gt;Image&lt;/code&gt; constructor argument indicating that the new image should have the appearance of a "disabled" (using the platform's rules for how this should look) copy of the image provided as an argument (value is 1).
(4846) {1102603} [1102836]: public static final int IMAGE_DISABLE = 1; The &lt;code&gt;Image&lt;/code&gt; constructor argument indicating that the new image should have the appearance of a "gray scaled" copy of the image provided as an argument (value is 2).
(4848) {1102930} [1103159]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;ProgressBar&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @since 3.4 public static final int ERROR = 1; Constant to a indicate a paused state (value is 4).
(4849) {1103160} [1103431]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;ProgressBar&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @since 3.4 public static final int PAUSED = 1 &lt;&lt; 2; The font style constant indicating a normal weight, non-italic font (value is 0).
(4850) {1103432} [1103528]: This constant is also used with &lt;code&gt;ProgressBar&lt;/code&gt; to indicate a normal state.
(4851) {1103529} [1103771]: &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;ProgressBar&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; public static final int NORMAL = 0; The font style constant indicating a bold weight font (value is 1&lt;&lt;0).
(4852) {1103773} [1103892]: public static final int BOLD = 1 &lt;&lt; 0; The font style constant indicating an italic font (value is 1&lt;&lt;1).
(4853) {1103894} [1103977]: public static final int ITALIC = 1 &lt;&lt; 1; System arrow cursor (value is 0).
(4854) {1103979} [1104056]: public static final int CURSOR_ARROW = 0; System wait cursor (value is 1).
(4855) {1104058} [1104140]: public static final int CURSOR_WAIT = 1; System cross hair cursor (value is 2).
(4856) {1104142} [1104226]: public static final int CURSOR_CROSS = 2; System app startup cursor (value is 3).
(4857) {1104228} [1104311]: public static final int CURSOR_APPSTARTING = 3; System help cursor (value is 4).
(4892) {1108427} [1108533]: * @since 3.1 public static final int PATH_CLOSE = 5; Even odd rule for filling operations (value is 1).
(4893) {1108534} [1108642]: * @since 3.1 public static final int FILL_EVEN_ODD = 1; Winding rule for filling operations (value is 2).
(4908) {1110582} [1110749]: public static final int TRANSPARENCY_NONE = 0x0; Image transparency constant indicating that the image contains alpha transparency information (value is 1&lt;&lt;0).
(4909) {1110751} [1110917]: public static final int TRANSPARENCY_ALPHA = 1 &lt;&lt; 0; Image transparency constant indicating that the image contains a transparency mask (value is 1&lt;&lt;1).
(4910) {1110919} [1111084]: public static final int TRANSPARENCY_MASK = 1 &lt;&lt; 1; Image transparency constant indicating that the image contains a transparent pixel (value is 1&lt;&lt;2).
(4911) {1111086} [1111197]: public static final int TRANSPARENCY_PIXEL = 1 &lt;&lt; 2; The character movement type (value is 1&lt;&lt;0).
(4913) {1111260} [1111514]: * @see org.eclipse.swt.graphics.TextLayout#getNextOffset(int, int) @see org.eclipse.swt.graphics.TextLayout#getPreviousOffset(int, int) * @since 3.0 public static final int MOVEMENT_CHAR = 1 &lt;&lt; 0; The cluster movement type (value is 1&lt;&lt;1).
(4917) {1111719} [1111973]: * @see org.eclipse.swt.graphics.TextLayout#getNextOffset(int, int) @see org.eclipse.swt.graphics.TextLayout#getPreviousOffset(int, int) * @since 3.0 public static final int MOVEMENT_CLUSTER = 1 &lt;&lt; 1; The word movement type (value is 1&lt;&lt;2).
(4922) {1112326} [1112581]: * @see org.eclipse.swt.graphics.TextLayout#getNextOffset(int, int) @see org.eclipse.swt.graphics.TextLayout#getPreviousOffset(int, int) * @since 3.0 public static final int MOVEMENT_WORD = 1 &lt;&lt; 2; The word end movement type (value is 1&lt;&lt;3).
(4925) {1112723} [1112986]: * * @see org.eclipse.swt.graphics.TextLayout#getNextOffset(int, int) @see org.eclipse.swt.graphics.TextLayout#getPreviousOffset(int, int) * @since 3.3 public static final int MOVEMENT_WORD_END = 1 &lt;&lt; 3; The word start movement type (value is 1&lt;&lt;4).
(4928) {1113130} [1113444]: * @see org.eclipse.swt.graphics.TextLayout#getNextOffset(int, int) @see org.eclipse.swt.graphics.TextLayout#getPreviousOffset(int, int) * @since 3.3 public static final int MOVEMENT_WORD_START = 1 &lt;&lt; 4; A constant indicating that a given operation should be performed on all widgets (value is 1&lt;&lt;0).
(4929) {1113445} [1113768]: * &lt;p&gt;&lt;b&gt;Used By:&lt;/b&gt;&lt;ul&gt; &lt;li&gt;&lt;code&gt;Composite&lt;/code&gt; layout&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; * @see org.eclipse.swt.widgets.Composite#layout(org.eclipse.swt.widgets.Control[], int) * @since 3.6 public static final int ALL = 1 &lt;&lt; 0; ID for the About menu item (value is -1).
(4938) {1115163} [1115445]: &lt;/p&gt; * @see org.eclipse.swt.widgets.Widget#getData(String) @see org.eclipse.swt.widgets.Widget#setData(String, Object) * @since 3.6 public static final String SKIN_CLASS = "org.eclipse.swt.skin.class"; //$NON-NLS-1$ Key name for setting and getting the skin id of a widget.
(4941) {1115631} [1115957]: &lt;/p&gt; * @see org.eclipse.swt.widgets.Widget#getData(String) @see org.eclipse.swt.widgets.Widget#setData(String, Object) * @since 3.6 public static final String SKIN_ID = "org.eclipse.swt.skin.id"; //$NON-NLS-1$ The &lt;code&gt;Scrollable&lt;/code&gt; constant to indicate that the receiver is using overlay scrollbars.
(4942) {1115958} [1116120]: (value is 1) * @since 3.8 public static final int SCROLLBAR_OVERLAY = 1 &lt;&lt; 1; Returns a boolean indicating whether this SWT implementation can be loaded.
(4944) {1116242} [1116455]: @return &lt;code&gt;true&lt;/code&gt; if this SWT implementation can be loaded and &lt;code&gt;false&lt;/code&gt; otherwise @since 3.8 ------------ Answers a concise, human readable description of the error code.
(4945) {1116457} [1116488]: @param code the SWT error code.
(4946) {1116489} [1116529]: @return a description of the error code.
(4948) {1116605} [1116859]: @param key the key to look up @return the message for the given key @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the key is null&lt;/li&gt; &lt;/ul&gt; ------------ Returns the NLS'ed message for the given arguments.
(4949) {1116861} [1117183]: @param key the key to look up @param args the parameters to insert into the message @return the message for the given parameterized key @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the key or args are null&lt;/li&gt; &lt;/ul&gt; @since 3.8 ------------ Returns the SWT platform name.
(4954) {1117684} [1118376]: &lt;p&gt; In SWT, errors are reported by throwing one of three exceptions: &lt;dl&gt; &lt;dd&gt;java.lang.IllegalArgumentException&lt;/dd&gt; &lt;dt&gt;thrown whenever one of the API methods is invoked with an illegal argument&lt;/dt&gt; &lt;dd&gt;org.eclipse.swt.SWTException (extends java.lang.RuntimeException)&lt;/dd&gt; &lt;dt&gt;thrown whenever a recoverable error happens internally in SWT&lt;/dt&gt; &lt;dd&gt;org.eclipse.swt.SWTError (extends java.lang.Error)&lt;/dd&gt; &lt;dt&gt;thrown whenever a &lt;b&gt;non-recoverable&lt;/b&gt; error happens internally in SWT&lt;/dt&gt; &lt;/dl&gt; This method provides the logic which maps between error codes and one of the above exceptions.
(4955) {1118377} [1118420]: &lt;/p&gt; @param code the SWT error code.
(4959) {1118756} [1119448]: &lt;p&gt; In SWT, errors are reported by throwing one of three exceptions: &lt;dl&gt; &lt;dd&gt;java.lang.IllegalArgumentException&lt;/dd&gt; &lt;dt&gt;thrown whenever one of the API methods is invoked with an illegal argument&lt;/dt&gt; &lt;dd&gt;org.eclipse.swt.SWTException (extends java.lang.RuntimeException)&lt;/dd&gt; &lt;dt&gt;thrown whenever a recoverable error happens internally in SWT&lt;/dt&gt; &lt;dd&gt;org.eclipse.swt.SWTError (extends java.lang.Error)&lt;/dd&gt; &lt;dt&gt;thrown whenever a &lt;b&gt;non-recoverable&lt;/b&gt; error happens internally in SWT&lt;/dt&gt; &lt;/dl&gt; This method provides the logic which maps between error codes and one of the above exceptions.
(4960) {1119449} [1119492]: &lt;/p&gt; @param code the SWT error code.
(4963) {1119602} [1119757]: @see SWTError @see SWTException @see IllegalArgumentException @since 3.0 ====== SWTError.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(4974) {1121038} [1121235]: &lt;/p&gt; @see SWTException @see SWT#error(int) @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ The SWT error code, one of SWT.ERROR_*.
(4978) {1121563} [1121659]: ------------ Constructs a new instance of this class with its stack trace and message filled in.
(4980) {1121708} [1121808]: Specifying &lt;code&gt;null&lt;/code&gt; as the message is equivalent to specifying an empty string.
(4981) {1121810} [1121961]: @param message the detail message for the exception ------------ Constructs a new instance of this class with its stack trace and error code filled in.
(4982) {1121963} [1122102]: @param code the SWT error code ------------ Constructs a new instance of this class with its stack trace, error code and message filled in.
(4983) {1122103} [1122203]: Specifying &lt;code&gt;null&lt;/code&gt; as the message is equivalent to specifying an empty string.
(4984) {1122205} [1122404]: @param code the SWT error code @param message the detail message for the exception ------------ Returns the underlying throwable that caused the problem, or null if this information is not available.
(4987) {1122588} [1122708]: &lt;/p&gt; @return the underlying throwable @since 3.1 ------------ Returns the string describing this SWTError object.
(4991) {1123153} [1123253]: &lt;/p&gt; ====== SWTEventListener.java ====== Copyright (c) 2000, 2014 IBM Corporation and others.
(4996) {1123838} [1123917]: &lt;/p&gt; &lt;p&gt; Note: java.util.EventListener is not part of CDC and CLDC.
(5006) {1124985} [1125158]: &lt;/p&gt; @see SWTError @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ The SWT error code, one of SWT.ERROR_*.
(5010) {1125485} [1125581]: ------------ Constructs a new instance of this class with its stack trace and message filled in.
(5012) {1125630} [1125730]: Specifying &lt;code&gt;null&lt;/code&gt; as the message is equivalent to specifying an empty string.
(5013) {1125732} [1125883]: @param message the detail message for the exception ------------ Constructs a new instance of this class with its stack trace and error code filled in.
(5014) {1125885} [1126024]: @param code the SWT error code ------------ Constructs a new instance of this class with its stack trace, error code and message filled in.
(5015) {1126025} [1126125]: Specifying &lt;code&gt;null&lt;/code&gt; as the message is equivalent to specifying an empty string.
(5016) {1126127} [1126326]: @param code the SWT error code @param message the detail message for the exception ------------ Returns the underlying throwable that caused the problem, or null if this information is not available.
(5019) {1126510} [1126634]: &lt;/p&gt; @return the underlying throwable @since 3.1 ------------ Returns the string describing this SWTException object.
(5023) {1127091} [1127187]: &lt;/p&gt; ====== Synchronizer.java ====== Copyright (c) 2000, 2014 IBM Corporation and others.
(5029) {1127946} [1128285]: &lt;em&gt;Subclasses which override the methods in this class must ensure that the superclass methods are invoked in their implementations&lt;/em&gt; &lt;/p&gt; @see Display#setSynchronizer @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ Constructs a new instance of this class.
(5034) {1128796} [1128952]: ------------ Causes the &lt;code&gt;run()&lt;/code&gt; method of the runnable to be invoked by the user-interface thread at the next reasonable opportunity.
(5036) {1129063} [1129120]: @param runnable code to run on the user-interface thread.
(5037) {1129122} [1129293]: @see #syncExec ------------ Causes the &lt;code&gt;run()&lt;/code&gt; method of the runnable to be invoked by the user-interface thread at the next reasonable opportunity.
(5039) {1129373} [1129430]: @param runnable code to run on the user-interface thread.
(5040) {1129432} [1129672]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_FAILED_EXEC - if an exception occurred when executing the runnable&lt;/li&gt; &lt;/ul&gt; @see #asyncExec ====== TabFolder.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(5044) {1130121} [1130243]: &lt;p&gt; The item children that may be added to instances of this class must be of type &lt;code&gt;TabItem&lt;/code&gt;.
(5045) {1130244} [1130377]: &lt;code&gt;Control&lt;/code&gt; children are created and then set into a tab item using &lt;code&gt;TabItem#setControl&lt;/code&gt;.
(5054) {1131888} [1132726]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT @see SWT#TOP @see SWT#BOTTOM @see Widget#checkSubclass @see Widget#getStyle ------------ Adds the listener to the collection of listeners who will be notified when the user changes the receiver's selection, by sending it one of the messages defined in the &lt;code&gt;SelectionListener&lt;/code&gt; interface.
(5055) {1132727} [1132837]: &lt;p&gt; When &lt;code&gt;widgetSelected&lt;/code&gt; is called, the item field of the event object is valid.
(5056) {1132838} [1132899]: &lt;code&gt;widgetDefaultSelected&lt;/code&gt; is not called.
(5057) {1132900} [1133527]: &lt;/p&gt; @param listener the listener which should be notified when the user changes the receiver's selection @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SelectionListener @see #removeSelectionListener @see SelectionEvent ------------ Returns the item at the given, zero-relative index in the receiver.
(5059) {1133579} [1134185]: @param index the index of the item to return @return the item at the given index @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_RANGE - if the index is not between 0 and the number of elements in the list minus 1 (inclusive)&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the tab item at the given point in the receiver or null if no such item exists.
(5061) {1134242} [1134808]: @param point the point used to locate the item @return the tab item at the given point, or null if the point is not in a tab item @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the point is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.4 ------------ Returns the number of items contained in the receiver.
(5062) {1134810} [1135175]: @return the number of items @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns an array of &lt;code&gt;TabItem&lt;/code&gt;s which are the items in the receiver.
(5064) {1135330} [1135721]: &lt;/p&gt; @return the items in the receiver @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns an array of &lt;code&gt;TabItem&lt;/code&gt;s that are currently selected in the receiver.
(5067) {1135925} [1136345]: &lt;/p&gt; @return an array representing the selection @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the zero-relative index of the item which is currently selected in the receiver, or -1 if no item is selected.
(5068) {1136347} [1136788]: @return the index of the selected item @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Searches the receiver's list starting at the first item (index 0) until an item is found that is equal to the argument, and returns the index of that item.
(5070) {1136823} [1137372]: @param item the search item @return the index of the item @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the item is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Removes the listener from the collection of listeners who will be notified when the user changes the receiver's selection.
(5071) {1137374} [1137910]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SelectionListener @see #addSelectionListener ------------ Sets the receiver's selection to the given item.
(5073) {1137982} [1138455]: @param item the item to select @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the item is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.2 ------------ Sets the receiver's selection to be the given array of items.
(5075) {1138529} [1139003]: @param items the array of items @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the items array is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Selects the item at the given zero-relative index in the receiver.
(5079) {1139189} [1139548]: @param index the index of the item to select @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ====== TabItem.java ====== Copyright (c) 2000, 2013 IBM Corporation and others.
(5084) {1140521} [1140701]: ------------ Constructs a new instance of this class given its parent (which must be a &lt;code&gt;TabFolder&lt;/code&gt;) and a style value describing its behavior and appearance.
(5089) {1141253} [1142080]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT @see Widget#checkSubclass @see Widget#getStyle ------------ Constructs a new instance of this class given its parent (which must be a &lt;code&gt;TabFolder&lt;/code&gt;), a style value describing its behavior and appearance, and the index at which to place it in the items maintained by its parent.
(5093) {1142564} [1143462]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @param index the zero-relative index to store the receiver in its parent @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_RANGE - if the index is not between 0 and the number of elements in the parent (inclusive)&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT @see Widget#checkSubclass @see Widget#getStyle ------------ Returns the control that is used to fill the client area of the tab folder when the user selects the tab item.
(5094) {1143464} [1143529]: If no control has been set, return &lt;code&gt;null&lt;/code&gt;.
(5095) {1143530} [1143894]: &lt;p&gt; @return the control @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns a rectangle describing the receiver's size and location relative to its parent.
(5096) {1143896} [1144279]: @return the receiver's bounding rectangle @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.4 ------------ Returns the receiver's parent, which must be a &lt;code&gt;TabFolder&lt;/code&gt;.
(5097) {1144281} [1144627]: @return the receiver's parent @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's tool tip text, or null if it has not been set.
(5098) {1144629} [1145020]: @return the receiver's tool tip text @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the control that is used to fill the client area of the tab folder when the user selects the tab item.
(5099) {1145021} [1145572]: &lt;p&gt; @param control the new control (or null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the control has been disposed&lt;/li&gt; &lt;li&gt;ERROR_INVALID_PARENT - if the control is not in the same widget tree&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's text.
(5105) {1146067} [1146611]: &lt;/p&gt; @param string the new text @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the text is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's tool tip text to the argument, which may be null indicating that the default tool tip for the control will be shown.
(5109) {1147006} [1147376]: &lt;/p&gt; @param string the new tool tip text (or null) @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ====== Table.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(5112) {1147905} [1148029]: &lt;p&gt; The item children that may be added to instances of this class must be of type &lt;code&gt;TableItem&lt;/code&gt;.
(5113) {1148030} [1148258]: &lt;/p&gt;&lt;p&gt; Style &lt;code&gt;VIRTUAL&lt;/code&gt; is used to create a &lt;code&gt;Table&lt;/code&gt; whose &lt;code&gt;TableItem&lt;/code&gt;s are to be populated by the client on an on-demand basis instead of up-front.
(5115) {1148475} [1149251]: &lt;/p&gt;&lt;p&gt; Here is an example of using a &lt;code&gt;Table&lt;/code&gt; with style &lt;code&gt;VIRTUAL&lt;/code&gt;: &lt;code&gt;&lt;pre&gt; final Table table = new Table (parent, SWT.VIRTUAL | SWT.BORDER); table.setItemCount (1000000); table.addListener (SWT.SetData, new Listener () { public void handleEvent (Event event) { TableItem item = (TableItem) event.item; int index = table.indexOf (item); item.setText ("Item " + index); System.out.println (item.getText ()); } }); &lt;/pre&gt;&lt;/code&gt; &lt;/p&gt;&lt;p&gt; Note that although this class is a subclass of &lt;code&gt;Composite&lt;/code&gt;, it does not normally make sense to add &lt;code&gt;Control&lt;/code&gt; children to it, or set a layout on it, unless implementing something like a cell editor.
(5123) {1150756} [1151686]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT#SINGLE @see SWT#MULTI @see SWT#CHECK @see SWT#FULL_SELECTION @see SWT#HIDE_SELECTION @see SWT#VIRTUAL @see SWT#NO_SCROLL @see Widget#checkSubclass @see Widget#getStyle ------------ Adds the listener to the collection of listeners who will be notified when the user changes the receiver's selection, by sending it one of the messages defined in the &lt;code&gt;SelectionListener&lt;/code&gt; interface.
(5124) {1151687} [1151797]: &lt;p&gt; When &lt;code&gt;widgetSelected&lt;/code&gt; is called, the item field of the event object is valid.
(5125) {1151798} [1151980]: If the receiver has the &lt;code&gt;SWT.CHECK&lt;/code&gt; style and the check selection changes, the event object detail field contains the value &lt;code&gt;SWT.CHECK&lt;/code&gt;.
(5126) {1151981} [1152079]: &lt;code&gt;widgetDefaultSelected&lt;/code&gt; is typically called when an item is double-clicked.
(5128) {1152181} [1152806]: &lt;/p&gt; @param listener the listener which should be notified when the user changes the receiver's selection @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SelectionListener @see #removeSelectionListener @see SelectionEvent ------------ Clears the item at the given zero-relative index in the receiver.
(5131) {1153013} [1153654]: @param index the index of the item to clear @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_RANGE - if the index is not between 0 and the number of elements in the list minus 1 (inclusive)&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SWT#VIRTUAL @see SWT#SetData @since 3.0 ------------ Removes the items from the receiver which are between the given zero-relative start and end indices (inclusive).
(5134) {1153865} [1154529]: @param start the start index of the item to clear @param end the end index of the item to clear @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_RANGE - if either the start or end are not between 0 and the number of elements in the list minus 1 (inclusive)&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SWT#VIRTUAL @see SWT#SetData @since 3.0 ------------ Clears the items at the given zero-relative indices in the receiver.
(5137) {1154740} [1155383]: @param indices the array of indices of the items @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_RANGE - if the index is not between 0 and the number of elements in the list minus 1 (inclusive)&lt;/li&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the indices array is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SWT#VIRTUAL @see SWT#SetData @since 3.0 ------------ Clears all the items in the receiver.
(5140) {1155593} [1155957]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SWT#VIRTUAL @see SWT#SetData @since 3.0 ------------ Deselects the items at the given zero-relative indices in the receiver.
(5141) {1155958} [1156049]: If the item at the given zero-relative index in the receiver is selected, it is deselected.
(5144) {1156183} [1156692]: @param indices the array of indices for the items to deselect @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the set of indices is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Deselects the item at the given zero-relative index in the receiver.
(5147) {1156809} [1157174]: @param index the index of the item to deselect @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Deselects the items at the given zero-relative indices in the receiver.
(5148) {1157175} [1157266]: If the item at the given zero-relative index in the receiver is selected, it is deselected.
(5152) {1157418} [1157814]: @param start the start index of the items to deselect @param end the end index of the items to deselect @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Deselects all selected items in the receiver.
(5153) {1157816} [1158131]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the column at the given, zero-relative index in the receiver.
(5156) {1158240} [1158458]: If no &lt;code&gt;TableColumn&lt;/code&gt;s were created by the programmer, this method will throw &lt;code&gt;ERROR_INVALID_RANGE&lt;/code&gt; despite the fact that a single column of data may be visible in the table.
(5158) {1158562} [1159286]: @param index the index of the column to return @return the column at the given index @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_RANGE - if the index is not between 0 and the number of elements in the list minus 1 (inclusive)&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see Table#getColumnOrder() @see Table#setColumnOrder(int[]) @see TableColumn#getMoveable() @see TableColumn#setMoveable(boolean) @see SWT#Move ------------ Returns the number of columns contained in the receiver.
(5159) {1159287} [1159450]: If no &lt;code&gt;TableColumn&lt;/code&gt;s were created by the programmer, this value is zero, despite the fact that visually, one column of items may be visible.
(5161) {1159554} [1159983]: @return the number of columns @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns an array of zero-relative integers that map the creation order of the receiver's items to the order in which they are currently being displayed.
(5164) {1160328} [1160869]: &lt;/p&gt; @return the current visual order of the receiver's items @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see Table#setColumnOrder(int[]) @see TableColumn#getMoveable() @see TableColumn#setMoveable(boolean) @see SWT#Move @since 3.1 ------------ Returns an array of &lt;code&gt;TableColumn&lt;/code&gt;s which are the columns in the receiver.
(5166) {1160930} [1161093]: If no &lt;code&gt;TableColumn&lt;/code&gt;s were created by the programmer, the array is empty, despite the fact that visually, one column of items may be visible.
(5169) {1161350} [1161831]: &lt;/p&gt; @return the items in the receiver @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see Table#getColumnOrder() @see Table#setColumnOrder(int[]) @see TableColumn#getMoveable() @see TableColumn#setMoveable(boolean) @see SWT#Move ------------ Returns the width in pixels of a grid line.
(5170) {1161833} [1162617]: @return the width of a grid line in pixels @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the height of the receiver's header @return the height of the header or zero if the header is not visible @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 2.0 ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver's header is visible, and &lt;code&gt;false&lt;/code&gt; otherwise.
(5172) {1162839} [1163214]: &lt;/p&gt; @return the receiver's header's visibility state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the item at the given, zero-relative index in the receiver.
(5174) {1163266} [1163868]: @param index the index of the item to return @return the item at the given index @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_RANGE - if the index is not between 0 and the number of elements in the list minus 1 (inclusive)&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the item at the given point in the receiver or null if no such item exists.
(5176) {1163924} [1164014]: &lt;p&gt; The item that is returned represents an item that could be selected by the user.
(5179) {1164265} [1164834]: &lt;/p&gt; @param point the point used to locate the item @return the item at the given point, or null if the point is not in a selectable item @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the point is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the number of items contained in the receiver.
(5180) {1164836} [1165227]: @return the number of items @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the height of the area which would be used to display &lt;em&gt;one&lt;/em&gt; of the items in the receiver.
(5181) {1165229} [1165615]: @return the height of one item @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns a (possibly empty) array of &lt;code&gt;TableItem&lt;/code&gt;s which are the items in the receiver.
(5183) {1165770} [1166183]: &lt;/p&gt; @return the items in the receiver @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver's lines are visible, and &lt;code&gt;false&lt;/code&gt; otherwise.
(5186) {1166492} [1166893]: &lt;/p&gt; @return the visibility state of the lines @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns an array of &lt;code&gt;TableItem&lt;/code&gt;s that are currently selected in the receiver.
(5190) {1167136} [1167501]: &lt;/p&gt; @return an array representing the selection @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the number of selected items contained in the receiver.
(5191) {1167503} [1167905]: @return the number of selected items @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the zero-relative index of the item which is currently selected in the receiver, or -1 if no item is selected.
(5192) {1167907} [1168285]: @return the index of the selected item @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the zero-relative indices of the items which are currently selected in the receiver.
(5196) {1168522} [1168898]: &lt;/p&gt; @return the array of indices of the selected items @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the column which shows the sort indicator for the receiver.
(5198) {1168961} [1169342]: @return the sort indicator @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #setSortColumn(TableColumn) @since 3.2 ------------ Returns the direction of the sort indicator for the receiver.
(5200) {1169462} [1169867]: @return the sort direction @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #setSortDirection(int) @since 3.2 ------------ Returns the zero-relative index of the item which is currently at the top of the receiver.
(5202) {1169950} [1170391]: @return the index of the top item @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Searches the receiver's list starting at the first column (index 0) until a column is found that is equal to the argument, and returns the index of that column.
(5204) {1170428} [1171018]: @param column the search column @return the index of the column @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the column is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Searches the receiver's list starting at the first item (index 0) until an item is found that is equal to the argument, and returns the index of that item.
(5206) {1171053} [1171588]: @param item the search item @return the index of the item @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the item is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns &lt;code&gt;true&lt;/code&gt; if the item is selected, and &lt;code&gt;false&lt;/code&gt; otherwise.
(5208) {1171625} [1172038]: @param index the index of the item @return the selection state of the item at the index @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Removes the items from the receiver's list at the given zero-relative indices.
(5209) {1172040} [1172667]: @param indices the array of indices of the items @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_RANGE - if the index is not between 0 and the number of elements in the list minus 1 (inclusive)&lt;/li&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the indices array is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Removes the item from the receiver at the given zero-relative index.
(5210) {1172669} [1173255]: @param index the index for the item @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_RANGE - if the index is not between 0 and the number of elements in the list minus 1 (inclusive)&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Removes the items from the receiver which are between the given zero-relative start and end indices (inclusive).
(5211) {1173257} [1173821]: @param start the start of the range @param end the end of the range @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_RANGE - if either the start or end are not between 0 and the number of elements in the list minus 1 (inclusive)&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Removes all of the items from the receiver.
(5212) {1173823} [1174191]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Removes the listener from the collection of listeners who will be notified when the user changes the receiver's selection.
(5213) {1174193} [1174769]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SelectionListener @see #addSelectionListener(SelectionListener) ------------ Selects the items at the given zero-relative indices in the receiver.
(5215) {1174842} [1174913]: &lt;p&gt; If the item at a given index is not selected, it is selected.
(5219) {1175150} [1175701]: &lt;/p&gt; @param indices the array of indices for the items to select @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the array of indices is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see Table#setSelection(int[]) ------------ Selects the item at the given zero-relative index in the receiver.
(5222) {1175814} [1176198]: @param index the index of the item to select @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Selects the items in the range specified by the given zero-relative indices in the receiver.
(5225) {1176306} [1176378]: &lt;p&gt; If an item in the given range is not selected, it is selected.
(5229) {1176669} [1177071]: &lt;/p&gt; @param start the start of the range @param end the end of the range @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see Table#setSelection(int,int) ------------ Selects all of the items in the receiver.
(5230) {1177072} [1177127]: &lt;p&gt; If the receiver is single-select, do nothing.
(5231) {1177128} [1177564]: &lt;/p&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the order that the items in the receiver should be displayed in to the given argument which is described in terms of the zero-relative ordering of when the items were added.
(5232) {1177566} [1178345]: @param order the new order to display the items @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the item order is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the item order is not the same length as the number of items&lt;/li&gt; &lt;/ul&gt; @see Table#getColumnOrder() @see TableColumn#getMoveable() @see TableColumn#setMoveable(boolean) @see SWT#Move @since 3.1 ------------ Marks the receiver's header as visible if the argument is &lt;code&gt;true&lt;/code&gt;, and marks it invisible otherwise.
(5234) {1178524} [1178871]: &lt;/p&gt; @param show the new visibility state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the number of items contained in the receiver.
(5235) {1178873} [1179275]: @param count the number of items @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.0 ------------ Sets the height of the area which would be used to display &lt;em&gt;one&lt;/em&gt; of the items in the table.
(5236) {1179277} [1179698]: @param itemHeight the height of one item @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.2 ------------ Marks the receiver's lines as visible if the argument is &lt;code&gt;true&lt;/code&gt;, and marks it invisible otherwise.
(5239) {1179964} [1180329]: &lt;/p&gt; @param show the new visibility state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Selects the items at the given zero-relative indices in the receiver.
(5243) {1180649} [1181191]: &lt;/p&gt; @param indices the indices of the items to select @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the array of indices is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see Table#deselectAll() @see Table#select(int[]) ------------ Sets the receiver's selection to the given item.
(5245) {1181335} [1181400]: &lt;p&gt; If the item is not in the receiver, then it is ignored.
(5246) {1181401} [1181962]: &lt;/p&gt; @param item the item to select @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the item is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the item has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.2 ------------ Sets the receiver's selection to be the given array of items.
(5248) {1182108} [1182165]: &lt;p&gt; Items that are not in the receiver are ignored.
(5250) {1182261} [1182916]: &lt;/p&gt; @param items the array of items @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the array of items is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if one of the items has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see Table#deselectAll() @see Table#select(int[]) @see Table#setSelection(int[]) ------------ Selects the item at the given zero-relative index in the receiver.
(5252) {1183066} [1183499]: @param index the index of the item to select @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see Table#deselectAll() @see Table#select(int) ------------ Selects the items in the range specified by the given zero-relative indices in the receiver.
(5257) {1183907} [1184379]: &lt;/p&gt; @param start the start index of the items to select @param end the end index of the items to select @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see Table#deselectAll() @see Table#select(int,int) ------------ Sets the column used by the sort indicator for the receiver.
(5260) {1184491} [1185024]: @param column the column used by the sort indicator or &lt;code&gt;null&lt;/code&gt; @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the column is disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.2 ------------ Sets the direction of the sort indicator for the receiver.
(5262) {1185143} [1185542]: @param direction the direction of the sort indicator @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.2 ------------ Sets the zero-relative index of the item which is currently at the top of the receiver.
(5264) {1185626} [1185929]: @param index the index of the top item @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Shows the column.
(5267) {1186076} [1186589]: @param column the column to be shown @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the column is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the column has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.0 ------------ Shows the item.
(5270) {1186730} [1187256]: @param item the item to be shown @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the item is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the item has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see Table#showSelection() ------------ Shows the selection.
(5273) {1187407} [1187756]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see Table#showItem(TableItem) ====== TableColumn.java ====== Copyright (c) 2000, 2012 IBM Corporation and others.
(5279) {1188818} [1188994]: ------------ Constructs a new instance of this class given its parent (which must be a &lt;code&gt;Table&lt;/code&gt;) and a style value describing its behavior and appearance.
(5284) {1189546} [1190405]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT#LEFT @see SWT#RIGHT @see SWT#CENTER @see Widget#checkSubclass @see Widget#getStyle ------------ Constructs a new instance of this class given its parent (which must be a &lt;code&gt;Table&lt;/code&gt;), a style value describing its behavior and appearance, and the index at which to place it in the items maintained by its parent.
(5288) {1190889} [1191000]: &lt;/p&gt; &lt;p&gt; Note that due to a restriction on some platforms, the first column is always left aligned.
(5289) {1191001} [1192032]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @param index the zero-relative index to store the receiver in its parent @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_RANGE - if the index is not between 0 and the number of elements in the parent (inclusive)&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT#LEFT @see SWT#RIGHT @see SWT#CENTER @see Widget#checkSubclass @see Widget#getStyle ------------ Adds the listener to the collection of listeners who will be notified when the control is moved or resized, by sending it one of the messages defined in the &lt;code&gt;ControlListener&lt;/code&gt; interface.
(5290) {1192034} [1192725]: @param listener the listener which should be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see ControlListener @see #removeControlListener ------------ Adds the listener to the collection of listeners who will be notified when the control is selected by the user, by sending it one of the messages defined in the &lt;code&gt;SelectionListener&lt;/code&gt; interface.
(5291) {1192726} [1192821]: &lt;p&gt; &lt;code&gt;widgetSelected&lt;/code&gt; is called when the column header is selected.
(5292) {1192822} [1192883]: &lt;code&gt;widgetDefaultSelected&lt;/code&gt; is not called.
(5293) {1192884} [1193520]: &lt;/p&gt; @param listener the listener which should be notified when the control is selected by the user @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SelectionListener @see #removeSelectionListener @see SelectionEvent ------------ Returns a value which describes the position of the text or image in the receiver.
(5295) {1193645} [1193992]: @return the alignment @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's parent, which must be a &lt;code&gt;Table&lt;/code&gt;.
(5296) {1193994} [1194299]: @return the receiver's parent @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Gets the moveable attribute.
(5298) {1194426} [1194859]: @return the moveable attribute @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see Table#getColumnOrder() @see Table#setColumnOrder(int[]) @see TableColumn#setMoveable(boolean) @see SWT#Move @since 3.1 ------------ Gets the resizable attribute.
(5300) {1194960} [1195308]: @return the resizable attribute @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's tool tip text, or null if it has not been set.
(5301) {1195310} [1195637]: @return the receiver's tool tip text @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.2 ------------ Gets the width of the receiver.
(5302) {1195639} [1195960]: @return the width @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Causes the receiver to be resized to its preferred size.
(5304) {1196056} [1196414]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Removes the listener from the collection of listeners who will be notified when the control is moved or resized.
(5305) {1196416} [1197016]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see ControlListener @see #addControlListener ------------ Removes the listener from the collection of listeners who will be notified when the control is selected by the user.
(5306) {1197018} [1197569]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SelectionListener @see #addSelectionListener ------------ Controls how text and images will be displayed in the receiver.
(5308) {1197698} [1197798]: &lt;p&gt; Note that due to a restriction on some platforms, the first column is always left aligned.
(5309) {1197799} [1198120]: &lt;/p&gt; @param alignment the new alignment @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the moveable attribute.
(5312) {1198302} [1198736]: @param moveable the moveable attribute @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see Table#setColumnOrder(int[]) @see Table#getColumnOrder() @see TableColumn#getMoveable() @see SWT#Move @since 3.1 ------------ Sets the resizable attribute.
(5315) {1198926} [1199347]: @param resizable the resize attribute @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's tool tip text to the argument, which may be null indicating that the default tool tip for the control will be shown.
(5319) {1199742} [1200090]: &lt;/p&gt; @param string the new tool tip text (or null) @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.2 ------------ Sets the width of the receiver.
(5320) {1200092} [1200435]: @param width the new width @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ====== TableItem.java ====== Copyright (c) 2000, 2015 IBM Corporation and others.
(5325) {1201400} [1201576]: ------------ Constructs a new instance of this class given its parent (which must be a &lt;code&gt;Table&lt;/code&gt;) and a style value describing its behavior and appearance.
(5330) {1202128} [1202951]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT @see Widget#checkSubclass @see Widget#getStyle ------------ Constructs a new instance of this class given its parent (which must be a &lt;code&gt;Table&lt;/code&gt;), a style value describing its behavior and appearance, and the index at which to place it in the items maintained by its parent.
(5334) {1203435} [1204263]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @param index the zero-relative index to store the receiver in its parent @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_RANGE - if the index is not between 0 and the number of elements in the parent (inclusive)&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT @see Widget#checkSubclass @see Widget#getStyle ------------ Returns the receiver's background color.
(5335) {1204265} [1204624]: @return the background color @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 2.0 ------------ Returns the background color at the given column index in the receiver.
(5336) {1204626} [1205043]: @param index the column index @return the background color @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.0 ------------ Returns a rectangle describing the size and location of the receiver's text relative to its parent.
(5337) {1205045} [1205470]: @return the bounding rectangle of the receiver's text @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.2 ------------ Returns a rectangle describing the receiver's size and location relative to its parent at a column in the table.
(5338) {1205472} [1205903]: @param index the index that specifies the column @return the receiver's bounding column rectangle @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver is checked, and false otherwise.
(5340) {1205992} [1206368]: @return the checked state of the checkbox @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the font that the receiver will use to paint textual information for this item.
(5341) {1206370} [1206766]: @return the receiver's font @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.0 ------------ Returns the font that the receiver will use to paint textual information for the specified cell in this item.
(5342) {1206768} [1207149]: @param index the column index @return the receiver's font @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.0 ------------ Returns the foreground color that the receiver will use to draw.
(5343) {1207151} [1207521]: @return the receiver's foreground color @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 2.0 ------------ Returns the foreground color at the given column index in the receiver.
(5344) {1207523} [1207926]: @param index the column index @return the foreground color @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.0 ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver is grayed, and false otherwise.
(5346) {1208014} [1208440]: @return the grayed state of the checkbox @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the image stored at the given column index in the receiver, or null if the image has not been set or if the column does not exist.
(5347) {1208442} [1208899]: @param index the column index @return the image stored at the given column index in the receiver @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns a rectangle describing the size and location relative to its parent of an image at a column in the table.
(5349) {1208988} [1209354]: @param index the index that specifies the column @return the receiver's bounding image rectangle @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Gets the image indent.
(5350) {1209356} [1209700]: @return the indent @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's parent, which must be a &lt;code&gt;Table&lt;/code&gt;.
(5351) {1209702} [1210091]: @return the receiver's parent @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the text stored at the given column index in the receiver, or empty string if the text has not been set.
(5352) {1210093} [1210549]: @param index the column index @return the text stored at the given column index in the receiver @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns a rectangle describing the size and location relative to its parent of the text at a column in the table.
(5354) {1210638} [1211138]: @param index the index that specifies the column @return the receiver's bounding text rectangle @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.3 ------------ Sets the receiver's background color to the color specified by the argument, or to the default system color for the item if the argument is null.
(5355) {1211140} [1211751]: @param color the new color (or null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the argument has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 2.0 ------------ Sets the background color at the given column index in the receiver to the color specified by the argument, or to the default system color for the item if the argument is null.
(5356) {1211753} [1212271]: @param index the column index @param color the new color (or null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the argument has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.0 ------------ Sets the checked state of the checkbox for this item.
(5358) {1212356} [1212851]: @param checked the new checked state of the checkbox @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the font that the receiver will use to paint textual information for this item to the font specified by the argument, or to the default font for that kind of control if the argument is null.
(5359) {1212853} [1213503]: @param font the new font (or null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the argument has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.0 ------------ Sets the font that the receiver will use to paint textual information for the specified cell in this item to the font specified by the argument, or to the default font for that kind of control if the argument is null.
(5360) {1213505} [1214113]: @param index the column index @param font the new font (or null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the argument has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.0 ------------ Sets the receiver's foreground color to the color specified by the argument, or to the default system color for the item if the argument is null.
(5361) {1214115} [1214726]: @param color the new color (or null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the argument has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 2.0 ------------ Sets the foreground color at the given column index in the receiver to the color specified by the argument, or to the default system color for the item if the argument is null.
(5362) {1214728} [1215245]: @param index the column index @param color the new color (or null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the argument has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.0 ------------ Sets the grayed state of the checkbox for this item.
(5364) {1215330} [1215678]: @param grayed the new grayed state of the checkbox; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the image for multiple columns in the table.
(5365) {1215680} [1216221]: @param images the array of new images @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the array of images is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if one of the images has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's image at a column.
(5366) {1216223} [1216748]: @param index the column index @param image the new image @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the image has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the indent of the first column's image, expressed in terms of the image's width.
(5367) {1216750} [1217153]: @param indent the new indent &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @deprecated this functionality is not supported on most platforms ------------ Sets the text for multiple columns in the table.
(5370) {1217278} [1217793]: &lt;/p&gt; @param strings the array of new strings @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the text is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's text at a column &lt;p&gt; Note: If control characters like '\n', '\t' etc.
(5372) {1217859} [1218363]: &lt;/p&gt; @param index the column index @param string the new text @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the text is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ====== TaskBar.java ====== Copyright (c) 2010, 2012 IBM Corporation and others.
(5375) {1218785} [1219164]: &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;(none)&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;(none)&lt;/dd&gt; &lt;/dl&gt; @see Display#getSystemTaskBar @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @since 3.6 @noextend This class is not intended to be subclassed by clients.
(5376) {1219165} [1219245]: ------------ Returns the item at the given, zero-relative index in the receiver.
(5378) {1219297} [1220049]: @param index the index of the item to return @return the item at the given index @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_RANGE - if the index is not between 0 and the number of elements in the list minus 1 (inclusive)&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the &lt;code&gt;TaskItem&lt;/code&gt; for the given &lt;code&gt;Shell&lt;/code&gt; or the &lt;code&gt;TaskItem&lt;/code&gt; for the application if the &lt;code&gt;Shell&lt;/code&gt; parameter is &lt;code&gt;null&lt;/code&gt;.
(5379) {1220050} [1220146]: If the requested item is not supported by the platform it returns &lt;code&gt;null&lt;/code&gt;.
(5380) {1220148} [1220611]: @param shell the shell for which the task item is requested, or null to request the application item @return the task item for the given shell or the application @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the number of items contained in the receiver.
(5381) {1220613} [1220979]: @return the number of items @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns an array of &lt;code&gt;TaskItem&lt;/code&gt;s which are the items in the receiver.
(5383) {1221134} [1221495]: &lt;/p&gt; @return the items in the receiver @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ====== TaskItem.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(5386) {1221909} [1222258]: &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Styles:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;(none)&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Events:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;(none)&lt;/dd&gt; &lt;/dl&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @since 3.6 @noextend This class is not intended to be subclassed by clients.
(5387) {1222259} [1222434]: ------------ Constructs a new instance of this class given its parent (which must be a &lt;code&gt;Tray&lt;/code&gt;) and a style value describing its behavior and appearance.
(5392) {1222986} [1223648]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT @see Widget#checkSubclass @see Widget#getStyle ------------ Returns the receiver's pop up menu if it has one, or null if it does not.
(5393) {1223650} [1224000]: @return the receiver's menu @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's overlay image if it has one, or null if it does not.
(5394) {1224002} [1224378]: @return the receiver's overlay image @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's overlay text, which will be an empty string if it has never been set.
(5395) {1224380} [1224743]: @return the receiver's overlay text @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's parent, which must be a &lt;code&gt;TaskBar&lt;/code&gt;.
(5396) {1224745} [1225054]: @return the receiver's parent @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's progress.
(5397) {1225056} [1225373]: @return the receiver's progress @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's progress state.
(5398) {1225375} [1225708]: @return the receiver's progress state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's pop up menu to the argument.
(5400) {1225758} [1225838]: &lt;p&gt; This feature might not be available for the receiver on all platforms.
(5402) {1225927} [1226319]: When the feature is not available, the get method will always return the NULL.&lt;/p&gt; &lt;p&gt; For better cross platform support, the application code should set this feature on the &lt;code&gt;TaskItem&lt;/code&gt; for application.&lt;br&gt; On Windows, this feature will only work on RCP applications.&lt;/p&gt; &lt;p&gt; The menu should be fully created before this method is called.
(5403) {1226320} [1227015]: Dynamic changes to the menu after the method is called will not be reflected in the native menu.&lt;/p&gt; @param menu the new pop up menu @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_MENU_NOT_POP_UP - the menu is not a pop up menu&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the menu has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's overlay image, which may be null indicating that no image should be displayed.
(5405) {1227123} [1227203]: &lt;p&gt; This feature might not be available for the receiver on all platforms.
(5407) {1227292} [1228102]: When the feature is not available, the get method will always return the NULL.&lt;/p&gt; &lt;p&gt; For better cross platform support, the application code should first try to set this feature on the &lt;code&gt;TaskItem&lt;/code&gt; for the main shell then on the &lt;code&gt;TaskItem&lt;/code&gt; for the application.&lt;/p&gt; @param overlayImage the new overlay image (may be null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the overlayImage has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's overlay text.
(5409) {1228235} [1228315]: &lt;p&gt; This feature might not be available for the receiver on all platforms.
(5411) {1228404} [1229262]: When the feature is not available, the get method will always return an empty string.&lt;/p&gt; &lt;p&gt; For better cross platform support, the application code should first try to set this feature on the &lt;code&gt;TaskItem&lt;/code&gt; for the main shell then on the &lt;code&gt;TaskItem&lt;/code&gt; for the application.&lt;/p&gt; @param overlayText the new overlay text @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the overlayText is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's progress, the progress represents a percentage and should be in range from 0 to 100.
(5412) {1229263} [1229369]: The progress is only shown when the progress state is different than &lt;code&gt;SWT#DEFAULT&lt;/code&gt;.
(5413) {1229371} [1229451]: &lt;p&gt; This feature might not be available for the receiver on all platforms.
(5415) {1229540} [1230716]: When the feature is not available, the get method will always return zero.&lt;/p&gt; &lt;p&gt; For better cross platform support, the application code should first try to set this feature on the &lt;code&gt;TaskItem&lt;/code&gt; for the main shell then on the &lt;code&gt;TaskItem&lt;/code&gt; for the application.&lt;/p&gt; @param progress the new progress @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; #see {@link #setProgressState(int)} ------------ Sets the receiver's progress state, the state can be one of the following: &lt;p&gt;&lt;ul&gt; &lt;li&gt;{@link SWT#DEFAULT}&lt;/li&gt; &lt;li&gt;{@link SWT#NORMAL}&lt;/li&gt; &lt;li&gt;{@link SWT#PAUSED}&lt;/li&gt; &lt;li&gt;{@link SWT#ERROR}&lt;/li&gt; &lt;li&gt;{@link SWT#INDETERMINATE}&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt; The percentage of progress shown by the states &lt;code&gt;SWT#NORMAL&lt;/code&gt;, &lt;code&gt;SWT#PAUSED&lt;/code&gt;, &lt;code&gt;SWT#ERROR&lt;/code&gt; is set with &lt;code&gt;setProgress()&lt;/code&gt;.
(5416) {1230717} [1230818]: &lt;br&gt; The state &lt;code&gt;SWT#DEFAULT&lt;/code&gt; indicates that no progress should be shown.
(5417) {1230820} [1230900]: &lt;p&gt; This feature might not be available for the receiver on all platforms.
(5419) {1230989} [1231735]: When the feature is not available, the get method will always return &lt;code&gt;SWT#DEFAULT&lt;/code&gt;.&lt;/p&gt; &lt;p&gt; For better cross platform support, the application code should first try to set this feature on the &lt;code&gt;TaskItem&lt;/code&gt; for the main shell then on the &lt;code&gt;TaskItem&lt;/code&gt; for the application.&lt;/p&gt; @param progressState the new progress state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; #see {@link #setProgress(int)} ====== Text.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(5426) {1232953} [1233061]: &lt;/p&gt; &lt;p&gt; Note: The styles ICON_CANCEL and ICON_SEARCH are hints used in combination with SEARCH.
(5433) {1233927} [1234012]: ------------ The maximum number of characters that can be entered into a text widget.
(5447) {1235838} [1236810]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT#SINGLE @see SWT#MULTI @see SWT#READ_ONLY @see SWT#WRAP @see SWT#LEFT @see SWT#RIGHT @see SWT#CENTER @see SWT#PASSWORD @see SWT#SEARCH @see SWT#ICON_SEARCH @see SWT#ICON_CANCEL @see Widget#checkSubclass @see Widget#getStyle ------------ Adds the listener to the collection of listeners who will be notified when the receiver's text is modified, by sending it one of the messages defined in the &lt;code&gt;ModifyListener&lt;/code&gt; interface.
(5448) {1236812} [1237311]: @param listener the listener which should be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see ModifyListener @see #removeModifyListener ------------ Adds a segment listener.
(5456) {1238026} [1238759]: &lt;/p&gt; @param listener the listener which should be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SegmentEvent @see SegmentListener @see #removeSegmentListener @since 3.8 ------------ Adds the listener to the collection of listeners who will be notified when the control is selected by the user, by sending it one of the messages defined in the &lt;code&gt;SelectionListener&lt;/code&gt; interface.
(5457) {1238760} [1238834]: &lt;p&gt; &lt;code&gt;widgetSelected&lt;/code&gt; is not called for texts.
(5458) {1238835} [1238989]: &lt;code&gt;widgetDefaultSelected&lt;/code&gt; is typically called when ENTER is pressed in a single-line text, or when ENTER is pressed in a search text.
(5459) {1238990} [1239197]: If the receiver has the &lt;code&gt;SWT.SEARCH | SWT.ICON_CANCEL&lt;/code&gt; style and the user cancels the search, the event object detail field contains the value &lt;code&gt;SWT.ICON_CANCEL&lt;/code&gt;.
(5460) {1239198} [1239402]: Likewise, if the receiver has the &lt;code&gt;SWT.ICON_SEARCH&lt;/code&gt; style and the icon search is selected, the event object detail field contains the value &lt;code&gt;SWT.ICON_SEARCH&lt;/code&gt;.
(5461) {1239403} [1240164]: &lt;/p&gt; @param listener the listener which should be notified when the control is selected by the user @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SelectionListener @see #removeSelectionListener @see SelectionEvent ------------ Adds the listener to the collection of listeners who will be notified when the receiver's text is verified, by sending it one of the messages defined in the &lt;code&gt;VerifyListener&lt;/code&gt; interface.
(5462) {1240166} [1240658]: @param listener the listener which should be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see VerifyListener @see #removeVerifyListener ------------ Appends a string.
(5463) {1240659} [1240731]: &lt;p&gt; The new text is appended to the text at the end of the widget.
(5464) {1240732} [1241176]: &lt;/p&gt; @param string the string to be appended @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the string is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Clears the selection.
(5465) {1241178} [1241449]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Copies the selected text.
(5467) {1241510} [1241791]: &lt;/p&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Cuts the selected text.
(5469) {1241891} [1242186]: &lt;/p&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the line number of the caret.
(5470) {1242187} [1242238]: &lt;p&gt; The line number of the caret is returned.
(5471) {1242239} [1242600]: &lt;/p&gt; @return the line number @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns a point describing the location of the caret relative to the receiver.
(5472) {1242602} [1242936]: @return a point, the location of the caret @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the character position of the caret.
(5474) {1242971} [1243297]: &lt;/p&gt; @return the position of the caret @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the number of characters.
(5475) {1243299} [1243627]: @return number of characters in the widget @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the double click enabled flag.
(5477) {1243747} [1244080]: &lt;/p&gt; @return whether or not double click is enabled @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the echo character.
(5479) {1244213} [1244545]: &lt;/p&gt; @return the echo character @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #setEchoChar ------------ Returns the editable state.
(5480) {1244547} [1244870]: @return whether or not the receiver is editable @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the number of lines.
(5481) {1244872} [1245188]: @return the number of lines in the widget @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the line delimiter.
(5482) {1245190} [1245527]: @return a string that is the line delimiter @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #DELIMITER ------------ Returns the height of a line.
(5483) {1245529} [1245977]: @return the height of a row of text @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the orientation of the receiver, which will be one of the constants &lt;code&gt;SWT.LEFT_TO_RIGHT&lt;/code&gt; or &lt;code&gt;SWT.RIGHT_TO_LEFT&lt;/code&gt;.
(5484) {1245979} [1246297]: @return the orientation style @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 2.1.2 ------------ Returns the widget message.
(5486) {1246390} [1246479]: &lt;p&gt; Typically this is used in conjunction with &lt;code&gt;SWT.SEARCH&lt;/code&gt;.
(5487) {1246480} [1246877]: &lt;/p&gt; @return the widget message @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.3 ------------ Returns the character position at the given point in the receiver or -1 if no such position exists.
(5490) {1246967} [1247490]: &lt;/p&gt; @return the position of the caret @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.3 ------------ Returns a &lt;code&gt;Point&lt;/code&gt; whose x coordinate is the character position representing the start of the selected text, and whose y coordinate is the character position representing the end of the selection.
(5494) {1247699} [1248057]: &lt;/p&gt; @return a point representing the selection start and end @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the number of selected characters.
(5495) {1248059} [1248101]: @return the number of selected characters.
(5496) {1248103} [1248425]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Gets the selected text, or an empty string if there is no current selection.
(5497) {1248427} [1248727]: @return the selected text @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the number of tabs.
(5500) {1248873} [1249193]: &lt;/p&gt; @return the number of tab characters @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the widget text.
(5501) {1249194} [1249310]: &lt;p&gt; The text for a text widget is the characters in the widget, or an empty string if this has never been set.
(5502) {1249311} [1249641]: &lt;/p&gt; @return the widget text @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the widget's text as a character array.
(5503) {1249642} [1249762]: &lt;p&gt; The text for a text widget is the characters in the widget, or a zero-length array if this has never been set.
(5507) {1250122} [1250503]: &lt;/p&gt; @return a character array that contains the widget's text @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #setTextChars(char[]) @since 3.7 ------------ Returns a range of text.
(5508) {1250505} [1250579]: Returns an empty string if the start of the range is greater than the end.
(5511) {1250706} [1251140]: &lt;/p&gt; @param start the start of the range @param end the end of the range @return the range of text @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the maximum number of characters that the receiver is capable of holding.
(5512) {1251141} [1251284]: &lt;p&gt; If this has not been changed by &lt;code&gt;setTextLimit()&lt;/code&gt;, it will be the constant &lt;code&gt;Text.LIMIT&lt;/code&gt;.
(5513) {1251285} [1251670]: &lt;/p&gt; @return the text limit @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #LIMIT ------------ Returns the zero-relative index of the line which is currently at the top of the receiver.
(5515) {1251762} [1252077]: &lt;/p&gt; @return the index of the top line @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the top pixel.
(5516) {1252078} [1252179]: &lt;p&gt; The top pixel is the pixel position of the line that is currently at the top of the widget.
(5518) {1252319} [1252389]: &lt;/p&gt;&lt;p&gt; The top pixel changes when the widget is scrolled.
(5520) {1252442} [1252761]: &lt;/p&gt; @return the pixel position of the top line @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Inserts a string.
(5521) {1252762} [1252820]: &lt;p&gt; The old selection is replaced with the new text.
(5522) {1252821} [1253281]: &lt;/p&gt; @param string the string @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the string is &lt;code&gt;null&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Pastes text from clipboard.
(5524) {1253379} [1253749]: &lt;/p&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Removes the listener from the collection of listeners who will be notified when the receiver's text is modified.
(5525) {1253751} [1254345]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see ModifyListener @see #addModifyListener ------------ Removes the listener from the collection of listeners who will be notified when the receiver's text is modified.
(5526) {1254347} [1254977]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SegmentEvent @see SegmentListener @see #addSegmentListener @since 3.8 ------------ Removes the listener from the collection of listeners who will be notified when the control is selected by the user.
(5527) {1254979} [1255571]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SelectionListener @see #addSelectionListener ------------ Removes the listener from the collection of listeners who will be notified when the control is verified.
(5528) {1255573} [1256092]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see VerifyListener @see #addVerifyListener ------------ Selects all the text in the receiver.
(5529) {1256094} [1256375]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the double click enabled flag.
(5531) {1256495} [1256610]: &lt;/p&gt;&lt;p&gt; Note: This operation is a hint and is not supported on platforms that do not have this concept.
(5532) {1256611} [1256939]: &lt;/p&gt; @param doubleClick the new double click flag @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the echo character.
(5536) {1257336} [1257654]: &lt;/p&gt; @param echo the new echo character @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the editable state.
(5537) {1257656} [1257966]: @param editable the new editable state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the widget message.
(5539) {1258058} [1258147]: &lt;p&gt; Typically this is used in conjunction with &lt;code&gt;SWT.SEARCH&lt;/code&gt;.
(5540) {1258148} [1258737]: &lt;/p&gt; @param message the new message @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the message is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.3 ------------ Sets the orientation of the receiver, which must be one of the constants &lt;code&gt;SWT.LEFT_TO_RIGHT&lt;/code&gt; or &lt;code&gt;SWT.RIGHT_TO_LEFT&lt;/code&gt;.
(5541) {1258738} [1258843]: &lt;p&gt; Note: This operation is a hint and is not supported on platforms that do not have this concept.
(5542) {1258844} [1259177]: &lt;/p&gt; @param orientation new orientation style @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 2.1.2 ------------ Sets the selection.
(5545) {1259302} [1259380]: &lt;/p&gt;&lt;p&gt; Text selections are specified in terms of caret positions.
(5547) {1259606} [1259974]: &lt;/p&gt; @param start new caret position @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the selection to the range specified by the given start and end indices.
(5550) {1260099} [1260177]: &lt;/p&gt;&lt;p&gt; Text selections are specified in terms of caret positions.
(5552) {1260401} [1260886]: &lt;/p&gt; @param start the start of the range @param end the end of the range @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the selection to the range specified by the given point, where the x coordinate represents the start index and the y coordinate represents the end index.
(5555) {1261011} [1261089]: &lt;/p&gt;&lt;p&gt; Text selections are specified in terms of caret positions.
(5557) {1261313} [1261746]: &lt;/p&gt; @param selection the point @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the point is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the number of tabs.
(5560) {1261892} [1262248]: &lt;/p&gt; @param tabs the number of tabs &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the contents of the receiver to the given string.
(5562) {1262414} [1262472]: &lt;p&gt; Note: If control characters like '\n', '\t' etc.
(5564) {1262538} [1263012]: &lt;/p&gt; @param string the new text @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the string is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the contents of the receiver to the characters in the array.
(5569) {1263551} [1264121]: &lt;/p&gt; @param text a character array that contains the new text @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the array is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #getTextChars() @since 3.7 ------------ Sets the maximum number of characters that the receiver is capable of holding to be the argument.
(5571) {1264224} [1264334]: &lt;/p&gt;&lt;p&gt; To reset this value to the default, use &lt;code&gt;setTextLimit(Text.LIMIT)&lt;/code&gt;.
(5572) {1264335} [1264473]: Specifying a limit value larger than &lt;code&gt;Text.LIMIT&lt;/code&gt; sets the receiver's limit to &lt;code&gt;Text.LIMIT&lt;/code&gt;.
(5573) {1264474} [1264985]: &lt;/p&gt; @param limit new text limit @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_CANNOT_BE_ZERO - if the limit is zero&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #LIMIT ------------ Sets the zero-relative index of the line which is currently at the top of the receiver.
(5575) {1265069} [1265375]: @param index the index of the top item @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Shows the selection.
(5578) {1265530} [1265858]: &lt;/p&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ====== TextLayout.java ====== Copyright (c) 2000, 2015 IBM Corporation and others.
(5584) {1266705} [1267128]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/snippets/#textlayout"&gt;TextLayout, TextStyle snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: CustomControlExample, StyledText tab&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @since 3.0 ------------ Constructs a new instance of this class on the given device.
(5586) {1267203} [1267531]: &lt;/p&gt; @param device the device on which to allocate the text layout @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if device is null and there is no current device&lt;/li&gt; &lt;/ul&gt; @see #dispose() ------------ Draws the receiver's text using the specified GC at the specified point.
(5587) {1267533} [1268097]: @param gc the GC to draw @param x the x coordinate of the top left corner of the rectangular area where the text is to be drawn @param y the y coordinate of the top left corner of the rectangular area where the text is to be drawn @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the gc is null&lt;/li&gt; &lt;/ul&gt; ------------ Draws the receiver's text using the specified GC at the specified point.
(5588) {1268099} [1269021]: @param gc the GC to draw @param x the x coordinate of the top left corner of the rectangular area where the text is to be drawn @param y the y coordinate of the top left corner of the rectangular area where the text is to be drawn @param selectionStart the offset where the selections starts, or -1 indicating no selection @param selectionEnd the offset where the selections ends, or -1 indicating no selection @param selectionForeground selection foreground, or NULL to use the system default color @param selectionBackground selection background, or NULL to use the system default color @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the gc is null&lt;/li&gt; &lt;/ul&gt; ------------ Draws the receiver's text using the specified GC at the specified point.
(5589) {1269022} [1269395]: &lt;p&gt; The parameter &lt;code&gt;flags&lt;/code&gt; can include one of &lt;code&gt;SWT.DELIMITER_SELECTION&lt;/code&gt; or &lt;code&gt;SWT.FULL_SELECTION&lt;/code&gt; to specify the selection behavior on all lines except for the last line, and can also include &lt;code&gt;SWT.LAST_LINE_SELECTION&lt;/code&gt; to extend the specified selection behavior to the last line.
(5590) {1269396} [1270478]: &lt;/p&gt; @param gc the GC to draw @param x the x coordinate of the top left corner of the rectangular area where the text is to be drawn @param y the y coordinate of the top left corner of the rectangular area where the text is to be drawn @param selectionStart the offset where the selections starts, or -1 indicating no selection @param selectionEnd the offset where the selections ends, or -1 indicating no selection @param selectionForeground selection foreground, or NULL to use the system default color @param selectionBackground selection background, or NULL to use the system default color @param flags drawing options @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the gc is null&lt;/li&gt; &lt;/ul&gt; @since 3.3 ------------ Returns the receiver's horizontal text alignment, which will be one of &lt;code&gt;SWT.LEFT&lt;/code&gt;, &lt;code&gt;SWT.CENTER&lt;/code&gt; or &lt;code&gt;SWT.RIGHT&lt;/code&gt;.
(5591) {1270480} [1270715]: @return the alignment used to positioned text horizontally @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns the ascent of the receiver.
(5592) {1270717} [1271001]: @return the ascent @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see #getDescent() @see #setDescent(int) @see #setAscent(int) @see #getLineMetrics(int) ------------ Returns the bounds of the receiver.
(5595) {1271198} [1271477]: @return the bounds of the receiver @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see #setWidth(int) @see #getLineBounds(int) ------------ Returns the bounds for the specified range of characters.
(5598) {1271639} [1271914]: @param start the start offset @param end the end offset @return the bounds of the character range @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns the descent of the receiver.
(5599) {1271916} [1272252]: @return the descent @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see #getAscent() @see #setAscent(int) @see #setDescent(int) @see #getLineMetrics(int) ------------ Returns the default font currently being used by the receiver to draw and measure text.
(5600) {1272254} [1272453]: @return the receiver's font @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's indent.
(5601) {1272455} [1272818]: @return the receiver's indent @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.2 / public int getIndent () { checkLayout(); return DPIUtil.autoScaleDown(getDevice(), getIndentInPixels()); } int getIndentInPixels () { return indent; } Returns the receiver's justification.
(5602) {1272820} [1273408]: @return the receiver's justification @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.2 / public boolean getJustify () { checkLayout(); return justify; } long /*int*/ getItemFont (StyleItem item) { if (item.fallbackFont != 0) return item.fallbackFont; if (item.style != null &amp;&amp; item.style.font != null) { return item.style.font.handle; } if (this.font != null) { return this.font.handle; } return device.systemFont.handle; } Returns the embedding level for the specified character offset.
(5604) {1273516} [1273913]: @param offset the character offset @return the embedding level @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the character offset is out of range&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; ------------ Returns the bounds of the line for the specified line index.
(5605) {1273915} [1274285]: @param lineIndex the line index @return the line bounds @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the line index is out of range&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's line count.
(5607) {1274327} [1274566]: @return the line count @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns the index of the line that contains the specified character offset.
(5608) {1274568} [1274966]: @param offset the character offset @return the line index @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the character offset is out of range&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns the font metrics for the specified line index.
(5609) {1274968} [1275330]: @param lineIndex the line index @return the font metrics @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the line index is out of range&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns the line offsets.
(5611) {1275471} [1275693]: @return the line offsets @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns the location for the specified character offset.
(5613) {1275831} [1276217]: @param offset the character offset @param trailing the trailing flag @return the location of the character offset @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see #getOffset(Point, int[]) @see #getOffset(int, int, int[]) ------------ Returns the next offset for the specified offset and movement type.
(5614) {1276219} [1276476]: The movement is one of &lt;code&gt;SWT.MOVEMENT_CHAR&lt;/code&gt;, &lt;code&gt;SWT.MOVEMENT_CLUSTER&lt;/code&gt;, &lt;code&gt;SWT.MOVEMENT_WORD&lt;/code&gt;, &lt;code&gt;SWT.MOVEMENT_WORD_END&lt;/code&gt; or &lt;code&gt;SWT.MOVEMENT_WORD_START&lt;/code&gt;.
(5615) {1276478} [1276931]: @param offset the start offset @param movement the movement type @return the next offset @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the offset is out of range&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see #getPreviousOffset(int, int) ------------ Returns the character offset for the specified point.
(5618) {1277272} [1277819]: @param point the point @param trailing the trailing buffer @return the character offset @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the trailing length is less than &lt;code&gt;1&lt;/code&gt;&lt;/li&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the point is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see #getLocation(int, boolean) ------------ Returns the character offset for the specified point.
(5621) {1278160} [1278685]: @param x the x coordinate of the point @param y the y coordinate of the point @param trailing the trailing buffer @return the character offset @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the trailing length is less than &lt;code&gt;1&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see #getLocation(int, boolean) ------------ Returns the orientation of the receiver.
(5622) {1278687} [1278929]: @return the orientation style @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns the previous offset for the specified offset and movement type.
(5623) {1278931} [1279190]: The movement is one of &lt;code&gt;SWT.MOVEMENT_CHAR&lt;/code&gt;, &lt;code&gt;SWT.MOVEMENT_CLUSTER&lt;/code&gt; or &lt;code&gt;SWT.MOVEMENT_WORD&lt;/code&gt;, &lt;code&gt;SWT.MOVEMENT_WORD_END&lt;/code&gt; or &lt;code&gt;SWT.MOVEMENT_WORD_START&lt;/code&gt;.
(5624) {1279192} [1279678]: @param offset the start offset @param movement the movement type @return the previous offset @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the offset is out of range&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see #getNextOffset(int, int) ------------ Gets the ranges of text that are associated with a &lt;code&gt;TextStyle&lt;/code&gt;.
(5626) {1279772} [1279993]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see #getStyles() @since 3.2 ------------ Returns the text segments offsets of the receiver.
(5627) {1279995} [1280218]: @return the text segments offsets @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns the segments characters of the receiver.
(5628) {1280220} [1280446]: @return the segments characters @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.6 ------------ Returns the line spacing of the receiver.
(5629) {1280448} [1280679]: @return the line spacing @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Gets the style of the receiver at the specified character offset.
(5630) {1280681} [1281091]: @param offset the text offset @return the style or &lt;code&gt;null&lt;/code&gt; if not set @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the character offset is out of range&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Gets all styles of the receiver.
(5631) {1281093} [1281321]: @return the styles @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see #getRanges() @since 3.2 ------------ Returns the tab list of the receiver.
(5632) {1281323} [1281566]: @return the tab list @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Gets the receiver's text, which will be an empty string if it has never been set.
(5633) {1281568} [1281780]: @return the receiver's text @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns the text direction of the receiver.
(5634) {1281782} [1282003]: @return the text direction value @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.103 ------------ Returns the width of the receiver.
(5635) {1282005} [1282199]: @return the width @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's wrap indent.
(5636) {1282201} [1282669]: @return the receiver's wrap indent @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.6 / public int getWrapIndent () { checkLayout(); return DPIUtil.autoScaleDown(getDevice(), getWrapIndentInPixels()); } int getWrapIndentInPixels () { return wrapIndent; } Returns &lt;code&gt;true&lt;/code&gt; if the text layout has been disposed, and &lt;code&gt;false&lt;/code&gt; otherwise.
(5639) {1282867} [1283049]: &lt;/p&gt; @return &lt;code&gt;true&lt;/code&gt; when the text layout is disposed and &lt;code&gt;false&lt;/code&gt; otherwise ------------ Sets the text alignment for the receiver.
(5641) {1283120} [1283259]: The argument should be one of &lt;code&gt;SWT.LEFT&lt;/code&gt;, &lt;code&gt;SWT.RIGHT&lt;/code&gt; or &lt;code&gt;SWT.CENTER&lt;/code&gt;.
(5642) {1283260} [1283329]: &lt;p&gt; The default alignment is &lt;code&gt;SWT.LEFT&lt;/code&gt;.
(5643) {1283331} [1283474]: Note that the receiver's width must be set in order to use &lt;code&gt;SWT.RIGHT&lt;/code&gt; or &lt;code&gt;SWT.CENTER&lt;/code&gt; alignment.
(5644) {1283475} [1283716]: &lt;/p&gt; @param alignment the new alignment @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see #setWidth(int) ------------ Sets the ascent of the receiver.
(5646) {1283823} [1283934]: The default value is &lt;code&gt;-1&lt;/code&gt; which means that the ascent is calculated from the line fonts.
(5647) {1283936} [1284348]: @param ascent the new ascent @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the ascent is less than &lt;code&gt;-1&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see #setDescent(int) @see #getLineMetrics(int) ------------ Sets the descent of the receiver.
(5649) {1284459} [1284571]: The default value is &lt;code&gt;-1&lt;/code&gt; which means that the descent is calculated from the line fonts.
(5650) {1284573} [1285036]: @param descent the new descent @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the descent is less than &lt;code&gt;-1&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see #setAscent(int) @see #getLineMetrics(int) ------------ Sets the default font which will be used by the receiver to draw and measure text.
(5653) {1285188} [1285574]: @param font the new font for the receiver, or null to indicate a default font @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the font has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Sets the indent of the receiver.
(5655) {1285636} [1285879]: @param indent new indent @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see #setWrapIndent(int) @since 3.2 ------------ Sets the justification of the receiver.
(5656) {1285880} [1285953]: Note that the receiver's width must be set in order to use justification.
(5657) {1285955} [1286283]: @param justify new justify @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.2 ------------ Sets the orientation of the receiver, which must be one of &lt;code&gt;SWT.LEFT_TO_RIGHT&lt;/code&gt; or &lt;code&gt;SWT.RIGHT_TO_LEFT&lt;/code&gt;.
(5658) {1286285} [1286516]: @param orientation new orientation style @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Sets the offsets of the receiver's text segments.
(5661) {1286702} [1286819]: &lt;p&gt; Each text segment is determined by two consecutive offsets in the &lt;code&gt;segments&lt;/code&gt; arrays.
(5664) {1287068} [1287351]: &lt;p&gt; @param segments the text segments offset @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see #setSegmentsChars(char[]) ------------ Sets the characters to be used in the segments boundaries.
(5665) {1287352} [1287428]: The segments are set by calling &lt;code&gt;setSegments(int[])&lt;/code&gt;.
(5667) {1287567} [1287657]: The characters are not accessible by any other API in &lt;code&gt;TextLayout&lt;/code&gt;.
(5668) {1287659} [1287921]: @param segmentsChars the segments characters @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see #setSegments(int[]) @since 3.6 ------------ Sets the line spacing of the receiver.
(5670) {1287974} [1288338]: @param spacing the new line spacing @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the spacing is negative&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Sets the style of the receiver for the specified range.
(5673) {1288477} [1288726]: @param style the style @param start the start offset @param end the end offset @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's tab list.
(5676) {1288899} [1289094]: @param tabs the new tab list @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's text.
(5679) {1289248} [1289749]: &lt;/p&gt; @param text the new text @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the text is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Sets the text direction of the receiver, which must be one of &lt;code&gt;SWT.LEFT_TO_RIGHT&lt;/code&gt;, &lt;code&gt;SWT.RIGHT_TO_LEFT&lt;/code&gt; or &lt;code&gt;SWT.AUTO_TEXT_DIRECTION&lt;/code&gt;.
(5682) {1289897} [1290200]: &lt;/p&gt; @param textDirection the new text direction @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.103 ------------ Sets the line width of the receiver, which determines how text should be wrapped and aligned.
(5683) {1290201} [1290283]: The default value is &lt;code&gt;-1&lt;/code&gt; which means wrapping is disabled.
(5684) {1290285} [1290704]: @param width the new width @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the width is &lt;code&gt;0&lt;/code&gt; or less than &lt;code&gt;-1&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see #setAlignment(int) ------------ Sets the wrap indent of the receiver.
(5686) {1290782} [1291073]: @param wrapIndent new wrap indent @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see #setIndent(int) @since 3.6 ------------ Returns a string containing a concise, human-readable description of the receiver.
(5687) {1291075} [1291205]: @return a string representation of the receiver ====== TextStyle.java ====== Copyright (c) 2000, 2010 IBM Corporation and others.
(5692) {1291848} [1292093]: &lt;/p&gt; &lt;p&gt; Application code does &lt;em&gt;not&lt;/em&gt; need to explicitly release the resources managed by each instance when those instances are no longer required, and thus no &lt;code&gt;dispose()&lt;/code&gt; method is provided.
(5693) {1292094} [1292560]: &lt;/p&gt; @see TextLayout @see Font @see Color @see &lt;a href="http://www.eclipse.org/swt/snippets/#textlayout"&gt;TextLayout, TextStyle snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @since 3.0 ------------ the font of the style public Font font; the foreground of the style public Color foreground; the background of the style public Color background; the underline flag of the style.
(5696) {1292782} [1292853]: This style is ignored when &lt;code&gt;underline&lt;/code&gt; is false.
(5697) {1292854} [1293128]: &lt;p&gt; This value should be one of &lt;code&gt;SWT.UNDERLINE_SINGLE&lt;/code&gt;, &lt;code&gt;SWT.UNDERLINE_DOUBLE&lt;/code&gt;, &lt;code&gt;SWT.UNDERLINE_ERROR&lt;/code&gt;, &lt;code&gt;SWT.UNDERLINE_SQUIGGLE&lt;/code&gt;, or &lt;code&gt;SWT.UNDERLINE_LINK&lt;/code&gt;.
(5699) {1293484} [1293546]: The default border style is &lt;code&gt;SWT.NONE&lt;/code&gt;.
(5700) {1293547} [1293746]: &lt;p&gt; This value should be one of &lt;code&gt;SWT.BORDER_SOLID&lt;/code&gt;, &lt;code&gt;SWT.BORDER_DASH&lt;/code&gt;,&lt;code&gt;SWT.BORDER_DOT&lt;/code&gt; or &lt;code&gt;SWT.NONE&lt;/code&gt;.
(5704) {1294119} [1294270]: It can be used to hold the HREF when the range is used as a link or the embed object when the range is used with &lt;code&gt;GlyphMetrics&lt;/code&gt;.
(5705) {1294271} [1294344]: &lt;p&gt; * @since 3.5 public Object data; Create an empty text style.
(5707) {1294447} [1294767]: @param font the font of the style, &lt;code&gt;null&lt;/code&gt; if none @param foreground the foreground color of the style, &lt;code&gt;null&lt;/code&gt; if none @param background the background color of the style, &lt;code&gt;null&lt;/code&gt; if none ------------ Create a new text style from an existing text style.
(5708) {1294769} [1294970]: @param style the style to copy @since 3.4 ------------ Compares the argument to the receiver, and returns true if they represent the &lt;em&gt;same&lt;/em&gt; object using a class specific comparison.
(5709) {1294972} [1295226]: @param object the object to compare with this object @return &lt;code&gt;true&lt;/code&gt; if the object is the same as this object and &lt;code&gt;false&lt;/code&gt; otherwise @see #hashCode() ------------ Returns an integer hash code for the receiver.
(5710) {1295227} [1295375]: Any two objects that return &lt;code&gt;true&lt;/code&gt; when passed to &lt;code&gt;equals&lt;/code&gt; must return the same value for this method.
(5711) {1295377} [1295522]: @return the receiver's hash @see #equals(Object) ------------ Returns a string containing a concise, human-readable description of the receiver.
(5712) {1295524} [1295684]: @return a string representation of the &lt;code&gt;TextStyle&lt;/code&gt; ====== TIFFDirectory.java ====== Copyright (c) 2000, 2009 IBM Corporation and others.
(5723) {1297705} [1297828]: &lt;p&gt; The item children that may be added to instances of this class must be of type &lt;code&gt;ToolItem&lt;/code&gt;.
(5732) {1299438} [1300190]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT#FLAT @see SWT#WRAP @see SWT#RIGHT @see SWT#HORIZONTAL @see SWT#SHADOW_OUT @see SWT#VERTICAL @see Widget#checkSubclass() @see Widget#getStyle() ------------ Returns the item at the given, zero-relative index in the receiver.
(5734) {1300242} [1300844]: @param index the index of the item to return @return the item at the given index @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_RANGE - if the index is not between 0 and the number of elements in the list minus 1 (inclusive)&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the item at the given point in the receiver or null if no such item exists.
(5736) {1300901} [1301408]: @param point the point used to locate the item @return the item at the given point @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the point is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the number of items contained in the receiver.
(5737) {1301410} [1301776]: @return the number of items @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns an array of &lt;code&gt;ToolItem&lt;/code&gt;s which are the items in the receiver.
(5739) {1301931} [1302267]: &lt;/p&gt; @return the items in the receiver @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the number of rows in the receiver.
(5740) {1302268} [1302374]: When the receiver has the &lt;code&gt;WRAP&lt;/code&gt; style, the number of rows can be greater than one.
(5742) {1302422} [1302852]: @return the number of items @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Searches the receiver's list starting at the first item (index 0) until an item is found that is equal to the argument, and returns the index of that item.
(5744) {1302887} [1303468]: @param item the search item @return the index of the item @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the tool item is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the tool item has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ====== ToolItem.java ====== Copyright (c) 2000, 2015 IBM Corporation and others.
(5750) {1304575} [1304753]: ------------ Constructs a new instance of this class given its parent (which must be a &lt;code&gt;ToolBar&lt;/code&gt;) and a style value describing its behavior and appearance.
(5755) {1305305} [1306203]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT#PUSH @see SWT#CHECK @see SWT#RADIO @see SWT#SEPARATOR @see SWT#DROP_DOWN @see Widget#checkSubclass @see Widget#getStyle ------------ Constructs a new instance of this class given its parent (which must be a &lt;code&gt;ToolBar&lt;/code&gt;), a style value describing its behavior and appearance, and the index at which to place it in the items maintained by its parent.
(5759) {1306687} [1307762]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @param index the zero-relative index to store the receiver in its parent @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_RANGE - if the index is not between 0 and the number of elements in the parent (inclusive)&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT#PUSH @see SWT#CHECK @see SWT#RADIO @see SWT#SEPARATOR @see SWT#DROP_DOWN @see Widget#checkSubclass @see Widget#getStyle ------------ Adds the listener to the collection of listeners who will be notified when the control is selected by the user, by sending it one of the messages defined in the &lt;code&gt;SelectionListener&lt;/code&gt; interface.
(5761) {1307975} [1308036]: &lt;code&gt;widgetDefaultSelected&lt;/code&gt; is not called.
(5762) {1308037} [1308290]: &lt;/p&gt; &lt;p&gt; When the &lt;code&gt;SWT.RADIO&lt;/code&gt; style bit is set, the &lt;code&gt;widgetSelected&lt;/code&gt; method is also called when the receiver loses selection because another item in the same radio group was selected by the user.
(5763) {1308291} [1308458]: During &lt;code&gt;widgetSelected&lt;/code&gt; the application can use &lt;code&gt;getSelection()&lt;/code&gt; to determine the current selected state of the receiver.
(5764) {1308459} [1309101]: &lt;/p&gt; @param listener the listener which should be notified when the control is selected by the user, @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SelectionListener @see #removeSelectionListener @see SelectionEvent ------------ Returns a rectangle describing the receiver's size and location relative to its parent.
(5765) {1309103} [1309510]: @return the receiver's bounding rectangle @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the control that is used to fill the bounds of the item when the item is a &lt;code&gt;SEPARATOR&lt;/code&gt;.
(5766) {1309512} [1309855]: @return the control @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's disabled image if it has one, or null if it does not.
(5767) {1309856} [1309928]: &lt;p&gt; The disabled image is displayed when the receiver is disabled.
(5768) {1309929} [1310337]: &lt;/p&gt; @return the receiver's disabled image @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver is enabled, and &lt;code&gt;false&lt;/code&gt; otherwise.
(5770) {1310455} [1310827]: @return the receiver's enabled state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #isEnabled ------------ Returns the receiver's hot image if it has one, or null if it does not.
(5771) {1310828} [1310900]: &lt;p&gt; The hot image is displayed when the mouse enters the receiver.
(5772) {1310901} [1311273]: &lt;/p&gt; @return the receiver's hot image @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's parent, which must be a &lt;code&gt;ToolBar&lt;/code&gt;.
(5773) {1311275} [1311639]: @return the receiver's parent @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver is selected, and false otherwise.
(5776) {1311895} [1312251]: &lt;/p&gt; @return the selection state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's tool tip text, or null if it has not been set.
(5777) {1312253} [1312568]: @return the receiver's tool tip text @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Gets the width of the receiver.
(5778) {1312570} [1312994]: @return the width @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver is enabled and all of the receiver's ancestors are enabled, and &lt;code&gt;false&lt;/code&gt; otherwise.
(5780) {1313112} [1313530]: @return the receiver's enabled state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #getEnabled ------------ Removes the listener from the collection of listeners who will be notified when the control is selected by the user.
(5781) {1313532} [1314135]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SelectionListener @see #addSelectionListener ------------ Sets the control that is used to fill the bounds of the item when the item is a &lt;code&gt;SEPARATOR&lt;/code&gt;.
(5782) {1314137} [1314740]: @param control the new control @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the control has been disposed&lt;/li&gt; &lt;li&gt;ERROR_INVALID_PARENT - if the control is not in the same widget tree&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Enables the receiver if the argument is &lt;code&gt;true&lt;/code&gt;, and disables it otherwise.
(5784) {1314867} [1315287]: &lt;/p&gt; @param enabled the new enabled state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's disabled image to the argument, which may be null indicating that no disabled image should be displayed.
(5785) {1315288} [1315360]: &lt;p&gt; The disabled image is displayed when the receiver is disabled.
(5786) {1315361} [1315943]: &lt;/p&gt; @param image the disabled image to display on the receiver (may be null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the image has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's hot image to the argument, which may be null indicating that no hot image should be displayed.
(5787) {1315944} [1316016]: &lt;p&gt; The hot image is displayed when the mouse enters the receiver.
(5788) {1316017} [1316521]: &lt;/p&gt; @param image the hot image to display on the receiver (may be null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the image has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the selection state of the receiver.
(5790) {1316712} [1317036]: &lt;/p&gt; @param selected the new selection state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's text.
(5796) {1317530} [1317598]: &lt;/p&gt;&lt;p&gt; Note: If control characters like '\n', '\t' etc.
(5798) {1317664} [1318208]: &lt;/p&gt; @param string the new text @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the text is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's tool tip text to the argument, which may be null indicating that the default tool tip for the control will be shown.
(5802) {1318603} [1318989]: &lt;/p&gt; @param string the new tool tip text (or null) @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the width of the receiver, for &lt;code&gt;SEPARATOR&lt;/code&gt; ToolItems.
(5803) {1318991} [1319018]: @param width the new width.
(5804) {1319019} [1319152]: If the new value is &lt;code&gt;SWT.DEFAULT&lt;/code&gt;, the width is a fixed-width area whose amount is determined by the platform.
(5805) {1319153} [1319359]: If the new value is 0 a vertical or horizontal line will be drawn, depending on the setting of the corresponding style bit (&lt;code&gt;SWT.VERTICAL&lt;/code&gt; or &lt;code&gt;SWT.HORIZONTAL&lt;/code&gt;).
(5807) {1319580} [1319893]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ====== ToolTip.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(5817) {1321730} [1322610]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT#BALLOON @see SWT#ICON_ERROR @see SWT#ICON_INFORMATION @see SWT#ICON_WARNING @see Widget#checkSubclass @see Widget#getStyle ------------ Adds the listener to the collection of listeners who will be notified when the receiver is selected by the user, by sending it one of the messages defined in the &lt;code&gt;SelectionListener&lt;/code&gt; interface.
(5818) {1322611} [1322701]: &lt;p&gt; &lt;code&gt;widgetSelected&lt;/code&gt; is called when the receiver is selected.
(5819) {1322702} [1322763]: &lt;code&gt;widgetDefaultSelected&lt;/code&gt; is not called.
(5820) {1322764} [1323459]: &lt;/p&gt; @param listener the listener which should be notified when the receiver is selected by the user @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SelectionListener @see #removeSelectionListener @see SelectionEvent ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver is automatically hidden by the platform, and &lt;code&gt;false&lt;/code&gt; otherwise.
(5821) {1323461} [1323834]: @return the receiver's auto hide state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's message, which will be an empty string if it has never been set.
(5822) {1323836} [1324192]: @return the receiver's message @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's parent, which must be a &lt;code&gt;Shell&lt;/code&gt;.
(5823) {1324194} [1324555]: @return the receiver's parent @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's text, which will be an empty string if it has never been set.
(5824) {1324557} [1324943]: @return the receiver's text @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver is visible, and &lt;code&gt;false&lt;/code&gt; otherwise.
(5826) {1325165} [1325622]: &lt;/p&gt; @return the receiver's visibility state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver is visible and all of the receiver's ancestors are visible and &lt;code&gt;false&lt;/code&gt; otherwise.
(5827) {1325624} [1326046]: @return the receiver's visibility state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #getVisible ------------ Removes the listener from the collection of listeners who will be notified when the receiver is selected by the user.
(5828) {1326048} [1326665]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SelectionListener @see #addSelectionListener ------------ Makes the receiver hide automatically when &lt;code&gt;true&lt;/code&gt;, and remain visible when &lt;code&gt;false&lt;/code&gt;.
(5829) {1326667} [1327119]: @param autoHide the auto hide state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #getVisible @see #setVisible ------------ Sets the location of the receiver, which must be a tooltip, to the point specified by the arguments which are relative to the display.
(5831) {1327236} [1327721]: &lt;/p&gt; @param x the new x coordinate for the receiver @param y the new y coordinate for the receiver @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the location of the receiver, which must be a tooltip, to the point specified by the argument which is relative to the display.
(5833) {1327838} [1327949]: &lt;/p&gt;&lt;p&gt; Note that the platform window manager ultimately has control over the location of tooltips.
(5834) {1327950} [1328410]: &lt;/p&gt; @param location the new location for the receiver @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the point is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's message.
(5835) {1328412} [1328836]: @param string the new message @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the text is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's text.
(5836) {1328838} [1329347]: @param string the new text @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the text is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Marks the receiver as visible if the argument is &lt;code&gt;true&lt;/code&gt;, and marks it invisible otherwise.
(5838) {1329526} [1329890]: &lt;/p&gt; @param visible the new visibility state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ====== Touch.java ====== Copyright (c) 2010, 2011 IBM Corporation and others.
(5841) {1330295} [1330382]: They are found in the &lt;code&gt;touches&lt;/code&gt; field of an Event or TouchEvent.
(5854) {1332069} [1332197]: @return a string representation of the event ====== TouchEvent.java ====== Copyright (c) 2010, 2011 IBM Corporation and others.
(5857) {1332600} [1332857]: @see TouchListener @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @since 3.7 ------------ The set of touches representing the state of all contacts with touch input device at the time the event was generated.
(5858) {1332858} [1333014]: * @see org.eclipse.swt.widgets.Touch public Touch[] touches; The state of the keyboard modifier keys and mouse masks at the time the event was generated.
(5863) {1333618} [1333749]: @return a string representation of the event ====== TouchListener.java ====== Copyright (c) 2010, 2016 IBM Corporation and others.
(5867) {1334507} [1334603]: When a touch occurs or changes state, the &lt;code&gt;touch&lt;/code&gt; method will be invoked.
(5870) {1334763} [1334874]: &lt;/p&gt; @see TouchEvent @since 3.7 ------------ Sent when a touch sequence begins, changes state, or ends.
(5871) {1334876} [1335017]: @param e an event containing information about the touch ====== TouchSource.java ====== Copyright (c) 2010, 2012 IBM Corporation and others.
(5875) {1335592} [1335824]: &lt;p&gt; Instances of this class can be marked as direct or indirect: &lt;ul&gt; &lt;li&gt;When an instance is &lt;em&gt;direct&lt;/em&gt;, the touch source is a touch-sensitive digitizer surface such as a tablet or a touch screen.
(5879) {1336396} [1336604]: &lt;/li&gt; &lt;/ul&gt; @see Touch @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @since 3.7 ------------ Constructs a new touch source from the given inputs.
(5881) {1336660} [1336705]: @param height height of the source in pixels.
(5882) {1336706} [1336749]: @param width width of the source in pixels.
(5883) {1336750} [1336906]: ------------ Returns the type of touch input this source generates, &lt;code&gt;true&lt;/code&gt; for direct or &lt;code&gt;false&lt;/code&gt; for indirect.
(5884) {1336908} [1337079]: @return &lt;code&gt;true&lt;/code&gt; if the input source is direct, or &lt;code&gt;false&lt;/code&gt; otherwise ------------ Returns the bounding rectangle of the device.
(5888) {1337341} [1337487]: @return the bounding rectangle of the input source ------------ Returns a string containing a concise, human-readable description of the receiver.
(5889) {1337489} [1337614]: @return a string representation of the event ====== Tracker.java ====== Copyright (c) 2000, 2013 IBM Corporation and others.
(5901) {1339552} [1340322]: &lt;/p&gt; @param parent a widget which will be the parent of the new instance (cannot be null) @param style the style of widget to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT#LEFT @see SWT#RIGHT @see SWT#UP @see SWT#DOWN @see SWT#RESIZE @see Widget#checkSubclass @see Widget#getStyle ------------ Constructs a new instance of this class given the display to create it on and a style value describing its behavior and appearance.
(5908) {1341063} [1341862]: &lt;b&gt;Passing in null as the display argument is not considered to be good coding style, and may not be supported in a future release of SWT.&lt;/b&gt; &lt;/p&gt; @param display the display to create the tracker on @param style the style of control to construct @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT#LEFT @see SWT#RIGHT @see SWT#UP @see SWT#DOWN @see SWT#RESIZE ------------ Adds the listener to the collection of listeners who will be notified when the control is moved or resized, by sending it one of the messages defined in the &lt;code&gt;ControlListener&lt;/code&gt; interface.
(5909) {1341864} [1342566]: @param listener the listener which should be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see ControlListener @see #removeControlListener ------------ Adds the listener to the collection of listeners who will be notified when keys are pressed and released on the system keyboard, by sending it one of the messages defined in the &lt;code&gt;KeyListener&lt;/code&gt; interface.
(5910) {1342568} [1343077]: @param listener the listener which should be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see KeyListener @see #removeKeyListener ------------ Stops displaying the tracker rectangles.
(5911) {1343079} [1343144]: Note that this is not considered to be a cancelation by the user.
(5912) {1343146} [1343437]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Draw the rectangles displayed by the tracker.
(5914) {1343534} [1343620]: If the parent is a &lt;code&gt;Display&lt;/code&gt; then these are screen coordinates.
(5915) {1343622} [1344047]: @return the bounds of the Rectangles being drawn @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns &lt;code&gt;true&lt;/code&gt; if the rectangles are drawn with a stippled line, &lt;code&gt;false&lt;/code&gt; otherwise.
(5916) {1344049} [1344403]: @return the stippled effect of the rectangles @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Displays the Tracker rectangles for manipulation by the user.
(5918) {1344506} [1344984]: @return &lt;code&gt;true&lt;/code&gt; if the user did not cancel the Tracker, &lt;code&gt;false&lt;/code&gt; otherwise @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Removes the listener from the collection of listeners who will be notified when the control is moved or resized.
(5919) {1344986} [1345603]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see ControlListener @see #addControlListener ------------ Removes the listener from the collection of listeners who will be notified when keys are pressed and released on the system keyboard.
(5920) {1345605} [1346137]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see KeyListener @see #addKeyListener ------------ Sets the &lt;code&gt;Cursor&lt;/code&gt; of the Tracker.
(5921) {1346139} [1346226]: If this cursor is &lt;code&gt;null&lt;/code&gt; then the cursor reverts to the default.
(5922) {1346228} [1346630]: @param newCursor the new &lt;code&gt;Cursor&lt;/code&gt; to display @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Specifies the rectangles that should be drawn, expressed relative to the parent widget.
(5923) {1346632} [1346693]: If the parent is a Display then these are screen coordinates.
(5924) {1346695} [1347228]: @param rectangles the bounds of the rectangles to be drawn @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the set of rectangles is null or contains a null rectangle&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Changes the appearance of the line used to draw the rectangles.
(5925) {1347230} [1347628]: @param stippled &lt;code&gt;true&lt;/code&gt; if rectangle should appear stippled @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ====== Transform.java ====== Copyright (c) 2000, 2014 IBM Corporation and others.
(5937) {1349375} [1350011]: &lt;/p&gt; @param device the device on which to allocate the Transform @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if device is null and there is no current device&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_NO_GRAPHICS_LIBRARY - if advanced graphics are not available&lt;/li&gt; &lt;/ul&gt; @exception SWTError &lt;ul&gt; &lt;li&gt;ERROR_NO_HANDLES if a handle for the Transform could not be obtained&lt;/li&gt; &lt;/ul&gt; @see #dispose() ------------ Constructs a new Transform given an array of elements that represent the matrix that describes the transformation.
(5940) {1350226} [1351074]: &lt;/p&gt; @param device the device on which to allocate the Transform @param elements an array of floats that describe the transformation matrix @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if device is null and there is no current device, or the elements array is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the elements array is too small to hold the matrix values&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_NO_GRAPHICS_LIBRARY - if advanced graphics are not available&lt;/li&gt; &lt;/ul&gt; @exception SWTError &lt;ul&gt; &lt;li&gt;ERROR_NO_HANDLES if a handle for the Transform could not be obtained&lt;/li&gt; &lt;/ul&gt; @see #dispose() ------------ Constructs a new Transform given all of the elements that represent the matrix that describes the transformation.
(5943) {1351289} [1352311]: &lt;/p&gt; @param device the device on which to allocate the Transform @param m11 the first element of the first row of the matrix @param m12 the second element of the first row of the matrix @param m21 the first element of the second row of the matrix @param m22 the second element of the second row of the matrix @param dx the third element of the first row of the matrix @param dy the third element of the second row of the matrix @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if device is null and there is no current device&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_NO_GRAPHICS_LIBRARY - if advanced graphics are not available&lt;/li&gt; &lt;/ul&gt; @exception SWTError &lt;ul&gt; &lt;li&gt;ERROR_NO_HANDLES if a handle for the Transform could not be obtained&lt;/li&gt; &lt;/ul&gt; @see #dispose() ------------ Fills the parameter with the values of the transformation matrix that the receiver represents, in the order {m11, m12, m21, m22, dx, dy}.
(5944) {1352313} [1352816]: @param elements array to hold the matrix values @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parameter is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the parameter is too small to hold the matrix values&lt;/li&gt; &lt;/ul&gt; ------------ Modifies the receiver such that the matrix it represents becomes the identity matrix.
(5945) {1352818} [1353100]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.4 ------------ Modifies the receiver such that the matrix it represents becomes the mathematical inverse of the matrix it previously represented.
(5946) {1353102} [1353443]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_CANNOT_INVERT_MATRIX - if the matrix is not invertible&lt;/li&gt; &lt;/ul&gt; ------------ Returns &lt;code&gt;true&lt;/code&gt; if the Transform has been disposed, and &lt;code&gt;false&lt;/code&gt; otherwise.
(5949) {1353636} [1353870]: @return &lt;code&gt;true&lt;/code&gt; when the Transform is disposed, and &lt;code&gt;false&lt;/code&gt; otherwise ------------ Returns &lt;code&gt;true&lt;/code&gt; if the Transform represents the identity matrix and false otherwise.
(5950) {1353872} [1354158]: @return &lt;code&gt;true&lt;/code&gt; if the receiver is an identity Transform, and &lt;code&gt;false&lt;/code&gt; otherwise ------------ Modifies the receiver such that the matrix it represents becomes the the result of multiplying the matrix it previously represented by the argument.
(5951) {1354160} [1354704]: @param matrix the matrix to multiply the receiver by @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parameter is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the parameter has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Modifies the receiver so that it represents a transformation that is equivalent to its previous transformation rotated by the specified angle.
(5954) {1354922} [1355256]: @param angle the angle to rotate the transformation by @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Modifies the receiver so that it represents a transformation that is equivalent to its previous transformation scaled by (scaleX, scaleY).
(5955) {1355258} [1355648]: @param scaleX the amount to scale in the X direction @param scaleY the amount to scale in the Y direction @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Modifies the receiver to represent a new transformation given all of the elements that represent the matrix that describes that transformation.
(5956) {1355650} [1356293]: @param m11 the first element of the first row of the matrix @param m12 the second element of the first row of the matrix @param m21 the first element of the second row of the matrix @param m22 the second element of the second row of the matrix @param dx the third element of the first row of the matrix @param dy the third element of the second row of the matrix @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Modifies the receiver so that it represents a transformation that is equivalent to its previous transformation sheared by (shearX, shearY).
(5957) {1356295} [1356768]: @param shearX the shear factor in the X direction @param shearY the shear factor in the Y direction @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @since 3.4 ------------ Given an array containing points described by alternating x and y values, modify that array such that each point has been replaced with the result of applying the transformation represented by the receiver to that point.
(5958) {1356770} [1357259]: @param pointArray an array of alternating x and y values to be transformed @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the point array is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Modifies the receiver so that it represents a transformation that is equivalent to its previous transformation translated by (offsetX, offsetY).
(5959) {1357261} [1357604]: @param offsetX the distance to translate in the X direction @param offsetY the distance to translate in the Y direction @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns a string containing a concise, human-readable description of the receiver.
(5960) {1357606} [1357740]: @return a string representation of the receiver ====== TraverseEvent.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(5964) {1358309} [1358410]: This is achieved using two fields, &lt;code&gt;detail&lt;/code&gt; and &lt;code&gt;doit&lt;/code&gt;.
(5965) {1358411} [1358485]: &lt;/p&gt;&lt;p&gt; When a control is traversed, a traverse event is sent.
(5970) {1359257} [1359422]: When a tab key is pressed in a canvas, the detail field will be &lt;code&gt;TRAVERSE_TAB_NEXT&lt;/code&gt; and the doit field will be &lt;code&gt;false&lt;/code&gt;.
(5986) {1361468} [1361592]: This is achieved by setting doit to &lt;code&gt;true&lt;/code&gt;, and the detail to &lt;code&gt;TRAVERSE_NONE&lt;/code&gt;.
(5988) {1361746} [1361907]: &lt;/p&gt; @see TraverseListener @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ The traversal type.
(5990) {1362686} [1362799]: For example, setting the detail to &lt;code&gt;TRAVERSE_NONE&lt;/code&gt; causes no traversal action to be taken.
(5992) {1362977} [1363139]: For example, setting the doit field to &lt;code&gt;false&lt;/code&gt; will cancel the operation and allow the traversal key stroke to be delivered to the control.
(5993) {1363140} [1363274]: Setting the doit field to &lt;code&gt;true&lt;/code&gt; indicates that the traversal described by the detail field is to be performed.
(5996) {1363602} [1363736]: @return a string representation of the event ====== TraverseListener.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(6000) {1364496} [1364579]: When a traverse event occurs in a control, the keyTraversed method will be invoked.
(6004) {1364843} [1364971]: Traversal key constants beginning with &lt;code&gt;TRAVERSE_&lt;/code&gt; are defined in the &lt;code&gt;SWT&lt;/code&gt; class.
(6005) {1364972} [1365121]: &lt;/p&gt; @param e an event containing information about the traverse ====== Tray.java ====== Copyright (c) 2000, 2009 IBM Corporation and others.
(6009) {1365814} [1366122]: &lt;/p&gt; @see Display#getSystemTray @see &lt;a href="http://www.eclipse.org/swt/snippets/#tray"&gt;Tray, TrayItem snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @since 3.0 @noextend This class is not intended to be subclassed by clients.
(6010) {1366123} [1366203]: ------------ Returns the item at the given, zero-relative index in the receiver.
(6012) {1366255} [1366828]: @param index the index of the item to return @return the item at the given index @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_RANGE - if the index is not between 0 and the number of elements in the list minus 1 (inclusive)&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the number of items contained in the receiver.
(6013) {1366830} [1367196]: @return the number of items @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns an array of &lt;code&gt;TrayItem&lt;/code&gt;s which are the items in the receiver.
(6015) {1367351} [1367712]: &lt;/p&gt; @return the items in the receiver @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ====== TrayItem.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(6019) {1368442} [1368723]: &lt;/p&gt; @see &lt;a href="http://www.eclipse.org/swt/snippets/#tray"&gt;Tray, TrayItem snippets&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; @since 3.0 @noextend This class is not intended to be subclassed by clients.
(6020) {1368724} [1368899]: ------------ Constructs a new instance of this class given its parent (which must be a &lt;code&gt;Tray&lt;/code&gt;) and a style value describing its behavior and appearance.
(6025) {1369451} [1370255]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT @see Widget#checkSubclass @see Widget#getStyle ------------ Adds the listener to the collection of listeners who will be notified when the receiver is selected by the user, by sending it one of the messages defined in the &lt;code&gt;SelectionListener&lt;/code&gt; interface.
(6026) {1370256} [1371229]: &lt;p&gt; &lt;code&gt;widgetSelected&lt;/code&gt; is called when the receiver is selected &lt;code&gt;widgetDefaultSelected&lt;/code&gt; is called when the receiver is double-clicked &lt;/p&gt; @param listener the listener which should be notified when the receiver is selected by the user @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SelectionListener @see #removeSelectionListener @see SelectionEvent ------------ Adds the listener to the collection of listeners who will be notified when the platform-specific context menu trigger has occurred, by sending it one of the messages defined in the &lt;code&gt;MenuDetectListener&lt;/code&gt; interface.
(6027) {1371231} [1371803]: @param listener the listener which should be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see MenuDetectListener @see #removeMenuDetectListener @since 3.3 ------------ Returns the receiver's highlight image if it has one, or null if it does not.
(6028) {1371805} [1372180]: @return the receiver's highlight image @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.8 ------------ Returns the receiver's parent, which must be a &lt;code&gt;Tray&lt;/code&gt;.
(6029) {1372182} [1372535]: @return the receiver's parent @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.2 ------------ Returns the receiver's tool tip, or null if it has not been set.
(6030) {1372537} [1372902]: @return the receiver's tool tip text @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.2 ------------ Returns the receiver's tool tip text, or null if it has not been set.
(6031) {1372904} [1373298]: @return the receiver's tool tip text @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver is visible and &lt;code&gt;false&lt;/code&gt; otherwise.
(6032) {1373300} [1373698]: @return the receiver's visibility @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Removes the listener from the collection of listeners who will be notified when the receiver is selected by the user.
(6033) {1373700} [1374324]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SelectionListener @see #addSelectionListener ------------ Removes the listener from the collection of listeners who will be notified when the platform-specific context menu trigger has occurred.
(6034) {1374326} [1374864]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see MenuDetectListener @see #addMenuDetectListener @since 3.3 ------------ Sets the receiver's highlight image.
(6035) {1374866} [1375324]: @param image the new highlight image @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the image has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.8 ------------ Sets the receiver's image.
(6036) {1375326} [1375844]: @param image the new image @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the image has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's tool tip to the argument, which may be null indicating that no tool tip should be shown.
(6037) {1375846} [1376283]: @param toolTip the new tool tip (or null) @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.2 ------------ Sets the receiver's tool tip text to the argument, which may be null indicating that the default tool tip for the control will be shown.
(6041) {1376678} [1377093]: &lt;/p&gt; @param string the new tool tip text (or null) @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Makes the receiver visible if the argument is &lt;code&gt;true&lt;/code&gt;, and makes it invisible otherwise.
(6042) {1377095} [1377446]: @param visible the new visibility state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ====== Tree.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(6045) {1377927} [1378050]: &lt;p&gt; The item children that may be added to instances of this class must be of type &lt;code&gt;TreeItem&lt;/code&gt;.
(6046) {1378051} [1378277]: &lt;/p&gt;&lt;p&gt; Style &lt;code&gt;VIRTUAL&lt;/code&gt; is used to create a &lt;code&gt;Tree&lt;/code&gt; whose &lt;code&gt;TreeItem&lt;/code&gt;s are to be populated by the client on an on-demand basis instead of up-front.
(6048) {1378492} [1379416]: &lt;/p&gt;&lt;p&gt; Here is an example of using a &lt;code&gt;Tree&lt;/code&gt; with style &lt;code&gt;VIRTUAL&lt;/code&gt;: &lt;code&gt;&lt;pre&gt; final Tree tree = new Tree(parent, SWT.VIRTUAL | SWT.BORDER); tree.setItemCount(20); tree.addListener(SWT.SetData, new Listener() { public void handleEvent(Event event) { TreeItem item = (TreeItem)event.item; TreeItem parentItem = item.getParentItem(); String text = null; if (parentItem == null) { text = "node " + tree.indexOf(item); } else { text = parentItem.getText() + " - " + parentItem.indexOf(item); } item.setText(text); System.out.println(text); item.setItemCount(10); } }); &lt;/pre&gt;&lt;/code&gt; &lt;/p&gt;&lt;p&gt; Note that although this class is a subclass of &lt;code&gt;Composite&lt;/code&gt;, it does not normally make sense to add &lt;code&gt;Control&lt;/code&gt; children to it, or set a layout on it, unless implementing something like a cell editor.
(6056) {1380918} [1381723]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT#SINGLE @see SWT#MULTI @see SWT#CHECK @see SWT#FULL_SELECTION @see SWT#VIRTUAL @see SWT#NO_SCROLL @see Widget#checkSubclass @see Widget#getStyle ------------ If H_SCROLL is set, reverting the TVS_NOHSCROLL settings which was applied while adding SWT.MeasureItem event Listener.
(6064) {1383421} [1383531]: &lt;p&gt; When &lt;code&gt;widgetSelected&lt;/code&gt; is called, the item field of the event object is valid.
(6065) {1383532} [1383714]: If the receiver has the &lt;code&gt;SWT.CHECK&lt;/code&gt; style and the check selection changes, the event object detail field contains the value &lt;code&gt;SWT.CHECK&lt;/code&gt;.
(6066) {1383715} [1383813]: &lt;code&gt;widgetDefaultSelected&lt;/code&gt; is typically called when an item is double-clicked.
(6068) {1383915} [1384696]: &lt;/p&gt; @param listener the listener which should be notified when the user changes the receiver's selection @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SelectionListener @see #removeSelectionListener @see SelectionEvent ------------ Adds the listener to the collection of listeners who will be notified when an item in the receiver is expanded or collapsed by sending it one of the messages defined in the &lt;code&gt;TreeListener&lt;/code&gt; interface.
(6069) {1384698} [1385234]: @param listener the listener which should be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see TreeListener @see #removeTreeListener ------------ Clears the item at the given zero-relative index in the receiver.
(6072) {1385440} [1386162]: @param index the index of the item to clear @param all &lt;code&gt;true&lt;/code&gt; if all child items of the indexed item should be cleared recursively, and &lt;code&gt;false&lt;/code&gt; otherwise @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_RANGE - if the index is not between 0 and the number of elements in the list minus 1 (inclusive)&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SWT#VIRTUAL @see SWT#SetData @since 3.2 ------------ Clears all the items in the receiver.
(6075) {1386371} [1386835]: @param all &lt;code&gt;true&lt;/code&gt; if all child items should be cleared recursively, and &lt;code&gt;false&lt;/code&gt; otherwise @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SWT#VIRTUAL @see SWT#SetData @since 3.2 ------------ Deselects an item in the receiver.
(6077) {1386897} [1387437]: @param item the item to be deselected @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the item is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the item has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.4 ------------ Deselects all selected items in the receiver.
(6078) {1387439} [1387728]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the width in pixels of a grid line.
(6079) {1387730} [1388526]: @return the width of a grid line in pixels @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Returns the height of the receiver's header @return the height of the header or zero if the header is not visible @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver's header is visible, and &lt;code&gt;false&lt;/code&gt; otherwise.
(6081) {1388748} [1389137]: &lt;/p&gt; @return the receiver's header's visibility state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Returns the column at the given, zero-relative index in the receiver.
(6084) {1389246} [1389462]: If no &lt;code&gt;TreeColumn&lt;/code&gt;s were created by the programmer, this method will throw &lt;code&gt;ERROR_INVALID_RANGE&lt;/code&gt; despite the fact that a single column of data may be visible in the tree.
(6086) {1389565} [1390297]: @param index the index of the column to return @return the column at the given index @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_RANGE - if the index is not between 0 and the number of elements in the list minus 1 (inclusive)&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see Tree#getColumnOrder() @see Tree#setColumnOrder(int[]) @see TreeColumn#getMoveable() @see TreeColumn#setMoveable(boolean) @see SWT#Move @since 3.1 ------------ Returns the number of columns contained in the receiver.
(6087) {1390298} [1390460]: If no &lt;code&gt;TreeColumn&lt;/code&gt;s were created by the programmer, this value is zero, despite the fact that visually, one column of items may be visible.
(6089) {1390563} [1391004]: @return the number of columns @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Returns an array of zero-relative integers that map the creation order of the receiver's items to the order in which they are currently being displayed.
(6092) {1391349} [1391886]: &lt;/p&gt; @return the current visual order of the receiver's items @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see Tree#setColumnOrder(int[]) @see TreeColumn#getMoveable() @see TreeColumn#setMoveable(boolean) @see SWT#Move @since 3.2 ------------ Returns an array of &lt;code&gt;TreeColumn&lt;/code&gt;s which are the columns in the receiver.
(6094) {1391946} [1392108]: If no &lt;code&gt;TreeColumn&lt;/code&gt;s were created by the programmer, the array is empty, despite the fact that visually, one column of items may be visible.
(6097) {1392364} [1392877]: &lt;/p&gt; @return the items in the receiver @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see Tree#getColumnOrder() @see Tree#setColumnOrder(int[]) @see TreeColumn#getMoveable() @see TreeColumn#setMoveable(boolean) @see SWT#Move @since 3.1 ------------ Returns the item at the given, zero-relative index in the receiver.
(6099) {1392929} [1393543]: @param index the index of the item to return @return the item at the given index @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_RANGE - if the index is not between 0 and the number of elements in the list minus 1 (inclusive)&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Returns the item at the given point in the receiver or null if no such item exists.
(6101) {1393599} [1393689]: &lt;p&gt; The item that is returned represents an item that could be selected by the user.
(6104) {1393940} [1394555]: &lt;/p&gt; @param point the point used to locate the item @return the item at the given point, or null if the point is not in a selectable item @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the point is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the number of items contained in the receiver that are direct item children of the receiver.
(6106) {1394622} [1395009]: @return the number of items @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the height of the area which would be used to display &lt;em&gt;one&lt;/em&gt; of the items in the tree.
(6107) {1395011} [1395403]: @return the height of one item @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns a (possibly empty) array of items contained in the receiver that are direct item children of the receiver.
(6110) {1395592} [1395989]: &lt;/p&gt; @return the items @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver's lines are visible, and &lt;code&gt;false&lt;/code&gt; otherwise.
(6113) {1396298} [1396733]: &lt;/p&gt; @return the visibility state of the lines @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Returns the receiver's parent item, which must be a &lt;code&gt;TreeItem&lt;/code&gt; or null when the receiver is a root.
(6114) {1396735} [1397116]: @return the receiver's parent item @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns an array of &lt;code&gt;TreeItem&lt;/code&gt;s that are currently selected in the receiver.
(6118) {1397359} [1397724]: &lt;/p&gt; @return an array representing the selection @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the number of selected items contained in the receiver.
(6119) {1397726} [1398077]: @return the number of selected items @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the column which shows the sort indicator for the receiver.
(6121) {1398140} [1398520]: @return the sort indicator @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #setSortColumn(TreeColumn) @since 3.2 ------------ Returns the direction of the sort indicator for the receiver.
(6123) {1398640} [1399018]: @return the sort direction @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #setSortDirection(int) @since 3.2 ------------ Returns the item which is currently at the top of the receiver.
(6125) {1399121} [1399584]: @return the item at the top of the receiver @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 2.1 ------------ Searches the receiver's list starting at the first column (index 0) until a column is found that is equal to the argument, and returns the index of that column.
(6127) {1399621} [1400223]: @param column the search column @return the index of the column @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the column is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Searches the receiver's list starting at the first item (index 0) until an item is found that is equal to the argument, and returns the index of that item.
(6129) {1400258} [1400816]: @param item the search item @return the index of the item @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the item is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the item has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Removes all of the items from the receiver.
(6130) {1400818} [1401186]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Removes the listener from the collection of listeners who will be notified when the user changes the receiver's selection.
(6131) {1401188} [1401804]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SelectionListener @see #addSelectionListener ------------ Removes the listener from the collection of listeners who will be notified when items in the receiver are expanded or collapsed.
(6132) {1401806} [1402354]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see TreeListener @see #addTreeListener ------------ Display a mark indicating the point at which an item will be inserted.
(6138) {1402633} [1403076]: @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the item has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the number of root-level items contained in the receiver.
(6139) {1403078} [1403479]: @param count the number of items @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.2 ------------ Sets the height of the area which would be used to display &lt;em&gt;one&lt;/em&gt; of the items in the tree.
(6140) {1403481} [1403902]: @param itemHeight the height of one item @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.2 ------------ Marks the receiver's lines as visible if the argument is &lt;code&gt;true&lt;/code&gt;, and marks it invisible otherwise.
(6143) {1404168} [1404508]: &lt;/p&gt; @param show the new visibility state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Selects an item in the receiver.
(6145) {1404566} [1405100]: @param item the item to be selected @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the item is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the item has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.4 ------------ Selects all of the items in the receiver.
(6146) {1405101} [1405156]: &lt;p&gt; If the receiver is single-select, do nothing.
(6147) {1405157} [1405593]: &lt;/p&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the order that the items in the receiver should be displayed in to the given argument which is described in terms of the zero-relative ordering of when the items were added.
(6148) {1405595} [1406371]: @param order the new order to display the items @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the item order is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the item order is not the same length as the number of items&lt;/li&gt; &lt;/ul&gt; @see Tree#getColumnOrder() @see TreeColumn#getMoveable() @see TreeColumn#setMoveable(boolean) @see SWT#Move @since 3.2 ------------ Marks the receiver's header as visible if the argument is &lt;code&gt;true&lt;/code&gt;, and marks it invisible otherwise.
(6150) {1406550} [1406906]: &lt;/p&gt; @param show the new visibility state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Sets the receiver's selection to the given item.
(6152) {1407050} [1407115]: &lt;p&gt; If the item is not in the receiver, then it is ignored.
(6153) {1407116} [1407677]: &lt;/p&gt; @param item the item to select @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the item is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the item has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.2 ------------ Sets the receiver's selection to be the given array of items.
(6155) {1407823} [1407880]: &lt;p&gt; Items that are not in the receiver are ignored.
(6157) {1407976} [1408568]: &lt;/p&gt; @param items the array of items @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the array of items is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if one of the items has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see Tree#deselectAll() ------------ Sets the column used by the sort indicator for the receiver.
(6160) {1408680} [1409213]: @param column the column used by the sort indicator or &lt;code&gt;null&lt;/code&gt; @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the column is disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.2 ------------ Sets the direction of the sort indicator for the receiver.
(6162) {1409332} [1409704]: @param direction the direction of the sort indicator @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.2 ------------ Sets the item which is currently at the top of the receiver.
(6164) {1409807} [1410338]: @param item the item to be shown @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the item is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the item has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see Tree#getTopItem() @since 2.1 ------------ Shows the column.
(6167) {1410485} [1410994]: @param column the column to be shown @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the item is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the item has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Shows the item.
(6170) {1411148} [1411673]: @param item the item to be shown @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the item is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the item has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see Tree#showSelection() ------------ Shows the selection.
(6173) {1411824} [1412171]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see Tree#showItem(TreeItem) ====== TreeAdapter.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(6177) {1412776} [1412966]: &lt;/p&gt; @see TreeListener @see TreeEvent @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ Sent when a tree branch is collapsed.
(6179) {1413007} [1413122]: @param e an event containing information about the tree operation ------------ Sent when a tree branch is expanded.
(6181) {1413163} [1413312]: @param e an event containing information about the tree operation ====== TreeColumn.java ====== Copyright (c) 2000, 2012 IBM Corporation and others.
(6187) {1414381} [1414556]: ------------ Constructs a new instance of this class given its parent (which must be a &lt;code&gt;Tree&lt;/code&gt;) and a style value describing its behavior and appearance.
(6192) {1415108} [1415966]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT#LEFT @see SWT#RIGHT @see SWT#CENTER @see Widget#checkSubclass @see Widget#getStyle ------------ Constructs a new instance of this class given its parent (which must be a &lt;code&gt;Tree&lt;/code&gt;), a style value describing its behavior and appearance, and the index at which to place it in the items maintained by its parent.
(6196) {1416450} [1416561]: &lt;/p&gt; &lt;p&gt; Note that due to a restriction on some platforms, the first column is always left aligned.
(6197) {1416562} [1417593]: &lt;/p&gt; @param parent a composite control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @param index the zero-relative index to store the receiver in its parent @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_RANGE - if the index is not between 0 and the number of elements in the parent (inclusive)&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT#LEFT @see SWT#RIGHT @see SWT#CENTER @see Widget#checkSubclass @see Widget#getStyle ------------ Adds the listener to the collection of listeners who will be notified when the control is moved or resized, by sending it one of the messages defined in the &lt;code&gt;ControlListener&lt;/code&gt; interface.
(6198) {1417595} [1418286]: @param listener the listener which should be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see ControlListener @see #removeControlListener ------------ Adds the listener to the collection of listeners who will be notified when the control is selected by the user, by sending it one of the messages defined in the &lt;code&gt;SelectionListener&lt;/code&gt; interface.
(6199) {1418287} [1418382]: &lt;p&gt; &lt;code&gt;widgetSelected&lt;/code&gt; is called when the column header is selected.
(6200) {1418383} [1418444]: &lt;code&gt;widgetDefaultSelected&lt;/code&gt; is not called.
(6201) {1418445} [1419081]: &lt;/p&gt; @param listener the listener which should be notified when the control is selected by the user @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SelectionListener @see #removeSelectionListener @see SelectionEvent ------------ Returns a value which describes the position of the text or image in the receiver.
(6203) {1419206} [1419503]: @return the alignment @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Gets the moveable attribute.
(6205) {1419630} [1420108]: @return the moveable attribute @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see Tree#getColumnOrder() @see Tree#setColumnOrder(int[]) @see TreeColumn#setMoveable(boolean) @see SWT#Move @since 3.2 ------------ Returns the receiver's parent, which must be a &lt;code&gt;Tree&lt;/code&gt;.
(6206) {1420110} [1420416]: @return the receiver's parent @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Gets the resizable attribute.
(6208) {1420517} [1420865]: @return the resizable attribute @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's tool tip text, or null if it has not been set.
(6209) {1420867} [1421194]: @return the receiver's tool tip text @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.2 ------------ Gets the width of the receiver.
(6210) {1421196} [1421517]: @return the width @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Causes the receiver to be resized to its preferred size.
(6212) {1421613} [1421971]: @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Removes the listener from the collection of listeners who will be notified when the control is moved or resized.
(6213) {1421973} [1422573]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see ControlListener @see #addControlListener ------------ Removes the listener from the collection of listeners who will be notified when the control is selected by the user.
(6214) {1422575} [1423126]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SelectionListener @see #addSelectionListener ------------ Controls how text and images will be displayed in the receiver.
(6216) {1423255} [1423355]: &lt;p&gt; Note that due to a restriction on some platforms, the first column is always left aligned.
(6217) {1423356} [1423677]: &lt;/p&gt; @param alignment the new alignment @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the moveable attribute.
(6220) {1423859} [1424290]: @param moveable the moveable attribute @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see Tree#setColumnOrder(int[]) @see Tree#getColumnOrder() @see TreeColumn#getMoveable() @see SWT#Move @since 3.2 ------------ Sets the resizable attribute.
(6222) {1424392} [1424813]: @param resizable the resize attribute @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the receiver's tool tip text to the argument, which may be null indicating that the default tool tip for the control will be shown.
(6226) {1425208} [1425556]: &lt;/p&gt; @param string the new tool tip text (or null) @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.2 ------------ Sets the width of the receiver.
(6227) {1425558} [1425901]: @param width the new width @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ====== TreeEvent.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(6240) {1428092} [1428494]: public long /*int*/ handle; Tree parent; String [] strings; Image [] images; Font font; Font [] cellFont; boolean cached; int background = -1, foreground = -1; int [] cellBackground, cellForeground; Constructs a new instance of this class given its parent (which must be a &lt;code&gt;Tree&lt;/code&gt; or a &lt;code&gt;TreeItem&lt;/code&gt;) and a style value describing its behavior and appearance.
(6245) {1429046} [1429902]: &lt;/p&gt; @param parent a tree control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT @see Widget#checkSubclass @see Widget#getStyle ------------ Constructs a new instance of this class given its parent (which must be a &lt;code&gt;Tree&lt;/code&gt; or a &lt;code&gt;TreeItem&lt;/code&gt;), a style value describing its behavior and appearance, and the index at which to place it in the items maintained by its parent.
(6249) {1430386} [1431370]: &lt;/p&gt; @param parent a tree control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @param index the zero-relative index to store the receiver in its parent @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_RANGE - if the index is not between 0 and the number of elements in the parent (inclusive)&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT @see Widget#checkSubclass @see Widget#getStyle ------------ Constructs a new instance of this class given its parent (which must be a &lt;code&gt;Tree&lt;/code&gt; or a &lt;code&gt;TreeItem&lt;/code&gt;) and a style value describing its behavior and appearance.
(6254) {1431922} [1432782]: &lt;/p&gt; @param parentItem a tree control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT @see Widget#checkSubclass @see Widget#getStyle ------------ Constructs a new instance of this class given its parent (which must be a &lt;code&gt;Tree&lt;/code&gt; or a &lt;code&gt;TreeItem&lt;/code&gt;), a style value describing its behavior and appearance, and the index at which to place it in the items maintained by its parent.
(6258) {1433266} [1434118]: &lt;/p&gt; @param parentItem a tree control which will be the parent of the new instance (cannot be null) @param style the style of control to construct @param index the zero-relative index to store the receiver in its parent @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_RANGE - if the index is not between 0 and the number of elements in the parent (inclusive)&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT @see Widget#checkSubclass @see Widget#getStyle ------------ Clears the item at the given zero-relative index in the receiver.
(6261) {1434324} [1435046]: @param index the index of the item to clear @param all &lt;code&gt;true&lt;/code&gt; if all child items of the indexed item should be cleared recursively, and &lt;code&gt;false&lt;/code&gt; otherwise @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_RANGE - if the index is not between 0 and the number of elements in the list minus 1 (inclusive)&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SWT#VIRTUAL @see SWT#SetData @since 3.2 ------------ Clears all the items in the receiver.
(6264) {1435255} [1435725]: @param all &lt;code&gt;true&lt;/code&gt; if all child items should be cleared recursively, and &lt;code&gt;false&lt;/code&gt; otherwise @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SWT#VIRTUAL @see SWT#SetData @since 3.2 ------------ Returns the receiver's background color.
(6265) {1435727} [1436086]: @return the background color @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 2.0 ------------ Returns the background color at the given column index in the receiver.
(6266) {1436088} [1436505]: @param index the column index @return the background color @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Returns a rectangle describing the size and location of the receiver's text relative to its parent.
(6267) {1436507} [1436919]: @return the bounding rectangle of the receiver's text @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns a rectangle describing the receiver's size and location relative to its parent at a column in the tree.
(6268) {1436921} [1437364]: @param index the index that specifies the column @return the receiver's bounding column rectangle @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver is checked, and false otherwise.
(6270) {1437439} [1437810]: &lt;p&gt; @return the checked state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver is expanded, and false otherwise.
(6271) {1437811} [1438183]: &lt;p&gt; @return the expanded state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the font that the receiver will use to paint textual information for this item.
(6272) {1438185} [1438581]: @return the receiver's font @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.0 ------------ Returns the font that the receiver will use to paint textual information for the specified cell in this item.
(6273) {1438583} [1438964]: @param index the column index @return the receiver's font @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Returns the foreground color that the receiver will use to draw.
(6274) {1438966} [1439336]: @return the receiver's foreground color @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 2.0 ------------ Returns the foreground color at the given column index in the receiver.
(6275) {1439338} [1439741]: @param index the column index @return the foreground color @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Returns &lt;code&gt;true&lt;/code&gt; if the receiver is grayed, and false otherwise.
(6277) {1439815} [1440181]: &lt;p&gt; @return the grayed state of the checkbox @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the item at the given, zero-relative index in the receiver.
(6279) {1440233} [1440864]: @param index the index of the item to return @return the item at the given index @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_RANGE - if the index is not between 0 and the number of elements in the list minus 1 (inclusive)&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Returns the number of items contained in the receiver that are direct item children of the receiver.
(6280) {1440866} [1441263]: @return the number of items @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns a (possibly empty) array of &lt;code&gt;TreeItem&lt;/code&gt;s which are the direct item children of the receiver.
(6282) {1441418} [1441844]: &lt;/p&gt; @return the receiver's items @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the image stored at the given column index in the receiver, or null if the image has not been set or if the column does not exist.
(6283) {1441846} [1442314]: @param index the column index @return the image stored at the given column index in the receiver @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Returns a rectangle describing the size and location relative to its parent of an image at a column in the tree.
(6284) {1442316} [1442749]: @param index the index that specifies the column @return the receiver's bounding image rectangle @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Returns the receiver's parent, which must be a &lt;code&gt;Tree&lt;/code&gt;.
(6285) {1442751} [1443150]: @return the receiver's parent @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the receiver's parent item, which must be a &lt;code&gt;TreeItem&lt;/code&gt; or null when the receiver is a root.
(6286) {1443152} [1443546]: @return the receiver's parent item @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns the text stored at the given column index in the receiver, or empty string if the text has not been set.
(6287) {1443548} [1444015]: @param index the column index @return the text stored at the given column index in the receiver @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Returns a rectangle describing the size and location relative to its parent of the text at a column in the tree.
(6288) {1444017} [1444527]: @param index the index that specifies the column @return the receiver's bounding text rectangle @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.3 ------------ Searches the receiver's list starting at the first item (index 0) until an item is found that is equal to the argument, and returns the index of that item.
(6290) {1444562} [1445120]: @param item the search item @return the index of the item @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the item is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the item has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Removes all of the items from the receiver.
(6291) {1445121} [1445534]: &lt;p&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Sets the receiver's background color to the color specified by the argument, or to the default system color for the item if the argument is null.
(6292) {1445536} [1446147]: @param color the new color (or null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the argument has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 2.0 ------------ Sets the background color at the given column index in the receiver to the color specified by the argument, or to the default system color for the item if the argument is null.
(6293) {1446149} [1446653]: @param index the column index @param color the new color (or null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the argument has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Sets the checked state of the receiver.
(6294) {1446654} [1446989]: &lt;p&gt; @param checked the new checked state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the expanded state of the receiver.
(6295) {1446990} [1447482]: &lt;p&gt; @param expanded the new expanded state @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the font that the receiver will use to paint textual information for this item to the font specified by the argument, or to the default font for that kind of control if the argument is null.
(6296) {1447484} [1448134]: @param font the new font (or null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the argument has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.0 ------------ Sets the font that the receiver will use to paint textual information for the specified cell in this item to the font specified by the argument, or to the default font for that kind of control if the argument is null.
(6297) {1448136} [1448744]: @param index the column index @param font the new font (or null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the argument has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Sets the receiver's foreground color to the color specified by the argument, or to the default system color for the item if the argument is null.
(6298) {1448746} [1449357]: @param color the new color (or null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the argument has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 2.0 ------------ Sets the foreground color at the given column index in the receiver to the color specified by the argument, or to the default system color for the item if the argument is null.
(6299) {1449359} [1449876]: @param index the column index @param color the new color (or null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the argument has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Sets the grayed state of the checkbox for this item.
(6301) {1449960} [1450306]: @param grayed the new grayed state of the checkbox @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Sets the image for multiple columns in the tree.
(6302) {1450308} [1450861]: @param images the array of new images @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the array of images is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if one of the images has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Sets the receiver's image at a column.
(6303) {1450863} [1451372]: @param index the column index @param image the new image @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the image has been disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Sets the number of child items contained in the receiver.
(6304) {1451374} [1451713]: @param count the number of items @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.2 ------------ Sets the text for multiple columns in the tree.
(6305) {1451714} [1451772]: &lt;p&gt; Note: If control characters like '\n', '\t' etc.
(6307) {1451838} [1452365]: &lt;/p&gt; @param strings the array of new strings @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the text is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.1 ------------ Sets the receiver's text at a column &lt;p&gt; Note: If control characters like '\n', '\t' etc.
(6309) {1452431} [1452952]: &lt;/p&gt; @param index the column index @param string the new text @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the text is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.1 ====== TreeListener.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(6313) {1453626} [1453717]: When a branch of the tree is expanded or collapsed, the appropriate method will be invoked.
(6314) {1453718} [1453812]: &lt;/p&gt; @see TreeAdapter @see TreeEvent ------------ Sent when a tree branch is collapsed.
(6315) {1453814} [1453929]: @param e an event containing information about the tree operation ------------ Sent when a tree branch is expanded.
(6316) {1453931} [1454080]: @param e an event containing information about the tree operation ====== TypedEvent.java ====== Copyright (c) 2000, 2017 IBM Corporation and others.
(6322) {1454988} [1455158]: public int time; a field for application use public Object data; static final long serialVersionUID = 3257285846578377524L; Constructs a new instance of this class.
(6323) {1455160} [1455300]: @param object the object that fired the event ------------ Constructs a new instance of this class based on the information in the argument.
(6324) {1455302} [1455406]: @param e the low level event to initialize the receiver with ------------ Returns the name of the event.
(6326) {1455464} [1455589]: @return the name of the event ------------ Returns a string containing a concise, human-readable description of the receiver.
(6327) {1455591} [1455722]: @return a string representation of the event ====== TypedListener.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(6333) {1456459} [1456737]: &lt;/p&gt; @see Listener @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ The receiver's event listener protected SWTEventListener eventListener; Constructs a new instance of this class for the given event listener.
(6337) {1456986} [1457128]: &lt;/p&gt; @param listener the event listener to store in the receiver @noreference This method is not intended to be referenced by clients.
(6338) {1457129} [1457180]: ------------ Returns the receiver's event listener.
(6342) {1457429} [1457549]: &lt;/p&gt; @return the receiver's event listener @noreference This method is not intended to be referenced by clients.
(6343) {1457550} [1457587]: ------------ Handles the given event.
(6347) {1457836} [1457946]: &lt;/p&gt; @param e the event to handle @noreference This method is not intended to be referenced by clients.
(6356) {1459094} [1459226]: @return a string representation of the event ====== VerifyListener.java ====== Copyright (c) 2000, 2016 IBM Corporation and others.
(6360) {1459979} [1460056]: When the text is about to be modified, the verifyText method will be invoked.
(6361) {1460057} [1460142]: &lt;/p&gt; @see VerifyEvent ------------ Sent when the text is about to be modified.
(6364) {1460366} [1460515]: &lt;/p&gt; @param e an event containing information about the verify ====== Widget.java ====== Copyright (c) 2000, 2015 IBM Corporation and others.
(6373) {1461916} [1462128]: &lt;/p&gt; @see #checkSubclass @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ Prevents uninitialized instances from being created outside the package.
(6378) {1462740} [1463486]: &lt;/p&gt; @param parent a widget which will be the parent of the new instance (cannot be null) @param style the style of widget to construct @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the parent is disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; @see SWT @see #checkSubclass @see #getStyle ------------ Adds the listener to the collection of listeners who will be notified when an event of the given type occurs.
(6380) {1463619} [1463710]: The event type is one of the event constants defined in class &lt;code&gt;SWT&lt;/code&gt;.
(6381) {1463712} [1464414]: @param eventType the type of event to listen for @param listener the listener which should be notified when the event occurs @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see Listener @see SWT @see #getListeners(int) @see #removeListener(int, Listener) @see #notifyListeners ------------ Adds the listener to the collection of listeners who will be notified when the widget is disposed.
(6383) {1464539} [1465142]: @param listener the listener which should be notified when the receiver is disposed @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see DisposeListener @see #removeDisposeListener ------------ Returns a style with exactly one style bit set out of the specified set of exclusive style bits.
(6387) {1465679} [1466081]: @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the parent is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the parent is disposed&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent&lt;/li&gt; &lt;/ul&gt; ------------ Checks that this class can be subclassed.
(6388) {1466082} [1466296]: &lt;p&gt; The SWT class library is intended to be subclassed only at specific, controlled points (most notably, &lt;code&gt;Composite&lt;/code&gt; and &lt;code&gt;Canvas&lt;/code&gt; when implementing new widgets).
(6394) {1467169} [1467426]: &lt;/p&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass&lt;/li&gt; &lt;/ul&gt; ------------ Throws an &lt;code&gt;SWTException&lt;/code&gt; if the receiver can not be accessed by the caller.
(6397) {1467650} [1467836]: &lt;p&gt; Currently, it is an error to invoke any method (other than &lt;code&gt;isDisposed()&lt;/code&gt;) on a widget that has had its &lt;code&gt;dispose()&lt;/code&gt; method called.
(6400) {1468094} [1468429]: &lt;/p&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Destroys the widget in the operating system and releases the widget's handle.
(6406) {1469056} [1469191]: &lt;/p&gt; @see #dispose ------------ Disposes of the operating system resources associated with the receiver and all its descendants.
(6407) {1469192} [1469363]: After this method has been invoked, the receiver and all descendants will answer &lt;code&gt;true&lt;/code&gt; when sent the message &lt;code&gt;isDisposed()&lt;/code&gt;.
(6410) {1469538} [1469627]: &lt;p&gt; NOTE: This method is not called recursively on the descendants of the receiver.
(6412) {1469821} [1470209]: &lt;/p&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #addDisposeListener @see #removeDisposeListener @see #checkWidget ------------ Does whatever widget specific cleanup is required, and then uses the code in &lt;code&gt;SWTError.error&lt;/code&gt; to handle the error.
(6413) {1470211} [1470389]: @param code the descriptive error code @see SWT#error(int) ------------ Returns the application defined widget data associated with the receiver, or null if it has not been set.
(6417) {1470735} [1471134]: &lt;/p&gt; @return the widget data @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - when the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - when called from the wrong thread&lt;/li&gt; &lt;/ul&gt; @see #setData(Object) ------------ Returns the application defined property of the receiver with the specified name, or null if it has not been set.
(6420) {1471413} [1472007]: &lt;/p&gt; @param key the name of the property @return the value of the property or null if it has not been set @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the key is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #setData(String, Object) ------------ Returns the &lt;code&gt;Display&lt;/code&gt; that is associated with the receiver.
(6421) {1472008} [1472171]: &lt;p&gt; A widget's display is either provided when it is created (for example, top level &lt;code&gt;Shell&lt;/code&gt;s) or is the same as its parent's display.
(6422) {1472172} [1472445]: &lt;/p&gt; @return the receiver's display @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; ------------ Returns an array of listeners who will be notified when an event of the given type occurs.
(6423) {1472446} [1472537]: The event type is one of the event constants defined in class &lt;code&gt;SWT&lt;/code&gt;.
(6424) {1472539} [1473067]: @param eventType the type of event to listen for @return an array of listeners that will be notified when the event occurs @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see Listener @see SWT @see #addListener(int, Listener) @see #removeListener(int, Listener) @see #notifyListeners @since 3.4 ------------ Returns the name of the widget.
(6426) {1473125} [1473210]: @return the name of the widget ------------ Returns the receiver's style information.
(6429) {1473503} [1473750]: For example, if the platform widget used to implement a particular SWT widget always has scroll bars, the result of calling this method would always have the &lt;code&gt;SWT.H_SCROLL&lt;/code&gt; and &lt;code&gt;SWT.V_SCROLL&lt;/code&gt; bits set.
(6430) {1473751} [1474155]: &lt;/p&gt; @return the style bits @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; ------------ Returns &lt;code&gt;true&lt;/code&gt; if the widget has auto text direction, and &lt;code&gt;false&lt;/code&gt; otherwise.
(6431) {1474157} [1474448]: @return &lt;code&gt;true&lt;/code&gt; when the widget has auto direction and &lt;code&gt;false&lt;/code&gt; otherwise @see SWT#AUTO_TEXT_DIRECTION @since 3.105 ------------ Returns &lt;code&gt;true&lt;/code&gt; if the widget has been disposed, and &lt;code&gt;false&lt;/code&gt; otherwise.
(6434) {1474631} [1474936]: &lt;/p&gt; @return &lt;code&gt;true&lt;/code&gt; when the widget is disposed and &lt;code&gt;false&lt;/code&gt; otherwise ------------ Returns &lt;code&gt;true&lt;/code&gt; if there are any listeners for the specified event type associated with the receiver, and &lt;code&gt;false&lt;/code&gt; otherwise.
(6435) {1474937} [1475028]: The event type is one of the event constants defined in class &lt;code&gt;SWT&lt;/code&gt;.
(6436) {1475030} [1475525]: @param eventType the type of event @return true if the event is hooked @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SWT ------------ Notifies all of the receiver's listeners for events of the given type that one such event has occurred by invoking their &lt;code&gt;handleEvent()&lt;/code&gt; method.
(6437) {1475527} [1475618]: The event type is one of the event constants defined in class &lt;code&gt;SWT&lt;/code&gt;.
(6438) {1475620} [1476151]: @param eventType the type of event which has occurred @param event the event data @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see SWT @see #addListener @see #getListeners(int) @see #removeListener(int, Listener) ------------ Removes the listener from the collection of listeners who will be notified when an event of the given type occurs.
(6439) {1476152} [1476243]: The event type is one of the event constants defined in class &lt;code&gt;SWT&lt;/code&gt;.
(6440) {1476245} [1476933]: @param eventType the type of event to listen for @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see Listener @see SWT @see #addListener @see #getListeners(int) @see #notifyListeners ------------ Removes the listener from the collection of listeners who will be notified when an event of the given type occurs.
(6444) {1477182} [1477770]: &lt;/p&gt; @param eventType the type of event to listen for @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see Listener @see #addListener @noreference This method is not intended to be referenced by clients.
(6446) {1477856} [1477972]: ------------ Removes the listener from the collection of listeners who will be notified when the widget is disposed.
(6447) {1477974} [1478489]: @param listener the listener which should no longer be notified @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the listener is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see DisposeListener @see #addDisposeListener ------------ Marks the widget to be skinned.
(6448) {1478490} [1478609]: &lt;p&gt; The skin event is sent to the receiver's display when appropriate (usually before the next event is handled).
(6451) {1478872} [1479084]: Once the skin event is sent to a widget, it will not be sent again unless &lt;code&gt;reskin(int)&lt;/code&gt; is called on the widget or on an ancestor while specifying the &lt;code&gt;SWT.ALL&lt;/code&gt; flag.
(6452) {1479085} [1479847]: &lt;/p&gt; &lt;p&gt; The parameter &lt;code&gt;flags&lt;/code&gt; may be either: &lt;dl&gt; &lt;dt&gt;&lt;b&gt;{@link SWT#ALL}&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;all children in the receiver's widget tree should be skinned&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;{@link SWT#NONE}&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;only the receiver should be skinned&lt;/dd&gt; &lt;/dl&gt; &lt;/p&gt; @param flags the flags specifying how to reskin @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @since 3.6 ------------ Sets the application defined widget data associated with the receiver to be the argument.
(6456) {1480193} [1480574]: &lt;/p&gt; @param data the widget data @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - when the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - when called from the wrong thread&lt;/li&gt; &lt;/ul&gt; @see #getData() ------------ Sets the application defined property of the receiver with the specified name to the given value.
(6459) {1480847} [1481412]: &lt;/p&gt; @param key the name of the property @param value the new value for the property @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the key is null&lt;/li&gt; &lt;/ul&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_WIDGET_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;/ul&gt; @see #getData(String) ------------ Returns a string containing a concise, human-readable description of the receiver.
(6460) {1481414} [1481551]: @return a string representation of the receiver ====== WinBMPFileFormat.java ====== Copyright (c) 2000, 2011 IBM Corporation and others.
(6477) {1483328} [1483374]: ------------ Unload the mask data for an icon.
(6479) {1483420} [1483467]: ------------ Unload the shape data for an icon.
*****************************************************************
========================= CLASS #22 =============================
(82) {13999} [14084]: When the widget does not have the &lt;code&gt;CHECK&lt;/code&gt; style, return false.
(5339) {1205905} [1205990]: When the parent does not have the &lt;code&gt;CHECK&lt;/code&gt; style, return false.
(5345) {1207927} [1208012]: When the parent does not have the &lt;code&gt;CHECK&lt;/code&gt; style, return false.
(6269) {1437366} [1437438]: When the parent does not have the &lt;code&gt;CHECK style, return false.
(6276) {1439742} [1439814]: When the parent does not have the &lt;code&gt;CHECK style, return false.
*****************************************************************
========================= CLASS #23 =============================
(85) {14759} [14913]: When the widget is created with the style &lt;code&gt;SWT.COMMAND&lt;/code&gt;, the message text is displayed to provide further information for the user.
(105) {19916} [20070]: When the widget is created with the style &lt;code&gt;SWT.COMMAND&lt;/code&gt;, the message text is displayed to provide further information for the user.
*****************************************************************
========================= CLASS #24 =============================
(89) {15518} [15582]: If the receiver is of any other type, this method returns false.
(5775) {1311830} [1311894]: If the receiver is of any other type, this method returns false.
*****************************************************************
========================= CLASS #25 =============================
(95) {17782} [17894]: &lt;p&gt; Note: This is custom paint operation and only affects {@link SWT#PUSH} and {@link SWT#TOGGLE} buttons.
(150) {29139} [29201]: &lt;p&gt; Note: This should not be called by application code.
(153) {29562} [29624]: &lt;p&gt; Note: This should not be called by application code.
(156) {29997} [30059]: &lt;p&gt; Note: This should not be called by application code.
(783) {196073} [196125]: &lt;p&gt; Note: This method does not cause a redraw.
*****************************************************************
========================= CLASS #26 =============================
(100) {18742} [18860]: &lt;p&gt; Note that a Button can display an image and text simultaneously on Windows (starting with XP), GTK+ and OSX.
(116) {21764} [21892]: &lt;/p&gt;&lt;p&gt; Note that a Button can display an image and text simultaneously on Windows (starting with XP), GTK+ and OSX.
(1171) {286857} [286915]: &lt;p&gt; Note that the path string is platform dependent.
(1647) {389640} [389698]: &lt;p&gt; Note that the path string is platform dependent.
*****************************************************************
========================= CLASS #27 =============================
(101) {18862} [18988]: On other platforms, a Button that has an image and text set into it will display the image or text that was set most recently.
(117) {21894} [22020]: On other platforms, a Button that has an image and text set into it will display the image or text that was set most recently.
*****************************************************************
========================= CLASS #28 =============================
(103) {19512} [19595]: This state change only applies if the control was created with the SWT.CHECK style.
(5357) {1212273} [1212354]: This state change only applies if the Table was created with the SWT.CHECK style.
(5363) {1215247} [1215328]: This state change only applies if the Table was created with the SWT.CHECK style.
(6300) {1449878} [1449958]: This state change only applies if the Tree was created with the SWT.CHECK style.
*****************************************************************
========================= CLASS #29 =============================
(110) {21189} [21233]: &lt;p&gt; This method sets the button label.
(2855) {693699} [693743]: &lt;p&gt; This method sets the widget label.
*****************************************************************
========================= CLASS #30 =============================
(111) {21235} [21317]: The label may include the mnemonic character but must not contain line delimiters.
(2357) {535230} [535276]: The string may include the mnemonic character.
(2856) {693745} [693810]: The label may include the mnemonic character and line delimiters.
(2930) {707786} [707852]: The string may include the mnemonic character and line delimiters.
(3248) {783449} [783516]: The string may include the mnemonic character and accelerator text.
(5100) {1145574} [1145620]: The string may include the mnemonic character.
(5791) {1317037} [1317083]: The string may include the mnemonic character.
*****************************************************************
========================= CLASS #31 =============================
(112) {21318} [21431]: &lt;/p&gt; &lt;p&gt; Mnemonics are indicated by an '&amp;amp;' that causes the next character to be the mnemonic.
(2358) {535277} [535380]: &lt;/p&gt; Mnemonics are indicated by an '&amp;amp;' that causes the next character to be the mnemonic.
(2857) {693811} [693924]: &lt;/p&gt; &lt;p&gt; Mnemonics are indicated by an '&amp;amp;' that causes the next character to be the mnemonic.
(2932) {707927} [708040]: &lt;/p&gt; &lt;p&gt; Mnemonics are indicated by an '&amp;amp;' that causes the next character to be the mnemonic.
(3249) {783517} [783619]: &lt;p&gt; Mnemonics are indicated by an '&amp;amp;' that causes the next character to be the mnemonic.
(5101) {1145621} [1145734]: &lt;/p&gt; &lt;p&gt; Mnemonics are indicated by an '&amp;amp;' that causes the next character to be the mnemonic.
(5792) {1317084} [1317197]: &lt;/p&gt; &lt;p&gt; Mnemonics are indicated by an '&amp;amp;' that causes the next character to be the mnemonic.
*****************************************************************
========================= CLASS #32 =============================
(113) {21433} [21522]: When the user presses a key sequence that matches the mnemonic, a selection event occurs.
(3250) {783621} [783710]: When the user presses a key sequence that matches the mnemonic, a selection event occurs.
(5102) {1145736} [1145825]: When the user presses a key sequence that matches the mnemonic, a selection event occurs.
(5793) {1317199} [1317288]: When the user presses a key sequence that matches the mnemonic, a selection event occurs.
*****************************************************************
========================= CLASS #33 =============================
(114) {21523} [21626]: On most platforms, the mnemonic appears underlined but may be emphasized in a platform specific manner.
(2360) {535497} [535600]: On most platforms, the mnemonic appears underlined but may be emphasised in a platform specific manner.
(2859) {694047} [694150]: On most platforms, the mnemonic appears underlined but may be emphasised in a platform specific manner.
(2936) {708281} [708384]: On most platforms, the mnemonic appears underlined but may be emphasised in a platform specific manner.
(3251) {783711} [783814]: On most platforms, the mnemonic appears underlined but may be emphasised in a platform specific manner.
(5103) {1145826} [1145929]: On most platforms, the mnemonic appears underlined but may be emphasised in a platform specific manner.
(5794) {1317289} [1317392]: On most platforms, the mnemonic appears underlined but may be emphasised in a platform specific manner.
*****************************************************************
========================= CLASS #34 =============================
(115) {21628} [21763]: The mnemonic indicator character '&amp;amp;' can be escaped by doubling it in the string, causing a single '&amp;amp;' to be displayed.
(757) {187139} [187258]: To display a single '&amp;amp;' in the tool tip, the character '&amp;amp;' can be escaped by doubling it in the string.
(2361) {535602} [535737]: The mnemonic indicator character '&amp;amp;' can be escaped by doubling it in the string, causing a single '&amp;amp;' to be displayed.
(2860) {694152} [694287]: The mnemonic indicator character '&amp;amp;' can be escaped by doubling it in the string, causing a single '&amp;amp;' to be displayed.
(2937) {708386} [708521]: The mnemonic indicator character '&amp;amp;' can be escaped by doubling it in the string, causing a single '&amp;amp;' to be displayed.
(3252) {783816} [783951]: The mnemonic indicator character '&amp;amp;' can be escaped by doubling it in the string, causing a single '&amp;amp;' to be displayed.
(3261) {785241} [785360]: To display a single '&amp;amp;' in the tool tip, the character '&amp;amp;' can be escaped by doubling it in the string.
(5104) {1145931} [1146066]: The mnemonic indicator character '&amp;amp;' can be escaped by doubling it in the string, causing a single '&amp;amp;' to be displayed.
(5108) {1146886} [1147005]: To display a single '&amp;amp;' in the tool tip, the character '&amp;amp;' can be escaped by doubling it in the string.
(5318) {1199622} [1199741]: To display a single '&amp;amp;' in the tool tip, the character '&amp;amp;' can be escaped by doubling it in the string.
(5795) {1317394} [1317529]: The mnemonic indicator character '&amp;amp;' can be escaped by doubling it in the string, causing a single '&amp;amp;' to be displayed.
(5801) {1318483} [1318602]: To display a single '&amp;amp;' in the tool tip, the character '&amp;amp;' can be escaped by doubling it in the string.
(6040) {1376558} [1376677]: To display a single '&amp;amp;' in the tool tip, the character '&amp;amp;' can be escaped by doubling it in the string.
(6225) {1425088} [1425207]: To display a single '&amp;amp;' in the tool tip, the character '&amp;amp;' can be escaped by doubling it in the string.
*****************************************************************
========================= CLASS #35 =============================
(118) {22021} [22094]: &lt;/p&gt;&lt;p&gt; Also note, if control characters like '\n', '\t' etc.
(315) {67960} [68018]: &lt;p&gt; Note: If control characters like '\n', '\t' etc.
(319) {68770} [68843]: &lt;/p&gt;&lt;p&gt; Also note, if control characters like '\n', '\t' etc.
(396) {92277} [92350]: &lt;/p&gt;&lt;p&gt; Also note, if control characters like '\n', '\t' etc.
(1024) {259476} [259534]: &lt;p&gt; Note: If control characters like '\n', '\t' etc.
(2362) {535738} [535806]: &lt;/p&gt;&lt;p&gt; Note: If control characters like '\n', '\t' etc.
(2748) {674616} [674674]: &lt;p&gt; Note: If control characters like '\n', '\t' etc.
(2861) {694288} [694357]: &lt;/p&gt; &lt;p&gt; Note: If control characters like '\n', '\t' etc.
(2950) {711504} [711562]: &lt;p&gt; Note: If control characters like '\n', '\t' etc.
(2954) {712314} [712387]: &lt;/p&gt;&lt;p&gt; Also note, if control characters like '\n', '\t' etc.
(5368) {1217154} [1217212]: &lt;p&gt; Note: If control characters like '\n', '\t' etc.
*****************************************************************
========================= CLASS #36 =============================
(119) {22095} [22159]: are used in the string, then the behavior is platform dependent.
(316) {68019} [68083]: are used in the string, then the behavior is platform dependent.
(320) {68844} [68908]: are used in the string, then the behavior is platform dependent.
(397) {92351} [92415]: are used in the string, then the behavior is platform dependent.
(1025) {259535} [259599]: are used in the string, then the behavior is platform dependent.
(2363) {535807} [535871]: are used in the string, then the behavior is platform dependent.
(2749) {674675} [674739]: are used in the string, then the behavior is platform dependent.
(2862) {694358} [694422]: are used in the string, then the behavior is platform dependent.
(2951) {711563} [711627]: are used in the string, then the behavior is platform dependent.
(2955) {712388} [712452]: are used in the string, then the behavior is platform dependent.
(5369) {1217213} [1217277]: are used in the string, then the behavior is platform dependent.
(5371) {1217794} [1217858]: are used in the string, then the behavior is platform dependent.
(5563) {1262473} [1262537]: are used in the string, then the behavior is platform dependent.
(5797) {1317599} [1317663]: are used in the string, then the behavior is platform dependent.
(6306) {1451773} [1451837]: are used in the string, then the behavior is platform dependent.
(6308) {1452366} [1452430]: are used in the string, then the behavior is platform dependent.
*****************************************************************
========================= CLASS #37 =============================
(126) {23499} [23636]: Note that, if the object is an instance of &lt;code&gt;Class&lt;/code&gt; it is assumed that the method is a static method on that class.
(130) {24277} [24414]: Note that, if the object is an instance of &lt;code&gt;Class&lt;/code&gt; it is assumed that the method is a static method on that class.
(134) {25216} [25353]: Note that, if the object is an instance of &lt;code&gt;Class&lt;/code&gt; it is assumed that the method is a static method on that class.
(140) {26540} [26712]: Use other constructors.&lt;/li&gt; &lt;li&gt; If the object is an instance of &lt;code&gt;Class&lt;/code&gt; it is assumed that the method is a static method on that class.
*****************************************************************
========================= CLASS #38 =============================
(127) {23638} [23747]: &lt;p&gt;Note, do not use this if the method arguments have a double, as arguments will be shifted/corrupted.
(131) {24416} [24525]: &lt;p&gt;Note, do not use this if the method arguments have a double, as arguments will be shifted/corrupted.
(135) {25355} [25464]: &lt;p&gt;Note, do not use this if the method arguments have a double, as arguments will be shifted/corrupted.
*****************************************************************
========================= CLASS #39 =============================
(128) {23748} [23763]: See Bug 510538.
(132) {24526} [24541]: See Bug 510538.
(136) {25465} [25480]: See Bug 510538.
*****************************************************************
========================= CLASS #40 =============================
(129) {23764} [24276]: Instead use the following constructor: &lt;br&gt; &lt;code&gt; Callback (Object, String, Type, Type [])&lt;/code&gt;&lt;/p&gt; @param object the object to send the message to @param method the name of the method to invoke @param argCount the number of arguments that the method takes ------------ Constructs a new instance of this class given an object to send the message to, a string naming the method to invoke, an argument count and a flag indicating whether or not the arguments will be passed in an array.
(133) {24542} [25215]: Instead use the following constructor: &lt;br&gt; &lt;code&gt; Callback (Object, String, Type, Type [])&lt;/code&gt;&lt;/p&gt; @param object the object to send the message to @param method the name of the method to invoke @param argCount the number of arguments that the method takes @param isArrayBased &lt;code&gt;true&lt;/code&gt; if the arguments should be passed in an array and false otherwise ------------ Constructs a new instance of this class given an object to send the message to, a string naming the method to invoke, an argument count, a flag indicating whether or not the arguments will be passed in an array and a value to return when an exception happens.
(137) {25481} [26021]: Instead use the following constructor: &lt;br&gt; &lt;code&gt; Callback (Object, String, Type, Type [])&lt;/code&gt;&lt;/p&gt; @param object the object to send the message to @param method the name of the method to invoke @param argCount the number of arguments that the method takes @param isArrayBased &lt;code&gt;true&lt;/code&gt; if the arguments should be passed in an array and false otherwise @param errorResult the return value if the java code throws an exception ------------ &lt;p&gt;Register the java method to be a C callback.
*****************************************************************
========================= CLASS #41 =============================
(151) {29202} [29446]: &lt;/p&gt; @return the entry count @since 2.1 ------------ Indicates whether or not callbacks which are triggered at the native level should cause the messages described by the matching &lt;code&gt;Callback&lt;/code&gt; objects to be invoked.
(154) {29625} [29881]: &lt;/p&gt; @param enable true if callbacks should be invoked ------------ Returns whether or not callbacks which are triggered at the native level should cause the messages described by the matching &lt;code&gt;Callback&lt;/code&gt; objects to be invoked.
*****************************************************************
========================= CLASS #42 =============================
(152) {29447} [29561]: This method is used to safely shut down SWT when it is run within environments which can generate spurious events.
(155) {29882} [29996]: This method is used to safely shut down SWT when it is run within environments which can generate spurious events.
*****************************************************************
========================= CLASS #43 =============================
(174) {33926} [34101]: &lt;p&gt; The caret for the control is automatically hidden and shown when the control is painted or resized, when focus is gained or lost and when an the control is scrolled.
(181) {35893} [36068]: &lt;p&gt; The caret for the control is automatically hidden and shown when the control is painted or resized, when focus is gained or lost and when an the control is scrolled.
*****************************************************************
========================= CLASS #44 =============================
(175) {34103} [34227]: To avoid drawing on top of the caret, the programmer must hide and show the caret when drawing in the window any other time.
(182) {36070} [36194]: To avoid drawing on top of the caret, the programmer must hide and show the caret when drawing in the window any other time.
*****************************************************************
========================= CLASS #45 =============================
(200) {41725} [41945]: &lt;p&gt; If one of the receiver's ancestors is not visible or some other condition makes the receiver not visible, this method may still indicate that it is considered visible even though it may not actually be showing.
(212) {47061} [47238]: &lt;p&gt; If one of the receiver's ancestors is not visible or some other condition makes the receiver not visible, marking it visible may not actually cause it to be displayed.
(356) {78217} [78437]: &lt;p&gt; If one of the receiver's ancestors is not visible or some other condition makes the receiver not visible, this method may still indicate that it is considered visible even though it may not actually be showing.
(358) {78877} [79054]: &lt;p&gt; If one of the receiver's ancestors is not visible or some other condition makes the receiver not visible, marking it visible may not actually cause it to be displayed.
(628) {149920} [150140]: &lt;p&gt; If one of the receiver's ancestors is not visible or some other condition makes the receiver not visible, this method may still indicate that it is considered visible even though it may not actually be showing.
(762) {188331} [188508]: &lt;p&gt; If one of the receiver's ancestors is not visible or some other condition makes the receiver not visible, marking it visible may not actually cause it to be displayed.
(3128) {752376} [752596]: &lt;p&gt; If one of the receiver's ancestors is not visible or some other condition makes the receiver not visible, this method may still indicate that it is considered visible even though it may not actually be showing.
(3151) {760823} [761000]: &lt;p&gt; If one of the receiver's ancestors is not visible or some other condition makes the receiver not visible, marking it visible may not actually cause it to be displayed.
(3976) {925447} [925667]: &lt;p&gt; If one of the receiver's ancestors is not visible or some other condition makes the receiver not visible, this method may still indicate that it is considered visible even though it may not actually be showing.
(3999) {932026} [932203]: &lt;p&gt; If one of the receiver's ancestors is not visible or some other condition makes the receiver not visible, marking it visible may not actually cause it to be displayed.
(5171) {1162618} [1162838]: &lt;p&gt; If one of the receiver's ancestors is not visible or some other condition makes the receiver not visible, this method may still indicate that it is considered visible even though it may not actually be showing.
(5185) {1166271} [1166491]: &lt;p&gt; If one of the receiver's ancestors is not visible or some other condition makes the receiver not visible, this method may still indicate that it is considered visible even though it may not actually be showing.
(5233) {1178346} [1178523]: &lt;p&gt; If one of the receiver's ancestors is not visible or some other condition makes the receiver not visible, marking it visible may not actually cause it to be displayed.
(5238) {1179786} [1179963]: &lt;p&gt; If one of the receiver's ancestors is not visible or some other condition makes the receiver not visible, marking it visible may not actually cause it to be displayed.
(5825) {1324944} [1325164]: &lt;p&gt; If one of the receiver's ancestors is not visible or some other condition makes the receiver not visible, this method may still indicate that it is considered visible even though it may not actually be showing.
(5837) {1329348} [1329525]: &lt;p&gt; If one of the receiver's ancestors is not visible or some other condition makes the receiver not visible, marking it visible may not actually cause it to be displayed.
(6080) {1388527} [1388747]: &lt;p&gt; If one of the receiver's ancestors is not visible or some other condition makes the receiver not visible, this method may still indicate that it is considered visible even though it may not actually be showing.
(6112) {1396077} [1396297]: &lt;p&gt; If one of the receiver's ancestors is not visible or some other condition makes the receiver not visible, this method may still indicate that it is considered visible even though it may not actually be showing.
(6142) {1403990} [1404167]: &lt;p&gt; If one of the receiver's ancestors is not visible or some other condition makes the receiver not visible, marking it visible may not actually cause it to be displayed.
(6149) {1406372} [1406549]: &lt;p&gt; If one of the receiver's ancestors is not visible or some other condition makes the receiver not visible, marking it visible may not actually cause it to be displayed.
*****************************************************************
========================= CLASS #46 =============================
(217) {48214} [48427]: &lt;p&gt; Application code must explicitly invoke the &lt;code&gt;Color.dispose()&lt;/code&gt; method to release the operating system resources managed by each instance when those instances are no longer required.
(893) {224435} [224649]: &lt;p&gt; Application code must explicitly invoke the &lt;code&gt;Cursor.dispose()&lt;/code&gt; method to release the operating system resources managed by each instance when those instances are no longer required.
(1706) {398643} [398855]: &lt;p&gt; Application code must explicitly invoke the &lt;code&gt;Font.dispose()&lt;/code&gt; method to release the operating system resources managed by each instance when those instances are no longer required.
(1925) {440074} [440296]: &lt;/p&gt; &lt;p&gt; Application code must explicitly invoke the &lt;code&gt;GC.dispose()&lt;/code&gt; method to release the operating system resources managed by each instance when those instances are no longer required.
(2386) {540242} [540465]: &lt;/p&gt;&lt;p&gt; Application code must explicitly invoke the &lt;code&gt;Image.dispose()&lt;/code&gt; method to release the operating system resources managed by each instance when those instances are no longer required.
(3407) {812918} [813130]: &lt;p&gt; Application code must explicitly invoke the &lt;code&gt;Path.dispose()&lt;/code&gt; method to release the operating system resources managed by each instance when those instances are no longer required.
(3458) {825873} [826088]: &lt;p&gt; Application code must explicitly invoke the &lt;code&gt;Pattern.dispose()&lt;/code&gt; method to release the operating system resources managed by each instance when those instances are no longer required.
(3727) {862979} [863193]: &lt;p&gt; Application code must explicitly invoke the &lt;code&gt;Region.dispose()&lt;/code&gt; method to release the operating system resources managed by each instance when those instances are no longer required.
(5583) {1266476} [1266704]: &lt;/p&gt;&lt;p&gt; Application code must explicitly invoke the &lt;code&gt;TextLayout#dispose()&lt;/code&gt; method to release the operating system resources managed by each instance when those instances are no longer required.
(5928) {1348062} [1348279]: &lt;p&gt; Application code must explicitly invoke the &lt;code&gt;Transform.dispose()&lt;/code&gt; method to release the operating system resources managed by each instance when those instances are no longer required.
*****************************************************************
========================= CLASS #47 =============================
(219) {48975} [49061]: It is marked public only so that it can be shared within the packages provided by SWT.
(271) {58067} [58153]: It is marked public only so that it can be shared within the packages provided by SWT.
(276) {58707} [58793]: It is marked public only so that it can be shared within the packages provided by SWT.
(523) {120463} [120549]: It is marked public only so that it can be shared within the packages provided by SWT.
(631) {150650} [150736]: It is marked public only so that it can be shared within the packages provided by SWT.
(636) {151208} [151294]: It is marked public only so that it can be shared within the packages provided by SWT.
(896) {225540} [225626]: It is marked public only so that it can be shared within the packages provided by SWT.
(919) {234200} [234286]: It is marked public only so that it can be shared within the packages provided by SWT.
(1033) {261282} [261368]: It is marked public only so that it can be shared within the packages provided by SWT.
(1100) {272176} [272262]: It is marked public only so that it can be shared within the packages provided by SWT.
(1105) {272733} [272819]: It is marked public only so that it can be shared within the packages provided by SWT.
(1197) {291338} [291424]: It is marked public only so that it can be shared within the packages provided by SWT.
(1315) {325325} [325411]: It is marked public only so that it can be shared within the packages provided by SWT.
(1322) {326307} [326393]: It is marked public only so that it can be shared within the packages provided by SWT.
(1484) {356947} [357033]: It is marked public only so that it can be shared within the packages provided by SWT.
(1488) {357354} [357440]: It is marked public only so that it can be shared within the packages provided by SWT.
(1493) {357913} [357999]: It is marked public only so that it can be shared within the packages provided by SWT.
(1708) {399378} [399464]: It is marked public only so that it can be shared within the packages provided by SWT.
(1731) {404050} [404136]: It is marked public only so that it can be shared within the packages provided by SWT.
(1740) {406335} [406421]: It is marked public only so that it can be shared within the packages provided by SWT.
(1744) {406806} [406892]: It is marked public only so that it can be shared within the packages provided by SWT.
(1778) {412823} [412909]: It is marked public only so that it can be shared within the packages provided by SWT.
(1807) {419638} [419724]: It is marked public only so that it can be shared within the packages provided by SWT.
(1825) {422009} [422095]: It is marked public only so that it can be shared within the packages provided by SWT.
(1929) {441088} [441174]: It is marked public only so that it can be shared within the packages provided by SWT.
(2042) {474474} [474560]: It is marked public only so that it can be shared within the packages provided by SWT.
(2137) {500466} [500552]: It is marked public only so that it can be shared within the packages provided by SWT.
(2144) {501070} [501156]: It is marked public only so that it can be shared within the packages provided by SWT.
(2157) {502667} [502753]: It is marked public only so that it can be shared within the packages provided by SWT.
(2388) {541075} [541161]: It is marked public only so that it can be shared within the packages provided by SWT.
(2392) {541540} [541626]: It is marked public only so that it can be shared within the packages provided by SWT.
(2465) {559413} [559499]: It is marked public only so that it can be shared within the packages provided by SWT.
(2470) {559969} [560055]: It is marked public only so that it can be shared within the packages provided by SWT.
(2486) {562419} [562505]: It is marked public only so that it can be shared within the packages provided by SWT.
(2550) {574435} [574521]: It is marked public only so that it can be shared within the packages provided by SWT.
(3086) {739383} [739469]: It is marked public only so that it can be shared within the packages provided by SWT.
(3410) {813777} [813863]: It is marked public only so that it can be shared within the packages provided by SWT.
(3461) {826738} [826824]: It is marked public only so that it can be shared within the packages provided by SWT.
(3729) {863596} [863682]: It is marked public only so that it can be shared within the packages provided by SWT.
(3765) {876207} [876293]: It is marked public only so that it can be shared within the packages provided by SWT.
(4121) {954893} [954979]: It is marked public only so that it can be shared within the packages provided by SWT.
(4126) {955540} [955626]: It is marked public only so that it can be shared within the packages provided by SWT.
(5931) {1348835} [1348921]: It is marked public only so that it can be shared within the packages provided by SWT.
(6237) {1427833} [1427919]: It is marked public only so that it can be shared within the packages provided by SWT.
(6331) {1456319} [1456405]: It is marked public only so that it can be shared within the packages provided by SWT.
(6335) {1456846} [1456932]: It is marked public only so that it can be shared within the packages provided by SWT.
(6340) {1457289} [1457375]: It is marked public only so that it can be shared within the packages provided by SWT.
(6345) {1457696} [1457782]: It is marked public only so that it can be shared within the packages provided by SWT.
(6442) {1477042} [1477128]: It is marked public only so that it can be shared within the packages provided by SWT.
*****************************************************************
========================= CLASS #48 =============================
(220) {49062} [49150]: It is not available on all platforms and should never be accessed from application code.
(272) {58154} [58241]: It is not available on all platforms, and should never be called from application code.
(277) {58794} [58881]: It is not available on all platforms, and should never be called from application code.
(524) {120550} [120638]: It is not available on all platforms and should never be accessed from application code.
(632) {150737} [150824]: It is not available on all platforms, and should never be called from application code.
(637) {151295} [151382]: It is not available on all platforms, and should never be called from application code.
(897) {225627} [225715]: It is not available on all platforms and should never be accessed from application code.
(920) {234287} [234374]: It is not available on all platforms, and should never be called from application code.
(1034) {261369} [261457]: It is not available on all platforms and should never be accessed from application code.
(1101) {272263} [272350]: It is not available on all platforms, and should never be called from application code.
(1106) {272820} [272907]: It is not available on all platforms, and should never be called from application code.
(1198) {291425} [291513]: It is not available on all platforms and should never be accessed from application code.
(1316) {325412} [325499]: It is not available on all platforms, and should never be called from application code.
(1323) {326394} [326481]: It is not available on all platforms, and should never be called from application code.
(1489) {357441} [357528]: It is not available on all platforms, and should never be called from application code.
(1494) {358000} [358087]: It is not available on all platforms, and should never be called from application code.
(1709) {399465} [399553]: It is not available on all platforms and should never be accessed from application code.
(1732) {404137} [404224]: It is not available on all platforms, and should never be called from application code.
(1741) {406422} [406510]: It is not available on all platforms and should never be accessed from application code.
(1745) {406893} [406981]: It is not available on all platforms and should never be accessed from application code.
(1779) {412910} [412997]: It is not available on all platforms, and should never be called from application code.
(1808) {419725} [419813]: It is not available on all platforms and should never be accessed from application code.
(1826) {422096} [422183]: It is not available on all platforms, and should never be called from application code.
(1930) {441175} [441263]: It is not available on all platforms and should never be accessed from application code.
(2043) {474561} [474648]: It is not available on all platforms, and should never be called from application code.
(2138) {500553} [500640]: It is not available on all platforms, and should never be called from application code.
(2145) {501157} [501244]: It is not available on all platforms, and should never be called from application code.
(2158) {502754} [502841]: It is not available on all platforms, and should never be called from application code.
(2389) {541162} [541250]: It is not available on all platforms and should never be accessed from application code.
(2393) {541627} [541715]: It is not available on all platforms and should never be accessed from application code.
(2466) {559500} [559587]: It is not available on all platforms, and should never be called from application code.
(2471) {560056} [560143]: It is not available on all platforms, and should never be called from application code.
(2487) {562506} [562593]: It is not available on all platforms, and should never be called from application code.
(2551) {574522} [574611]: It is subject to change without notice, and should never be called from application code.
(3087) {739470} [739558]: It is not available on all platforms and should never be accessed from application code.
(3411) {813864} [813952]: It is not available on all platforms and should never be accessed from application code.
(3462) {826825} [826913]: It is not available on all platforms and should never be accessed from application code.
(3730) {863683} [863771]: It is not available on all platforms and should never be accessed from application code.
(3766) {876294} [876381]: It is not available on all platforms, and should never be called from application code.
(4122) {954980} [955067]: It is not available on all platforms, and should never be called from application code.
(4127) {955627} [955714]: It is not available on all platforms, and should never be called from application code.
(5932) {1348922} [1349010]: It is not available on all platforms and should never be accessed from application code.
(6238) {1427920} [1428008]: It is not available on all platforms and should never be accessed from application code.
*****************************************************************
========================= CLASS #49 =============================
(224) {49543} [49681]: On limited color devices, the color instance created by this call may not have the same RGB values as the ones specified by the arguments.
(228) {50526} [50664]: On limited color devices, the color instance created by this call may not have the same RGB values as the ones specified by the arguments.
(235) {51614} [51751]: On limited color devices, the color instance created by this call may not have the same RGB values as the ones specified by the argument.
(239) {52559} [52697]: On limited color devices, the color instance created by this call may not have the same RGBA values as the ones specified by the argument.
(246) {53659} [53796]: On limited color devices, the color instance created by this call may not have the same RGB values as the ones specified by the argument.
*****************************************************************
========================= CLASS #50 =============================
(225) {49682} [49777]: The RGB values on the returned instance will be the color values of the operating system color.
(229) {50665} [50760]: The RGB values on the returned instance will be the color values of the operating system color.
(236) {51752} [51847]: The RGB values on the returned instance will be the color values of the operating system color.
(240) {52698} [52802]: The RGBA values on the returned instance will be the color values of the operating system color + alpha.
(247) {53797} [53892]: The RGB values on the returned instance will be the color values of the operating system color.
*****************************************************************
========================= CLASS #51 =============================
(226) {49778} [49845]: &lt;p&gt; You must dispose the color when it is no longer required.
(230) {50761} [50828]: &lt;p&gt; You must dispose the color when it is no longer required.
(237) {51848} [51915]: &lt;p&gt; You must dispose the color when it is no longer required.
(241) {52803} [52870]: &lt;p&gt; You must dispose the color when it is no longer required.
(248) {53893} [53960]: &lt;p&gt; You must dispose the color when it is no longer required.
(902) {229032} [229100]: &lt;p&gt; You must dispose the cursor when it is no longer required.
(907) {230769} [230837]: &lt;p&gt; You must dispose the cursor when it is no longer required.
(909) {232033} [232101]: &lt;p&gt; You must dispose the cursor when it is no longer required.
(1043) {262683} [262751]: &lt;p&gt; You must dispose the device when it is no longer required.
(1045) {262854} [262922]: &lt;p&gt; You must dispose the device when it is no longer required.
(1713) {399851} [399917]: &lt;p&gt; You must dispose the font when it is no longer required.
(1715) {400552} [400618]: &lt;p&gt; You must dispose the font when it is no longer required.
(1717) {401426} [401492]: &lt;p&gt; You must dispose the font when it is no longer required.
(1935) {442799} [442877]: &lt;p&gt; You must dispose the graphics context when it is no longer required.
(1938) {443791} [443869]: &lt;p&gt; You must dispose the graphics context when it is no longer required.
(2400) {543293} [543371]: &lt;/p&gt; &lt;p&gt; You must dispose the image when it is no longer required.
*****************************************************************
========================= CLASS #52 =============================
(227) {49846} [50525]: &lt;/p&gt; @param device the device on which to allocate the color @param red the amount of red in the color @param green the amount of green in the color @param blue the amount of blue in the color @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if device is null and there is no current device&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the red, green or blue argument is not between 0 and 255&lt;/li&gt; &lt;/ul&gt; @see #dispose ------------ Constructs a new instance of this class given a device and the desired red, green, blue &amp; alpha values expressed as ints in the range 0 to 255 (where 0 is black and 255 is full brightness).
(231) {50829} [51075]: &lt;/p&gt; @param device the device on which to allocate the color @param red the amount of red in the color @param green the amount of green in the color @param blue the amount of blue in the color @param alpha the amount of alpha in the color.
(234) {51167} [51613]: @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if device is null and there is no current device&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the red, green, blue or alpha argument is not between 0 and 255&lt;/li&gt; &lt;/ul&gt; @see #dispose @since 3.104 ------------ Constructs a new instance of this class given a device and an &lt;code&gt;RGB&lt;/code&gt; describing the desired red, green and blue values.
(238) {51916} [52558]: &lt;/p&gt; @param device the device on which to allocate the color @param rgb the RGB values of the desired color @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if device is null and there is no current device&lt;/li&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the rgb argument is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the red, green or blue components of the argument are not between 0 and 255&lt;/li&gt; &lt;/ul&gt; @see #dispose ------------ Constructs a new instance of this class given a device and an &lt;code&gt;RGBA&lt;/code&gt; describing the desired red, green, blue &amp; alpha values.
(242) {52871} [52988]: &lt;/p&gt; @param device the device on which to allocate the color @param rgba the RGBA values of the desired color.
(245) {53080} [53658]: @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if device is null and there is no current device&lt;/li&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the rgba argument is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the red, green, blue or alpha components of the argument are not between 0 and 255&lt;/li&gt; &lt;/ul&gt; @see #dispose @since 3.104 ------------ Constructs a new instance of this class given a device, an &lt;code&gt;RGB&lt;/code&gt; describing the desired red, green and blue values, alpha specifying the level of transparency.
(249) {53961} [54126]: &lt;/p&gt; @param device the device on which to allocate the color @param rgb the RGB values of the desired color @param alpha the alpha value of the desired color.
(252) {54218} [54758]: @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if device is null and there is no current device&lt;/li&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the rgb argument is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the red, green, blue or alpha components of the argument are not between 0 and 255&lt;/li&gt; &lt;/ul&gt; @see #dispose @since 3.104 ------------ Compares the argument to the receiver, and returns true if they represent the &lt;em&gt;same&lt;/em&gt; object using a class specific comparison.
(262) {56773} [57007]: @param device the device on which to allocate the color @param red the amount of red in the color @param green the amount of green in the color @param blue the amount of blue in the color @param alpha the amount of alpha in the color.
(265) {57099} [57414]: @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the red, green, blue or alpha argument is not between 0 and 255&lt;/li&gt; &lt;/ul&gt; @see #dispose ------------ Returns &lt;code&gt;true&lt;/code&gt; if the color has been disposed, and &lt;code&gt;false&lt;/code&gt; otherwise.
(1811) {419984} [420142]: ------------ Compares the argument to the receiver, and returns true if they represent the &lt;em&gt;same&lt;/em&gt; object using a class specific comparison.
*****************************************************************
========================= CLASS #53 =============================
(232) {51076} [51132]: Currently, SWT only honors extreme values for alpha i.e.
(243) {52989} [53045]: Currently, SWT only honors extreme values for alpha i.e.
(250) {54127} [54183]: Currently, SWT only honors extreme values for alpha i.e.
(263) {57008} [57064]: Currently, SWT only honors extreme values for alpha i.e.
*****************************************************************
========================= CLASS #54 =============================
(233) {51133} [51165]: 0 (transparent) or 255 (opaque).
(244) {53046} [53078]: 0 (transparent) or 255 (opaque).
(251) {54184} [54216]: 0 (transparent) or 255 (opaque).
(264) {57065} [57097]: 0 (transparent) or 255 (opaque).
*****************************************************************
========================= CLASS #55 =============================
(266) {57415} [57474]: &lt;p&gt; This method gets the dispose state for the color.
(914) {233542} [233602]: &lt;p&gt; This method gets the dispose state for the cursor.
(1109) {273206} [273266]: &lt;p&gt; This method gets the dispose state for the device.
(1726) {403404} [403462]: &lt;p&gt; This method gets the dispose state for the font.
(2066) {480812} [480868]: &lt;p&gt; This method gets the dispose state for the GC.
(2474) {560441} [560500]: &lt;p&gt; This method gets the dispose state for the image.
(3445) {823565} [823623]: &lt;p&gt; This method gets the dispose state for the Path.
(3477) {831090} [831151]: &lt;p&gt; This method gets the dispose state for the Pattern.
(3753) {872181} [872241]: &lt;p&gt; This method gets the dispose state for the region.
(3782) {878819} [878881]: &lt;p&gt; This method gets the dispose state for the resource.
(5637) {1282670} [1282735]: &lt;p&gt; This method gets the dispose state for the text layout.
(5947) {1353444} [1353507]: &lt;p&gt; This method gets the dispose state for the Transform.
(6432) {1474449} [1474509]: &lt;p&gt; This method gets the dispose state for the widget.
*****************************************************************
========================= CLASS #56 =============================
(267) {57475} [57593]: When a color has been disposed, it is an error to invoke any other method (except {@link #dispose()}) using the color.
(915) {233603} [233723]: When a cursor has been disposed, it is an error to invoke any other method (except {@link #dispose()}) using the cursor.
(1110) {273267} [273359]: When a device has been disposed, it is an error to invoke any other method using the device.
(1727) {403463} [403579]: When a font has been disposed, it is an error to invoke any other method (except {@link #dispose()}) using the font.
(2067) {480869} [480981]: When a GC has been disposed, it is an error to invoke any other method (except {@link #dispose()}) using the GC.
(2475) {560501} [560620]: When an image has been disposed, it is an error to invoke any other method (except {@link #dispose()}) using the image.
(3446) {823624} [823740]: When a Path has been disposed, it is an error to invoke any other method (except {@link #dispose()}) using the Path.
(3478) {831152} [831274]: When a Pattern has been disposed, it is an error to invoke any other method (except {@link #dispose()}) using the Pattern.
(3754) {872242} [872362]: When a region has been disposed, it is an error to invoke any other method (except {@link #dispose()}) using the region.
(3783) {878882} [879006]: When a resource has been disposed, it is an error to invoke any other method (except {@link #dispose()}) using the resource.
(5638) {1282736} [1282866]: When a text layout has been disposed, it is an error to invoke any other method (except {@link #dispose()}) using the text layout.
(5948) {1353508} [1353634]: When a Transform has been disposed, it is an error to invoke any other method (except {@link #dispose()}) using the Transform.
(6433) {1474510} [1474630]: When a widget has been disposed, it is an error to invoke any other method (except {@link #dispose()}) using the widget.
*****************************************************************
========================= CLASS #57 =============================
(269) {57802} [57927]: @return a string representation of the receiver ------------ Invokes platform specific functionality to allocate a new color.
(274) {58490} [58567]: ------------ Invokes platform specific functionality to allocate a new color.
(917) {233933} [234059]: @return a string representation of the receiver ------------ Invokes platform specific functionality to allocate a new cursor.
(1729) {403787} [403911]: @return a string representation of the receiver ------------ Invokes platform specific functionality to allocate a new font.
(2135) {500193} [500329]: @return a string representation of the receiver ------------ Invokes platform specific functionality to allocate a new graphics context.
(2484) {562154} [562279]: @return a string representation of the receiver ------------ Invokes platform specific functionality to allocate a new image.
(3763) {875940} [876066]: @return a string representation of the receiver ------------ Invokes platform specific functionality to allocate a new region.
*****************************************************************
========================= CLASS #58 =============================
(273) {58242} [58489]: &lt;/p&gt; @param device the device on which to allocate the color @param handle the handle for the color @return a new color object containing the specified device and handle @noreference This method is not intended to be referenced by clients.
(278) {58882} [59185]: &lt;/p&gt; @param device the device on which to allocate the color @param handle the handle for the color @param alpha the int for the alpha content in the color @return a new color object containing the specified device and handle @noreference This method is not intended to be referenced by clients.
(633) {150825} [150989]: &lt;/p&gt; @param data the platform specific GC data @return the platform specific GC handle @noreference This method is not intended to be referenced by clients.
(638) {151383} [151550]: &lt;/p&gt; @param hDC the platform specific GC handle @param data the platform specific GC data @noreference This method is not intended to be referenced by clients.
(921) {234375} [234624]: &lt;/p&gt; @param device the device on which to allocate the color @param handle the handle for the cursor @return a new cursor object containing the specified device and handle @noreference This method is not intended to be referenced by clients.
(1102) {272351} [272515]: &lt;/p&gt; @param data the platform specific GC data @return the platform specific GC handle @noreference This method is not intended to be referenced by clients.
(1107) {272908} [273075]: &lt;/p&gt; @param hDC the platform specific GC handle @param data the platform specific GC data @noreference This method is not intended to be referenced by clients.
(1123) {275391} [275488]: @return zoom in percentage @noreference This method is not intended to be referenced by clients.
(1324) {326482} [326649]: &lt;/p&gt; @param hDC the platform specific GC handle @param data the platform specific GC data @noreference This method is not intended to be referenced by clients.
(1490) {357529} [357693]: &lt;/p&gt; @param data the platform specific GC data @return the platform specific GC handle @noreference This method is not intended to be referenced by clients.
(1495) {358088} [358258]: &lt;/p&gt; @param handle the platform specific GC handle @param data the platform specific GC data @noreference This method is not intended to be referenced by clients.
(1733) {404225} [404470]: &lt;/p&gt; @param device the device on which to allocate the color @param handle the handle for the font @return a new font object containing the specified device and handle @noreference This method is not intended to be referenced by clients.
(2146) {501245} [501284]: &lt;/p&gt; @param hDC the Windows HDC.
(2467) {559588} [559752]: &lt;/p&gt; @param data the platform specific GC data @return the platform specific GC handle @noreference This method is not intended to be referenced by clients.
(2472) {560144} [560311]: &lt;/p&gt; @param hDC the platform specific GC handle @param data the platform specific GC data @noreference This method is not intended to be referenced by clients.
*****************************************************************
========================= CLASS #59 =============================
(291) {62325} [62464]: @return the array of RGBs, which may be null @since 3.8 ------------ Makes the receiver visible and brings it to the front of the display.
(1168) {286187} [286287]: @return the message ------------ Makes the dialog visible and brings it to the front of the display.
(1626) {386901} [387068]: @return true if the dialog will prompt for file overwrite, false otherwise @since 3.4 ------------ Makes the dialog visible and brings it to the front of the display.
(1796) {416880} [417052]: @return the RGB value for the selected color, or null @see PaletteData#getRGBs @since 2.1 ------------ Makes the dialog visible and brings it to the front of the display.
(3284) {790328} [790428]: @return the message ------------ Makes the dialog visible and brings it to the front of the display.
*****************************************************************
========================= CLASS #60 =============================
(297) {64036} [64199]: Often, &lt;code&gt;Combo&lt;/code&gt;s are used in the same place where a single selection &lt;code&gt;List&lt;/code&gt; widget could be used but space is limited.
(298) {64200} [64324]: A &lt;code&gt;Combo&lt;/code&gt; takes less space than a &lt;code&gt;List&lt;/code&gt; widget and shows similar information.
*****************************************************************
========================= CLASS #61 =============================
(301) {64755} [64926]: &lt;/p&gt;&lt;p&gt; Note that although this class is a subclass of &lt;code&gt;Composite&lt;/code&gt;, it does not make sense to add children to it, or set a layout on it.
(811) {201157} [201361]: &lt;/p&gt;&lt;p&gt; Note that although this class is a subclass of &lt;code&gt;Composite&lt;/code&gt;, it does not make sense to add &lt;code&gt;Control&lt;/code&gt; children to it, or set a layout on it.
(925) {235141} [235302]: &lt;p&gt; Note that although this class is a subclass of &lt;code&gt;Composite&lt;/code&gt;, it does not make sense to add children to it, or set a layout on it.
(4247) {985016} [985177]: &lt;p&gt; Note that although this class is a subclass of &lt;code&gt;Composite&lt;/code&gt;, it does not make sense to add children to it, or set a layout on it.
(5046) {1130378} [1130526]: &lt;/p&gt;&lt;p&gt; Note that although this class is a subclass of &lt;code&gt;Composite&lt;/code&gt;, it does not make sense to set a layout on it.
(5724) {1297829} [1298033]: &lt;/p&gt;&lt;p&gt; Note that although this class is a subclass of &lt;code&gt;Composite&lt;/code&gt;, it does not make sense to add &lt;code&gt;Control&lt;/code&gt; children to it, or set a layout on it.
*****************************************************************
========================= CLASS #62 =============================
(305) {65737} [65953]: ------------ the operating system limit for the number of characters that the text field in an instance of this class can hold public static final int LIMIT; /* These values can be different on different platforms.
(4250) {985875} [986104]: ------------ the operating system limit for the number of characters that the text field in an instance of this class can hold * @since 3.4 public static final int LIMIT; /* These values can be different on different platforms.
(5438) {1234372} [1234460]: // static final char PASSWORD; /* These values can be different on different platforms.
*****************************************************************
========================= CLASS #63 =============================
(306) {65954} [66043]: Therefore they are not initialized in the declaration to stop the compiler from inlining.
(4251) {986105} [986194]: Therefore they are not initialized in the declaration to stop the compiler from inlining.
(5439) {1234461} [1234550]: Therefore they are not initialized in the declaration to stop the compiler from inlining.
*****************************************************************
========================= CLASS #64 =============================
(307) {66045} [66074]: static { LIMIT = OS.IsWinNT ?
(4252) {986196} [986225]: static { LIMIT = OS.IsWinNT ?
(5440) {1234552} [1234581]: static { LIMIT = OS.IsWinNT ?
*****************************************************************
========================= CLASS #65 =============================
(310) {66319} [66789]: static final int CBID_LIST = 1000; static final int CBID_EDIT = 1001; static /*final*/ long /*int*/ EditProc, ListProc; static final long /*int*/ ComboProc; static final TCHAR ComboClass = new TCHAR (0, "COMBOBOX", true); static { WNDCLASS lpWndClass = new WNDCLASS (); OS.GetClassInfo (0, ComboClass, lpWndClass); ComboProc = lpWndClass.lpfnWndProc; } Constructs a new instance of this class given its parent and a style value describing its behavior and appearance.
(4253) {986226} [986365]: 0x7FFFFFFF : 0x7FFF; } Constructs a new instance of this class given its parent and a style value describing its behavior and appearance.
(5441) {1234582} [1234889]: 0x7FFFFFFF : 0x7FFF; DELIMITER = "\r\n"; } static final long /*int*/ EditProc; static final TCHAR EditClass = new TCHAR (0, "EDIT", true); static { WNDCLASS lpWndClass = new WNDCLASS (); OS.GetClassInfo (0, EditClass, lpWndClass); EditProc = lpWndClass.lpfnWndProc; /* This code is intentionally commented.
(5443) {1235224} [1235354]: echo : '*'; } Constructs a new instance of this class given its parent and a style value describing its behavior and appearance.
*****************************************************************
========================= CLASS #66 =============================
(323) {70207} [70347]: &lt;p&gt; A &lt;code&gt;SegmentEvent&lt;/code&gt; is sent whenever text content is being modified or a segment listener is added or removed.
(329) {70850} [70920]: &lt;code&gt;SegmentEvent&lt;/code&gt;s won't be sent on GTK and Cocoa.
(5449) {1237312} [1237452]: &lt;p&gt; A &lt;code&gt;SegmentEvent&lt;/code&gt; is sent whenever text content is being modified or a segment listener is added or removed.
(5455) {1237963} [1238025]: &lt;code&gt;SegmentEvent&lt;/code&gt;s won't be sent on Cocoa.
*****************************************************************
========================= CLASS #67 =============================
(324) {70348} [70461]: You can customize the appearance of text by indicating certain characters to be inserted at certain text offsets.
(5450) {1237453} [1237566]: You can customize the appearance of text by indicating certain characters to be inserted at certain text offsets.
*****************************************************************
========================= CLASS #68 =============================
(325) {70462} [70502]: This may be used for bidi purposes, e.g.
(5451) {1237567} [1237607]: This may be used for bidi purposes, e.g.
*****************************************************************
========================= CLASS #69 =============================
(326) {70503} [70595]: when adjacent segments of right-to-left text should not be reordered relative to each other.
(4009) {933741} [933874]: &lt;/p&gt; A SegmentListener may be used when adjacent segments of right-to-left text should not be reordered relative to each other.
(5452) {1237608} [1237700]: when adjacent segments of right-to-left text should not be reordered relative to each other.
*****************************************************************
========================= CLASS #70 =============================
(327) {70596} [70749]: E.g., multiple Java string literals in a right-to-left language should generally remain in logical order to each other, that is, the way they are stored.
(5453) {1237701} [1237854]: E.g., multiple Java string literals in a right-to-left language should generally remain in logical order to each other, that is, the way they are stored.
*****************************************************************
========================= CLASS #71 =============================
(338) {73720} [73779]: &lt;p&gt; The current selection is copied to the clipboard.
(340) {74074} [74172]: &lt;p&gt; The current selection is first copied to the clipboard and then deleted from the widget.
(4263) {989812} [989871]: &lt;p&gt; The current selection is copied to the clipboard.
(4265) {990154} [990252]: &lt;p&gt; The current selection is first copied to the clipboard and then deleted from the widget.
(5466) {1241450} [1241509]: &lt;p&gt; The current selection is copied to the clipboard.
(5468) {1241792} [1241890]: &lt;p&gt; The current selection is first copied to the clipboard and then deleted from the widget.
*****************************************************************
========================= CLASS #72 =============================
(342) {74520} [74591]: If the item at the index was already deselected, it remains deselected.
(386) {89076} [89143]: If the item at the index was already selected, it remains selected.
(2961) {714175} [714240]: If the item at the index was not selected, it remains deselected.
(2964) {714817} [714888]: If the item at the index was already deselected, it remains deselected.
(2968) {715392} [715457]: If the item at the index was not selected, it remains deselected.
(3008) {726418} [726489]: If the item at a given index was already selected, it remains selected.
(3012) {727202} [727269]: If the item at the index was already selected, it remains selected.
(3034) {731888} [731955]: If the item at the index was already selected, it remains selected.
(5076) {1139004} [1139071]: If the item at the index was already selected, it remains selected.
(5142) {1156051} [1156116]: If the item at the index was not selected, it remains deselected.
(5145) {1156693} [1156764]: If the item at the index was already deselected, it remains deselected.
(5149) {1157268} [1157333]: If the item at the index was not selected, it remains deselected.
(5216) {1174914} [1174985]: If the item at a given index was already selected, it remains selected.
(5220) {1175702} [1175769]: If the item at the index was already selected, it remains selected.
(6076) {1386837} [1386895]: If the item was already deselected, it remains deselected.
(6144) {1404510} [1404564]: If the item was already selected, it remains selected.
*****************************************************************
========================= CLASS #73 =============================
(343) {74592} [74634]: Indices that are out of range are ignored.
(387) {89144} [89186]: Indices that are out of range are ignored.
(2962) {714241} [714305]: Indices that are out of range and duplicate indices are ignored.
(2965) {714889} [714931]: Indices that are out of range are ignored.
(2970) {715498} [715540]: Indices that are out of range are ignored.
(2998) {722474} [722507]: Indices out of range are ignored.
(3009) {726490} [726554]: Indices that are out of range and duplicate indices are ignored.
(3013) {727270} [727312]: Indices that are out of range are ignored.
(3027) {730315} [730389]: &lt;p&gt; Indices that are out of range and duplicate indices are ignored.
(3036) {732104} [732146]: Indices that are out of range are ignored.
(5078) {1139145} [1139187]: Indices that are out of range are ignored.
(5143) {1156117} [1156181]: Indices that are out of range and duplicate indices are ignored.
(5146) {1156765} [1156807]: Indices that are out of range are ignored.
(5151) {1157374} [1157416]: Indices that are out of range are ignored.
(5207) {1171590} [1171623]: Indices out of range are ignored.
(5217) {1174986} [1175050]: Indices that are out of range and duplicate indices are ignored.
(5221) {1175770} [1175812]: Indices that are out of range are ignored.
(5241) {1180475} [1180549]: &lt;p&gt; Indices that are out of range and duplicate indices are ignored.
*****************************************************************
========================= CLASS #74 =============================
(350) {76220} [76269]: Throws an exception if the index is out of range.
(820) {203462} [203511]: Throws an exception if the index is out of range.
(1564) {370502} [370551]: Throws an exception if the index is out of range.
(2974) {716660} [716709]: Throws an exception if the index is out of range.
(3115) {748617} [748666]: Throws an exception if the index is out of range.
(5058) {1133528} [1133577]: Throws an exception if the index is out of range.
(5154) {1158132} [1158181]: Throws an exception if the index is out of range.
(5173) {1163215} [1163264]: Throws an exception if the index is out of range.
(5377) {1219246} [1219295]: Throws an exception if the index is out of range.
(5733) {1300191} [1300240]: Throws an exception if the index is out of range.
(6011) {1366204} [1366253]: Throws an exception if the index is out of range.
(6082) {1389138} [1389187]: Throws an exception if the index is out of range.
(6098) {1392878} [1392927]: Throws an exception if the index is out of range.
(6278) {1440182} [1440231]: Throws an exception if the index is out of range.
*****************************************************************
========================= CLASS #75 =============================
(354) {77644} [77797]: &lt;p&gt; Note: This is not the actual structure used by the receiver to maintain its list of items, so modifying the array will not affect the receiver.
(448) {104192} [104348]: &lt;p&gt; Note: This is not the actual structure used by the receiver to maintain its list of children, so modifying the array will not affect the receiver.
(824) {204706} [204869]: &lt;/p&gt;&lt;p&gt; Note: This is not the actual structure used by the receiver to maintain its list of items, so modifying the array will not affect the receiver.
(826) {205299} [205452]: &lt;p&gt; Note: This is not the actual structure used by the receiver to maintain its list of items, so modifying the array will not affect the receiver.
(1567) {371497} [371650]: &lt;p&gt; Note: This is not the actual structure used by the receiver to maintain its list of items, so modifying the array will not affect the receiver.
(2978) {718059} [718212]: &lt;p&gt; Note: This is not the actual structure used by the receiver to maintain its list of items, so modifying the array will not affect the receiver.
(2982) {718704} [718853]: &lt;p&gt; Note: This is not the actual structure used by the receiver to maintain its selection, so modifying the array will not affect the receiver.
(2988) {720097} [720246]: &lt;p&gt; Note: This is not the actual structure used by the receiver to maintain its selection, so modifying the array will not affect the receiver.
(3118) {749626} [749779]: &lt;p&gt; Note: This is not the actual structure used by the receiver to maintain its list of items, so modifying the array will not affect the receiver.
(5063) {1135176} [1135329]: &lt;p&gt; Note: This is not the actual structure used by the receiver to maintain its list of items, so modifying the array will not affect the receiver.
(5066) {1135775} [1135924]: &lt;p&gt; Note: This is not the actual structure used by the receiver to maintain its selection, so modifying the array will not affect the receiver.
(5163) {1160164} [1160327]: &lt;/p&gt;&lt;p&gt; Note: This is not the actual structure used by the receiver to maintain its list of items, so modifying the array will not affect the receiver.
(5168) {1161196} [1161349]: &lt;p&gt; Note: This is not the actual structure used by the receiver to maintain its list of items, so modifying the array will not affect the receiver.
(5182) {1165616} [1165769]: &lt;p&gt; Note: This is not the actual structure used by the receiver to maintain its list of items, so modifying the array will not affect the receiver.
(5189) {1166986} [1167135]: &lt;p&gt; Note: This is not the actual structure used by the receiver to maintain its selection, so modifying the array will not affect the receiver.
(5195) {1168372} [1168521]: &lt;p&gt; Note: This is not the actual structure used by the receiver to maintain its selection, so modifying the array will not affect the receiver.
(5382) {1220980} [1221133]: &lt;p&gt; Note: This is not the actual structure used by the receiver to maintain its list of items, so modifying the array will not affect the receiver.
(5738) {1301777} [1301930]: &lt;p&gt; Note: This is not the actual structure used by the receiver to maintain its list of items, so modifying the array will not affect the receiver.
(6014) {1367197} [1367350]: &lt;p&gt; Note: This is not the actual structure used by the receiver to maintain its list of items, so modifying the array will not affect the receiver.
(6091) {1391185} [1391348]: &lt;/p&gt;&lt;p&gt; Note: This is not the actual structure used by the receiver to maintain its list of items, so modifying the array will not affect the receiver.
(6096) {1392210} [1392363]: &lt;p&gt; Note: This is not the actual structure used by the receiver to maintain its list of items, so modifying the array will not affect the receiver.
(6109) {1395438} [1395591]: &lt;p&gt; Note: This is not the actual structure used by the receiver to maintain its list of items, so modifying the array will not affect the receiver.
(6117) {1397209} [1397358]: &lt;p&gt; Note: This is not the actual structure used by the receiver to maintain its selection, so modifying the array will not affect the receiver.
(6281) {1441264} [1441417]: &lt;p&gt; Note: This is not the actual structure used by the receiver to maintain its list of items, so modifying the array will not affect the receiver.
*****************************************************************
========================= CLASS #76 =============================
(361) {79943} [80026]: An "empty" selection is indicated by the x and y coordinates having the same value.
(5491) {1247491} [1247574]: An "empty" selection is indicated by the x and y coordinates having the same value.
*****************************************************************
========================= CLASS #77 =============================
(363) {80062} [80150]: The range of a selection is from 0..N where N is the number of characters in the widget.
(5493) {1247610} [1247698]: The range of a selection is from 0..N where N is the number of characters in the widget.
(5510) {1250615} [1250705]: The range of a selection is from 0..N-1 where N is the number of characters in the widget.
(5544) {1259213} [1259301]: The range of a selection is from 0..N where N is the number of characters in the widget.
(5549) {1260010} [1260098]: The range of a selection is from 0..N where N is the number of characters in the widget.
(5554) {1260922} [1261010]: The range of a selection is from 0..N where N is the number of characters in the widget.
*****************************************************************
========================= CLASS #78 =============================
(370) {82209} [82314]: &lt;p&gt; Note: This operation is a hint and is not supported on platforms that do not have this concept.
(402) {93694} [93799]: &lt;p&gt; Note: This operation is a hint and is not supported on platforms that do not have this concept.
(588) {139838} [139917]: &lt;p&gt; Note: This operation is a hint and may be overridden by the platform.
(694) {172036} [172115]: &lt;p&gt; Note: This operation is a hint and may be overridden by the platform.
(698) {172825} [172904]: &lt;p&gt; Note: This operation is a hint and may be overridden by the platform.
(722) {179169} [179248]: &lt;p&gt; Note: This operation is a hint and may be overridden by the platform.
(740) {183126} [183230]: &lt;p&gt; Note: This operation is a hint and may not be supported on some platforms or for some widgets.
(1284) {317020} [317125]: &lt;p&gt; Note: This operation is a hint and is not supported on platforms that do not have this concept.
(2345) {532494} [532568]: &lt;p&gt; Shadow styles are hints and may not be honoured by the platform.
(2834) {688615} [688688]: &lt;p&gt; Shadow styles are hints and may not be honored by the platform.
(2923) {706754} [706833]: &lt;p&gt; Note: This operation is a hint and may be overridden by the platform.
*****************************************************************
========================= CLASS #79 =============================
(372) {82787} [82819]: If no item is found, returns -1.
(833) {207473} [207505]: If no item is found, returns -1.
(1570) {372400} [372432]: If no item is found, returns -1.
(2993) {721139} [721175]: If no item is found, -1 is returned.
(3130) {753052} [753084]: If no item is found, returns -1.
(5069) {1136789} [1136821]: If no item is found, returns -1.
(5203) {1170392} [1170426]: If no column is found, returns -1.
(5205) {1171019} [1171051]: If no item is found, returns -1.
(5743) {1302853} [1302885]: If no item is found, returns -1.
(6126) {1399585} [1399619]: If no column is found, returns -1.
(6128) {1400224} [1400256]: If no item is found, returns -1.
(6289) {1444528} [1444560]: If no item is found, returns -1.
*****************************************************************
========================= CLASS #80 =============================
(374) {83414} [83484]: If no item is found or the starting index is out of range, returns -1.
(2996) {721795} [721865]: If no item is found or the starting index is out of range, returns -1.
*****************************************************************
========================= CLASS #81 =============================
(376) {84011} [84107]: &lt;p&gt; The selected text is deleted from the widget and new text inserted from the clipboard.
(4276) {993560} [993656]: &lt;p&gt; The selected text is deleted from the widget and new text inserted from the clipboard.
(5523) {1253282} [1253378]: &lt;p&gt; The selected text is deleted from the widget and new text inserted from the clipboard.
*****************************************************************
========================= CLASS #82 =============================
(406) {94628} [94715]: &lt;p&gt; It is part of our effort to provide support for both J2SE and J2ME platforms.
(4994) {1123652} [1123739]: &lt;p&gt; It is part of our effort to provide support for both J2SE and J2ME platforms.
*****************************************************************
========================= CLASS #83 =============================
(417) {95821} [95870]: p must be within the range 0 - 32767 (inclusive).
(418) {95871} [95920]: q must be within the range 1 - 32767 (inclusive).
*****************************************************************
========================= CLASS #84 =============================
(422) {96541} [97092]: &lt;p&gt; @param prog array containing the program to execute and its arguments @param envp array of strings, each element of which has environment variable settings in the format name=value @param workingDir the working directory of the new process, or null if the new process should inherit the working directory of the caller @exception IOException if the program cannot be executed @exception SecurityException if the current SecurityManager disallows program execution @since 3.6 ------------ Returns the NLS'ed message for the given argument.
(4947) {1116531} [1116603]: @see SWT ------------ Returns the NLS'ed message for the given argument.
*****************************************************************
========================= CLASS #85 =============================
(438) {100627} [100680]: If an ancestor does not have a layout, it is skipped.
(491) {112148} [112195]: If an ancestor does not have a layout, skip it.
(501) {114444} [114491]: If an ancestor does not have a layout, skip it.
*****************************************************************
========================= CLASS #86 =============================
(445) {103998} [104053]: Children are returned in the order that they are drawn.
(5155) {1158182} [1158239]: Columns are returned in the order that they were created.
(5165) {1160871} [1160928]: Columns are returned in the order that they were created.
(6083) {1389188} [1389245]: Columns are returned in the order that they were created.
(6093) {1391887} [1391944]: Columns are returned in the order that they were created.
*****************************************************************
========================= CLASS #87 =============================
(455) {106687} [106738]: If the receiver does not have a layout, do nothing.
(466) {108178} [108229]: If the receiver does not have a layout, do nothing.
*****************************************************************
========================= CLASS #88 =============================
(458) {106972} [107143]: It is much more efficient to invoke {@link Control#requestLayout()} on every control which has changed in the layout than it is to invoke this method on the layout itself.
(467) {108230} [108415]: &lt;p&gt; It is normally more efficient to invoke {@link Control#requestLayout()} on every control which has changed in the layout than it is to invoke this method on the layout itself.
(483) {110634} [110830]: &lt;/p&gt; &lt;p&gt; It is normally more efficient to invoke {@link Control#requestLayout()} on every control which has changed in the layout than it is to invoke this method on the layout itself.
(492) {112196} [112381]: &lt;p&gt; It is normally more efficient to invoke {@link Control#requestLayout()} on every control which has changed in the layout than it is to invoke this method on the layout itself.
*****************************************************************
========================= CLASS #89 =============================
(461) {107296} [107398]: If a child is moved or resized such that an area in the parent is exposed, then the parent will paint.
(473) {108978} [109080]: If a child is moved or resized such that an area in the parent is exposed, then the parent will paint.
(486) {111002} [111104]: If a child is moved or resized such that an area in the parent is exposed, then the parent will paint.
(495) {112553} [112655]: If a child is moved or resized such that an area in the parent is exposed, then the parent will paint.
(507) {115347} [115449]: If a child is moved or resized such that an area in the parent is exposed, then the parent will paint.
*****************************************************************
========================= CLASS #90 =============================
(462) {107399} [107450]: If no child is affected, the parent will not paint.
(474) {109081} [109132]: If no child is affected, the parent will not paint.
(487) {111105} [111156]: If no child is affected, the parent will not paint.
(496) {112656} [112707]: If no child is affected, the parent will not paint.
(508) {115450} [115501]: If no child is affected, the parent will not paint.
*****************************************************************
========================= CLASS #91 =============================
(465) {107989} [108177]: If it is &lt;code&gt;false&lt;/code&gt; the layout may (potentially) optimize the work it is doing by assuming that none of the receiver's children has changed state since the last layout.
(477) {109797} [109985]: If it is &lt;code&gt;false&lt;/code&gt; the layout may (potentially) optimize the work it is doing by assuming that none of the receiver's children has changed state since the last layout.
(490) {111989} [112147]: The layout may (potentially) optimize the work it is doing by assuming that none of the peers of the changed control have changed state since the last layout.
(500) {114285} [114443]: The layout may (potentially) optimize the work it is doing by assuming that none of the peers of the changed control have changed state since the last layout.
*****************************************************************
========================= CLASS #92 =============================
(468) {108416} [108524]: Clients are encouraged to use {@link Control#requestLayout()} where possible instead of calling this method.
(484) {110831} [110939]: Clients are encouraged to use {@link Control#requestLayout()} where possible instead of calling this method.
(493) {112382} [112490]: Clients are encouraged to use {@link Control#requestLayout()} where possible instead of calling this method.
*****************************************************************
========================= CLASS #93 =============================
(469) {108525} [108654]: &lt;/p&gt; &lt;p&gt; If a child is resized as a result of a call to layout, the resize event will invoke the layout of the child.
(481) {110392} [110509]: However, if a child is resized as a result of a call to layout, the resize event will invoke the layout of the child.
*****************************************************************
========================= CLASS #94 =============================
(471) {108793} [108915]: Note that a layout due to a resize will not flush any cached information (same as &lt;code&gt;layout(false)&lt;/code&gt;).
(482) {110511} [110633]: Note that a layout due to a resize will not flush any cached information (same as &lt;code&gt;layout(false)&lt;/code&gt;).
*****************************************************************
========================= CLASS #95 =============================
(478) {109986} [110174]: If the all argument is &lt;code&gt;true&lt;/code&gt; the layout will cascade down through all child widgets in the receiver's widget tree, regardless of whether the child has changed size.
(480) {110225} [110390]: If the all argument is &lt;code&gt;false&lt;/code&gt;, the layout will &lt;em&gt;not&lt;/em&gt; cascade down through all child widgets in the receiver's widget tree.
*****************************************************************
========================= CLASS #96 =============================
(489) {111868} [111987]: The layouts in the hierarchy must not rely on any information cached about the changed control or any of its ancestors.
(499) {114150} [114283]: In this case, the layouts in the hierarchy must not rely on any information cached about the changed control or any of its ancestors.
*****************************************************************
========================= CLASS #97 =============================
(512) {117310} [117412]: No layout of any kind can occur in the receiver or any of its children until the flag is set to false.
(736) {182801} [182880]: No drawing of any kind can occur in the receiver until the flag is set to true.
*****************************************************************
========================= CLASS #98 =============================
(514) {117630} [117670]: Nested calls to this method are stacked.
(739) {183085} [183125]: Nested calls to this method are stacked.
*****************************************************************
========================= CLASS #99 =============================
(526) {120722} [121053]: public long /*int*/ handle; Composite parent; Cursor cursor; Menu menu, activeMenu; String toolTipText; Object layoutData; Accessible accessible; Image backgroundImage; Region region; Font font; int drawCount, foreground, background, backgroundAlpha = 255; Prevents uninitialized instances from being created outside the package.
(1711) {399637} [399739]: public long /*int*/ handle; Prevents uninitialized instances from being created outside the package.
(1810) {419897} [419983]: public TEXTMETRIC handle; Prevents instances from being created outside the package.
*****************************************************************
========================= CLASS #100 =============================
(535) {124596} [124851]: &lt;p&gt; NOTE: If &lt;code&gt;setTouchEnabled(true)&lt;/code&gt; has previously been invoked on the receiver then &lt;code&gt;setTouchEnabled(false)&lt;/code&gt; must be invoked on it to specify that gesture events should be sent instead of touch events.
(553) {131874} [132048]: &lt;p&gt; NOTE: You must also call &lt;code&gt;setTouchEnabled(true)&lt;/code&gt; to specify that touch events should be sent, which will cause gesture events to not be sent.
*****************************************************************
========================= CLASS #101 =============================
(537) {124962} [125010]: SWT doesn't send Gesture or Touch events on GTK.
(555) {132159} [132207]: SWT doesn't send Gesture or Touch events on GTK.
(2195) {508939} [508987]: SWT doesn't send Gesture or Touch events on GTK.
(5869) {1334714} [1334762]: SWT doesn't send Gesture or Touch events on GTK.
*****************************************************************
========================= CLASS #102 =============================
(540) {126448} [126548]: &lt;p&gt; When a key listener is added to a control, the control will take part in widget traversal.
(2798) {683415} [683515]: &lt;p&gt; When a key listener is added to a control, the control will take part in widget traversal.
*****************************************************************
========================= CLASS #103 =============================
(541) {126550} [126642]: By default, all traversal keys (such as the tab key and so on) are delivered to the control.
(2799) {683517} [683609]: By default, all traversal keys (such as the tab key and so on) are delivered to the control.
*****************************************************************
========================= CLASS #104 =============================
(542) {126644} [126732]: In order for a control to take part in traversal, it should listen for traversal events.
(2800) {683611} [683699]: In order for a control to take part in traversal, it should listen for traversal events.
*****************************************************************
========================= CLASS #105 =============================
(543) {126733} [126793]: Otherwise, the user can traverse into a control but not out.
(2801) {683700} [683760]: Otherwise, the user can traverse into a control but not out.
*****************************************************************
========================= CLASS #106 =============================
(544) {126795} [126892]: Note that native controls such as table and tree implement key traversal in the operating system.
(2802) {683762} [683859]: Note that native controls such as table and tree implement key traversal in the operating system.
*****************************************************************
========================= CLASS #107 =============================
(545) {126894} [127011]: It is not necessary to add traversal listeners for these controls, unless you want to override the default traversal.
(2803) {683861} [683978]: It is not necessary to add traversal listeners for these controls, unless you want to override the default traversal.
*****************************************************************
========================= CLASS #108 =============================
(559) {133575} [133761]: The width hint and height hint arguments allow the caller to ask a control questions such as "Given a particular width, how high does the control need to be to show all of the contents?"
(563) {134683} [134869]: The width hint and height hint arguments allow the caller to ask a control questions such as "Given a particular width, how high does the control need to be to show all of the contents?"
(867) {215960} [216140]: The width hint and height hint arguments allow the caller to ask the instance questions such as "Given a particular width, how high does it need to be to show all of the contents?"
*****************************************************************
========================= CLASS #109 =============================
(560) {133762} [133914]: To indicate that the caller does not wish to constrain a particular dimension, the constant &lt;code&gt;SWT.DEFAULT&lt;/code&gt; is passed for the hint.
(564) {134870} [135022]: To indicate that the caller does not wish to constrain a particular dimension, the constant &lt;code&gt;SWT.DEFAULT&lt;/code&gt; is passed for the hint.
(868) {216141} [216293]: To indicate that the caller does not wish to constrain a particular dimension, the constant &lt;code&gt;SWT.DEFAULT&lt;/code&gt; is passed for the hint.
*****************************************************************
========================= CLASS #110 =============================
(569) {136176} [136267]: This method is used to detect a drag gesture when called from within a mouse down listener.
(576) {137449} [137540]: This method is used to detect a drag gesture when called from within a mouse down listener.
*****************************************************************
========================= CLASS #111 =============================
(570) {136269} [136378]: &lt;p&gt;By default, a drag is detected when the gesture occurs anywhere within the client area of a control.
(577) {137542} [137651]: &lt;p&gt;By default, a drag is detected when the gesture occurs anywhere within the client area of a control.
*****************************************************************
========================= CLASS #112 =============================
(571) {136379} [136443]: Some controls, such as tables and trees, override this behavior.
(578) {137652} [137716]: Some controls, such as tables and trees, override this behavior.
*****************************************************************
========================= CLASS #113 =============================
(572) {136445} [136548]: In addition to the operating system specific drag gesture, they require the mouse to be inside an item.
(579) {137718} [137821]: In addition to the operating system specific drag gesture, they require the mouse to be inside an item.
*****************************************************************
========================= CLASS #114 =============================
(573) {136550} [136784]: Custom widget writers can use &lt;code&gt;setDragDetect&lt;/code&gt; to disable the default detection, listen for mouse down, and then call &lt;code&gt;dragDetect()&lt;/code&gt; from within the listener to conditionally detect a drag.
(580) {137823} [138057]: Custom widget writers can use &lt;code&gt;setDragDetect&lt;/code&gt; to disable the default detection, listen for mouse down, and then call &lt;code&gt;dragDetect()&lt;/code&gt; from within the listener to conditionally detect a drag.
*****************************************************************
========================= CLASS #115 =============================
(593) {141137} [141191]: In this case, the location is relative to the display.
(603) {144152} [144203]: In this case, the point is relative to the display.
(726) {180239} [180290]: In this case, the point is relative to the display.
(728) {180818} [180869]: In this case, the point is relative to the display.
(3106) {746739} [746793]: In this case, the location is relative to the display.
*****************************************************************
========================= CLASS #116 =============================
(595) {141545} [141656]: &lt;p&gt; When the mouse pointer passes over a control its appearance is changed to match the control's cursor.
(712) {176317} [176428]: &lt;p&gt; When the mouse pointer passes over a control its appearance is changed to match the control's cursor.
*****************************************************************
========================= CLASS #117 =============================
(598) {142533} [142648]: A disabled control is typically not selectable from the user interface and draws with an inactive or "grayed" look.
(641) {151774} [151889]: A disabled control is typically not selectable from the user interface and draws with an inactive or "grayed" look.
(716) {177439} [177554]: A disabled control is typically not selectable from the user interface and draws with an inactive or "grayed" look.
(3112) {747781} [747893]: A disabled menu is typically not selectable from the user interface and draws with an inactive or "grayed" look.
(3132) {753673} [753785]: A disabled menu is typically not selectable from the user interface and draws with an inactive or "grayed" look.
(3142) {758314} [758426]: A disabled menu is typically not selectable from the user interface and draws with an inactive or "grayed" look.
(3210) {774340} [774457]: A disabled menu item is typically not selectable from the user interface and draws with an inactive or "grayed" look.
(3220) {777050} [777167]: A disabled menu item is typically not selectable from the user interface and draws with an inactive or "grayed" look.
(3230) {780065} [780182]: A disabled menu item is typically not selectable from the user interface and draws with an inactive or "grayed" look.
(3961) {921090} [921205]: A disabled control is typically not selectable from the user interface and draws with an inactive or "grayed" look.
(3978) {926127} [926242]: A disabled control is typically not selectable from the user interface and draws with an inactive or "grayed" look.
(3982) {927717} [927832]: A disabled control is typically not selectable from the user interface and draws with an inactive or "grayed" look.
(5769) {1310338} [1310453]: A disabled control is typically not selectable from the user interface and draws with an inactive or "grayed" look.
(5779) {1312995} [1313110]: A disabled control is typically not selectable from the user interface and draws with an inactive or "grayed" look.
(5783) {1314741} [1314866]: &lt;p&gt; A disabled control is typically not selectable from the user interface and draws with an inactive or "grayed" look.
*****************************************************************
========================= CLASS #118 =============================
(605) {144558} [144666]: All controls may optionally have a pop up menu that is displayed when the user requests one for the control.
(730) {181217} [181325]: All controls may optionally have a pop up menu that is displayed when the user requests one for the control.
*****************************************************************
========================= CLASS #119 =============================
(606) {144667} [144794]: The sequence of key strokes, button presses and/or button releases that are used to request a pop up menu is platform specific.
(731) {181326} [181453]: The sequence of key strokes, button presses and/or button releases that are used to request a pop up menu is platform specific.
(3214) {775254} [775384]: The sequence of key strokes, button presses and/or button releases that are used to request a pull down menu is platform specific.
(3242) {781940} [782070]: The sequence of key strokes, button presses and/or button releases that are used to request a pull down menu is platform specific.
*****************************************************************
========================= CLASS #120 =============================
(612) {146760} [146853]: For all controls other than shells, this simply returns the control's nearest ancestor shell.
(3124) {751730} [751823]: For all controls other than shells, this simply returns the control's nearest ancestor shell.
*****************************************************************
========================= CLASS #121 =============================
(613) {146854} [146922]: Shells return themselves, even if they are children of other shells.
(3125) {751824} [751892]: Shells return themselves, even if they are children of other shells.
*****************************************************************
========================= CLASS #122 =============================
(619) {147793} [147877]: @param pixel the color to start with ------------ calculates a different color, e.g.
(621) {147954} [148041]: @param pixel the color to start with ------------ @param factor must be between [0..1].
*****************************************************************
========================= CLASS #123 =============================
(646) {153691} [153775]: If the argument is null, then the receiver is moved to the top of the drawing order.
(649) {154449} [154536]: If the argument is null, then the receiver is moved to the bottom of the drawing order.
*****************************************************************
========================= CLASS #124 =============================
(652) {155194} [155287]: For a composite, this involves computing the preferred size from its layout, if there is one.
(654) {155630} [155723]: For a composite, this involves computing the preferred size from its layout, if there is one.
(5303) {1195961} [1196054]: For a composite, this involves computing the preferred size from its layout, if there is one.
(6211) {1421518} [1421611]: For a composite, this involves computing the preferred size from its layout, if there is one.
*****************************************************************
========================= CLASS #125 =============================
(664) {157702} [157811]: The next time a paint request is processed, the control will be completely painted, including the background.
(666) {158318} [158430]: The next time a paint request is processed, that area of the receiver will be painted, including the background.
*****************************************************************
========================= CLASS #126 =============================
(695) {172116} [172181]: For example, on MAC the background of a Button cannot be changed.
(699) {172905} [172974]: For example, on Windows the background of a Button cannot be changed.
*****************************************************************
========================= CLASS #127 =============================
(697) {172766} [172824]: The background image is tiled to fill the available space.
(3138) {756501} [756559]: The background image is tiled to fill the available space.
*****************************************************************
========================= CLASS #128 =============================
(703) {173896} [174035]: &lt;p&gt; Note: Attempting to set the width or height of the receiver to a negative number will cause that value to be set to zero instead.
(707) {174911} [175050]: &lt;p&gt; Note: Attempting to set the width or height of the receiver to a negative number will cause that value to be set to zero instead.
(744) {184264} [184403]: &lt;p&gt; Note: Attempting to set the width or height of the receiver to a negative number will cause that value to be set to zero instead.
(747) {185007} [185140]: &lt;p&gt; Note: Attempting to set the width or height of the receiver to a negative number will cause them to be set to zero instead.
(882) {220468} [220607]: &lt;p&gt; Note: Attempting to set the width or height of the receiver to a negative number will cause that value to be set to zero instead.
(884) {221022} [221155]: &lt;p&gt; Note: Attempting to set the width or height of the receiver to a negative number will cause them to be set to zero instead.
*****************************************************************
========================= CLASS #129 =============================
(704) {174036} [174204]: &lt;/p&gt; &lt;p&gt; Note: On GTK, attempting to set the width or height of the receiver to a number higher or equal 2^14 will cause them to be set to (2^14)-1 instead.
(708) {175051} [175219]: &lt;/p&gt; &lt;p&gt; Note: On GTK, attempting to set the width or height of the receiver to a number higher or equal 2^14 will cause them to be set to (2^14)-1 instead.
(745) {184404} [184572]: &lt;/p&gt; &lt;p&gt; Note: On GTK, attempting to set the width or height of the receiver to a number higher or equal 2^14 will cause them to be set to (2^14)-1 instead.
(748) {185141} [185309]: &lt;/p&gt; &lt;p&gt; Note: On GTK, attempting to set the width or height of the receiver to a number higher or equal 2^14 will cause them to be set to (2^14)-1 instead.
*****************************************************************
========================= CLASS #130 =============================
(732) {181454} [181541]: &lt;p&gt; Note: Disposing of a control that has a pop up menu will dispose of the menu.
(3243) {782071} [782163]: &lt;p&gt; Note: Disposing of a menu item that has a pull down menu will dispose of the menu.
*****************************************************************
========================= CLASS #131 =============================
(733) {181543} [181619]: To avoid this behavior, set the menu to null before the control is disposed.
(3244) {782165} [782243]: To avoid this behavior, set the menu to null before the menu item is disposed.
*****************************************************************
========================= CLASS #132 =============================
(742) {183655} [183727]: When the argument is null, the default shape of the control is restored.
(4162) {967590} [967660]: When the argument is null, the default shape of the shell is restored.
*****************************************************************
========================= CLASS #133 =============================
(753) {186242} [186298]: It doesn't set the base text direction on GTK and Cocoa.
(5681) {1289840} [1289896]: It doesn't set the base text direction on GTK and Cocoa.
*****************************************************************
========================= CLASS #134 =============================
(755) {186865} [187049]: For a control that has a default tool tip, such as the Tree control on Windows, setting the tool tip text to an empty string replaces the default, causing no tool tip text to be shown.
(3259) {785002} [785151]: For a menu item that has a default tool tip, setting the tool tip text to an empty string replaces the default, causing no tool tip text to be shown.
(5106) {1146612} [1146796]: For a control that has a default tool tip, such as the Tree control on Windows, setting the tool tip text to an empty string replaces the default, causing no tool tip text to be shown.
(5316) {1199348} [1199532]: For a control that has a default tool tip, such as the Tree control on Windows, setting the tool tip text to an empty string replaces the default, causing no tool tip text to be shown.
(5799) {1318209} [1318393]: For a control that has a default tool tip, such as the Tree control on Windows, setting the tool tip text to an empty string replaces the default, causing no tool tip text to be shown.
(6038) {1376284} [1376468]: For a control that has a default tool tip, such as the Tree control on Windows, setting the tool tip text to an empty string replaces the default, causing no tool tip text to be shown.
(6223) {1424814} [1424998]: For a control that has a default tool tip, such as the Tree control on Windows, setting the tool tip text to an empty string replaces the default, causing no tool tip text to be shown.
*****************************************************************
========================= CLASS #135 =============================
(756) {187050} [187138]: &lt;p&gt; The mnemonic indicator (character '&amp;amp;') is not displayed in a tool tip.
(3260) {785152} [785240]: &lt;p&gt; The mnemonic indicator (character '&amp;amp;') is not displayed in a tool tip.
(5107) {1146797} [1146885]: &lt;p&gt; The mnemonic indicator (character '&amp;amp;') is not displayed in a tool tip.
(5317) {1199533} [1199621]: &lt;p&gt; The mnemonic indicator (character '&amp;amp;') is not displayed in a tool tip.
(5800) {1318394} [1318482]: &lt;p&gt; The mnemonic indicator (character '&amp;amp;') is not displayed in a tool tip.
(6039) {1376469} [1376557]: &lt;p&gt; The mnemonic indicator (character '&amp;amp;') is not displayed in a tool tip.
(6224) {1424999} [1425087]: &lt;p&gt; The mnemonic indicator (character '&amp;amp;') is not displayed in a tool tip.
*****************************************************************
========================= CLASS #136 =============================
(764) {188965} [189118]: &lt;p&gt; NOTE: To properly map a rectangle or a corner of a rectangle on a right-to-left platform, use {@link Display#map(Control, Control, Rectangle)}.
(766) {189688} [189841]: &lt;p&gt; NOTE: To properly map a rectangle or a corner of a rectangle on a right-to-left platform, use {@link Display#map(Control, Control, Rectangle)}.
(768) {190475} [190628]: &lt;p&gt; NOTE: To properly map a rectangle or a corner of a rectangle on a right-to-left platform, use {@link Display#map(Control, Control, Rectangle)}.
(770) {191178} [191331]: &lt;p&gt; NOTE: To properly map a rectangle or a corner of a rectangle on a right-to-left platform, use {@link Display#map(Control, Control, Rectangle)}.
*****************************************************************
========================= CLASS #137 =============================
(791) {197822} [197983]: &lt;p&gt; Classes that wish to deal with &lt;code&gt;ControlEvent&lt;/code&gt;s can extend this class and override only the methods which they are interested in.
(1547) {366565} [366725]: &lt;p&gt; Classes that wish to deal with &lt;code&gt;ExpandEvent&lt;/code&gt;s can extend this class and override only the methods which they are interested in.
(1685) {395245} [395404]: &lt;p&gt; Classes that wish to deal with &lt;code&gt;FocusEvent&lt;/code&gt;s can extend this class and override only the methods which they are interested in.
(2790) {682296} [682453]: &lt;p&gt; Classes that wish to deal with &lt;code&gt;KeyEvent&lt;/code&gt;s can extend this class and override only the methods which they are interested in.
(3155) {761817} [761975]: &lt;p&gt; Classes that wish to deal with &lt;code&gt;MenuEvent&lt;/code&gt;s can extend this class and override only the methods which they are interested in.
(3312) {795086} [795299]: &lt;p&gt; Classes that wish to deal with &lt;code&gt;MouseEvent&lt;/code&gt;s which occur as mouse buttons are pressed and released can extend this class and override only the methods which they are interested in.
(3346) {801260} [801485]: &lt;p&gt; Classes that wish to deal with &lt;code&gt;MouseEvent&lt;/code&gt;s which occur as the mouse pointer passes (or hovers) over controls can extend this class and override only the methods which they are interested in.
(4025) {936621} [936784]: &lt;p&gt; Classes that wish to deal with &lt;code&gt;SelectionEvent&lt;/code&gt;s can extend this class and override only the methods which they are interested in.
(4170) {968946} [969105]: &lt;p&gt; Classes that wish to deal with &lt;code&gt;ShellEvent&lt;/code&gt;s can extend this class and override only the methods which they are interested in.
(6176) {1412617} [1412775]: &lt;p&gt; Classes that wish to deal with &lt;code&gt;TreeEvent&lt;/code&gt;s can extend this class and override only the methods which they are interested in.
*****************************************************************
========================= CLASS #138 =============================
(793) {198284} [198322]: The default behavior is to do nothing.
(795) {198450} [198488]: The default behavior is to do nothing.
(1549) {366927} [366965]: The default behavior is to do nothing.
(1551) {367072} [367110]: The default behavior is to do nothing.
(1687) {395592} [395630]: The default behavior is to do nothing.
(1689) {395742} [395780]: The default behavior is to do nothing.
(2792) {682656} [682694]: The default behavior is to do nothing.
(2794) {682822} [682860]: The default behavior is to do nothing.
(3157) {762157} [762195]: The default behavior is to do nothing.
(3159) {762303} [762341]: The default behavior is to do nothing.
(3314) {795558} [795596]: The default behavior is to do nothing.
(3316) {795777} [795815]: The default behavior is to do nothing.
(3318) {795938} [795976]: The default behavior is to do nothing.
(3348) {801731} [801769]: The default behavior is to do nothing.
(3350) {801934} [801972]: The default behavior is to do nothing.
(3352) {802175} [802213]: The default behavior is to do nothing.
(4027) {936991} [937029]: The default behavior is to do nothing.
(4029) {937156} [937194]: The default behavior is to do nothing.
(4172) {969306} [969344]: The default behavior is to do nothing.
(4174) {969450} [969488]: The default behavior is to do nothing.
(4176) {969609} [969647]: The default behavior is to do nothing.
(4178) {969761} [969799]: The default behavior is to do nothing.
(4180) {969913} [969951]: The default behavior is to do nothing.
(6178) {1412967} [1413005]: The default behavior is to do nothing.
(6180) {1413123} [1413161]: The default behavior is to do nothing.
*****************************************************************
========================= CLASS #139 =============================
(794) {198324} [198449]: @param e an event containing information about the move ------------ Sent when the size (width, height) of a control changes.
(806) {200364} [200489]: @param e an event containing information about the move ------------ Sent when the size (width, height) of a control changes.
(1550) {366967} [367071]: @param e an event containing information about the operation ------------ Sent when an item is expanded.
(1605) {382432} [382536]: @param e an event containing information about the operation ------------ Sent when an item is expanded.
(1688) {395632} [395741]: @param e an event containing information about the focus change ------------ Sent when a control loses focus.
(1700) {397596} [397705]: @param e an event containing information about the focus change ------------ Sent when a control loses focus.
*****************************************************************
========================= CLASS #140 =============================
(823) {204526} [204705]: &lt;p&gt; Specifically, the indices of the returned array represent the current visual order of the items, and the contents of the array represent the creation order of the items.
(5162) {1159984} [1160163]: &lt;p&gt; Specifically, the indices of the returned array represent the current visual order of the items, and the contents of the array represent the creation order of the items.
(6090) {1391005} [1391184]: &lt;p&gt; Specifically, the indices of the returned array represent the current visual order of the items, and the contents of the array represent the creation order of the items.
*****************************************************************
========================= CLASS #141 =============================
(829) {206319} [206378]: When a coolbar is locked, its items cannot be repositioned.
(843) {209743} [209802]: When a coolbar is locked, its items cannot be repositioned.
*****************************************************************
========================= CLASS #142 =============================
(831) {206820} [206914]: The 0th visible item always begins the first row, therefore it does not count as a wrap index.
(839) {208584} [208670]: The 0th item always begins the first row, therefore it does not count as a wrap index.
(846) {210290} [210376]: The 0th item always begins the first row, therefore it does not count as a wrap index.
*****************************************************************
========================= CLASS #143 =============================
(840) {208671} [208742]: If wrap indices is null or empty, the items will be placed on one line.
(847) {210377} [210443]: If indices is null or empty, the items will be placed on one line.
*****************************************************************
========================= CLASS #144 =============================
(854) {211892} [211959]: The item is added to the end of the items maintained by its parent.
(2736) {670974} [671041]: The item is added to the end of the items maintained by its parent.
(3189) {767700} [767767]: The item is added to the end of the items maintained by its parent.
(5085) {1140702} [1140769]: The item is added to the end of the items maintained by its parent.
(5280) {1188995} [1189062]: The item is added to the end of the items maintained by its parent.
(5326) {1201577} [1201644]: The item is added to the end of the items maintained by its parent.
(5388) {1222435} [1222502]: The item is added to the end of the items maintained by its parent.
(5751) {1304754} [1304821]: The item is added to the end of the items maintained by its parent.
(6021) {1368900} [1368967]: The item is added to the end of the items maintained by its parent.
(6188) {1414557} [1414624]: The item is added to the end of the items maintained by its parent.
(6241) {1428495} [1428562]: The item is added to the end of the items maintained by its parent.
(6250) {1431371} [1431438]: The item is added to the end of the items maintained by its parent.
*****************************************************************
========================= CLASS #145 =============================
(863) {214785} [215150]: &lt;p&gt; If &lt;code&gt;widgetSelected&lt;/code&gt; is called when the mouse is over the drop-down arrow (or 'chevron') portion of the cool item, the event object detail field contains the value &lt;code&gt;SWT.ARROW&lt;/code&gt;, and the x and y fields in the event object represent the point at the bottom left of the chevron, where the menu should be popped up.
(3881) {899535} [899652]: If the receiver is being dragged, the event object detail field contains the value &lt;code&gt;SWT.DRAG&lt;/code&gt;.
(3952) {920098} [920132]: &lt;code&gt;SWT.DRAG&lt;/code&gt;.
(4214) {977150} [977184]: &lt;code&gt;SWT.DRAG&lt;/code&gt;.
(5760) {1307763} [1307974]: &lt;p&gt; When &lt;code&gt;widgetSelected&lt;/code&gt; is called when the mouse is over the arrow portion of a drop-down tool, the event object detail field contains the value &lt;code&gt;SWT.ARROW&lt;/code&gt;.
*****************************************************************
========================= CLASS #146 =============================
(905) {229310} [230605]: @param device the device on which to allocate the cursor @param style the style of cursor to allocate @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if device is null and there is no current device&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - when an unknown style is specified&lt;/li&gt; &lt;/ul&gt; @exception SWTError &lt;ul&gt; &lt;li&gt;ERROR_NO_HANDLES - if a handle could not be obtained for cursor creation&lt;/li&gt; &lt;/ul&gt; @see SWT#CURSOR_ARROW @see SWT#CURSOR_WAIT @see SWT#CURSOR_CROSS @see SWT#CURSOR_APPSTARTING @see SWT#CURSOR_HELP @see SWT#CURSOR_SIZEALL @see SWT#CURSOR_SIZENESW @see SWT#CURSOR_SIZENS @see SWT#CURSOR_SIZENWSE @see SWT#CURSOR_SIZEWE @see SWT#CURSOR_SIZEN @see SWT#CURSOR_SIZES @see SWT#CURSOR_SIZEE @see SWT#CURSOR_SIZEW @see SWT#CURSOR_SIZENE @see SWT#CURSOR_SIZESE @see SWT#CURSOR_SIZESW @see SWT#CURSOR_SIZENW @see SWT#CURSOR_UPARROW @see SWT#CURSOR_IBEAM @see SWT#CURSOR_NO @see SWT#CURSOR_HAND @see #dispose() ------------ Constructs a new cursor given a device, image and mask data describing the desired cursor appearance, and the x and y coordinates of the &lt;em&gt;hotspot&lt;/em&gt; (that is, the point within the area covered by the cursor which is considered to be where the on-screen pointer is "pointing").
(908) {230838} [232032]: &lt;/p&gt; @param device the device on which to allocate the cursor @param source the color data for the cursor @param mask the mask data for the cursor (or null) @param hotspotX the x coordinate of the cursor's hotspot @param hotspotY the y coordinate of the cursor's hotspot @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if device is null and there is no current device&lt;/li&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the source is null&lt;/li&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the mask is null and the source does not have a mask&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the source and the mask are not the same size, or if the hotspot is outside the bounds of the image&lt;/li&gt; &lt;/ul&gt; @exception SWTError &lt;ul&gt; &lt;li&gt;ERROR_NO_HANDLES - if a handle could not be obtained for cursor creation&lt;/li&gt; &lt;/ul&gt; @see #dispose() ------------ Constructs a new cursor given a device, image data describing the desired cursor appearance, and the x and y coordinates of the &lt;em&gt;hotspot&lt;/em&gt; (that is, the point within the area covered by the cursor which is considered to be where the on-screen pointer is "pointing").
(910) {232102} [232965]: &lt;/p&gt; @param device the device on which to allocate the cursor @param source the image data for the cursor @param hotspotX the x coordinate of the cursor's hotspot @param hotspotY the y coordinate of the cursor's hotspot @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if device is null and there is no current device&lt;/li&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the image is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the hotspot is outside the bounds of the image&lt;/li&gt; &lt;/ul&gt; @exception SWTError &lt;ul&gt; &lt;li&gt;ERROR_NO_HANDLES - if a handle could not be obtained for cursor creation&lt;/li&gt; &lt;/ul&gt; @see #dispose() @since 3.0 ------------ Compares the argument to the receiver, and returns true if they represent the &lt;em&gt;same&lt;/em&gt; object using a class specific comparison.
(1300) {320711} [321621]: @param id the SWT cursor constant @return the corresponding cursor or &lt;code&gt;null&lt;/code&gt; @exception SWTException &lt;ul&gt; &lt;li&gt;ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver&lt;/li&gt; &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt; &lt;/ul&gt; @see SWT#CURSOR_ARROW @see SWT#CURSOR_WAIT @see SWT#CURSOR_CROSS @see SWT#CURSOR_APPSTARTING @see SWT#CURSOR_HELP @see SWT#CURSOR_SIZEALL @see SWT#CURSOR_SIZENESW @see SWT#CURSOR_SIZENS @see SWT#CURSOR_SIZENWSE @see SWT#CURSOR_SIZEWE @see SWT#CURSOR_SIZEN @see SWT#CURSOR_SIZES @see SWT#CURSOR_SIZEE @see SWT#CURSOR_SIZEW @see SWT#CURSOR_SIZENE @see SWT#CURSOR_SIZESE @see SWT#CURSOR_SIZESW @see SWT#CURSOR_SIZENW @see SWT#CURSOR_UPARROW @see SWT#CURSOR_IBEAM @see SWT#CURSOR_NO @see SWT#CURSOR_HAND @since 3.0 ------------ Returns a reasonable font for applications to use.
(1714) {399918} [400551]: &lt;/p&gt; @param device the device to create the font on @param fd the FontData that describes the desired font (must not be null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if device is null and there is no current device&lt;/li&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the fd argument is null&lt;/li&gt; &lt;/ul&gt; @exception SWTError &lt;ul&gt; &lt;li&gt;ERROR_NO_HANDLES - if a font could not be created from the given font data&lt;/li&gt; &lt;/ul&gt; @see #dispose() ------------ Constructs a new font given a device and an array of font data which describes the desired font's appearance.
(1716) {400619} [401425]: &lt;/p&gt; @param device the device to create the font on @param fds the array of FontData that describes the desired font (must not be null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if device is null and there is no current device&lt;/li&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the fds argument is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the length of fds is zero&lt;/li&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if any fd in the array is null&lt;/li&gt; &lt;/ul&gt; @exception SWTError &lt;ul&gt; &lt;li&gt;ERROR_NO_HANDLES - if a font could not be created from the given font data&lt;/li&gt; &lt;/ul&gt; @see #dispose() @since 2.1 ------------ Constructs a new font given a device, a font name, the height of the desired font in points, and a font style.
(1718) {401493} [402312]: &lt;/p&gt; @param device the device to create the font on @param name the name of the font (must not be null) @param height the font height in points @param style a bit or combination of NORMAL, BOLD, ITALIC @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if device is null and there is no current device&lt;/li&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the name argument is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the height is negative&lt;/li&gt; &lt;/ul&gt; @exception SWTError &lt;ul&gt; &lt;li&gt;ERROR_NO_HANDLES - if a font could not be created from the given arguments&lt;/li&gt; &lt;/ul&gt; @see #dispose() ------------ Compares the argument to the receiver, and returns true if they represent the &lt;em&gt;same&lt;/em&gt; object using a class specific comparison.
(1748) {407188} [407304]: ------------ Constructs a new font data given the Windows &lt;code&gt;LOGFONT&lt;/code&gt; that it should represent.
(1751) {407674} [408146]: &lt;/p&gt; @param string the string representation of a &lt;code&gt;FontData&lt;/code&gt; (must not be null) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - if the argument is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the argument does not represent a valid description&lt;/li&gt; &lt;/ul&gt; @see #toString ------------ Constructs a new font data given a font name, the height of the desired font in points, and a font style.
(1752) {408148} [408658]: @param name the name of the font (must not be null) @param height the font height in points @param style a bit or combination of NORMAL, BOLD, ITALIC @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_NULL_ARGUMENT - when the font name is null&lt;/li&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the height is negative&lt;/li&gt; &lt;/ul&gt; ------------ Compares the argument to the receiver, and returns true if they represent the &lt;em&gt;same&lt;/em&gt; object using a class specific comparison.
*****************************************************************
========================= CLASS #147 =============================
(938) {238547} [238637]: &lt;p&gt; The first day of the month is 1, and the last day depends on the month and year.
(953) {242144} [242234]: &lt;p&gt; The first day of the month is 1, and the last day depends on the month and year.
(4594) {1065861} [1065912]: &lt;p&gt; A short date displays the month and year.
(4598) {1066276} [1066333]: &lt;p&gt; A medium date displays the day, month and year.
(4602) {1066707} [1066762]: &lt;p&gt; A long date displays the day, month and year.
*****************************************************************
========================= CLASS #148 =============================
(940) {238971} [239018]: &lt;p&gt; Hours is an integer between 0 and 23.
(942) {239346} [239395]: &lt;p&gt; Minutes is an integer between 0 and 59.
(946) {240118} [240167]: &lt;p&gt; Seconds is an integer between 0 and 59.
(956) {242672} [242719]: &lt;p&gt; Hours is an integer between 0 and 23.
(958) {243049} [243098]: &lt;p&gt; Minutes is an integer between 0 and 59.
(963) {243931} [243980]: &lt;p&gt; Seconds is an integer between 0 and 59.
*****************************************************************
========================= CLASS #149 =============================
(944) {239721} [239790]: &lt;p&gt; The first month of the year is 0, and the last month is 11.
(960) {243428} [243497]: &lt;p&gt; The first month of the year is 0, and the last month is 11.
*****************************************************************
========================= CLASS #150 =============================
(948) {240492} [240551]: &lt;p&gt; The first year is 1752 and the last year is 9999.
(966) {244767} [244826]: &lt;p&gt; The first year is 1752 and the last year is 9999.
*****************************************************************
========================= CLASS #151 =============================
(954) {242235} [242323]: If the specified day is not valid for the receiver's month and year, then it is ignored.
(961) {243498} [243586]: If the specified month is not valid for the receiver's day and year, then it is ignored.
(967) {244827} [244915]: If the specified year is not valid for the receiver's day and month, then it is ignored.
*****************************************************************
========================= CLASS #152 =============================
(974) {246059} [246498]: &lt;/p&gt; &lt;p&gt; Instances are always displayed in one of the maximized, minimized or normal states: &lt;ul&gt; &lt;li&gt; When an instance is marked as &lt;em&gt;maximized&lt;/em&gt;, the window manager will typically resize it to fill the entire visible area of the display, and the instance is usually put in a state where it can not be resized (even if it has style &lt;code&gt;RESIZE&lt;/code&gt;) until it is no longer maximized.
(4070) {943435} [943863]: &lt;p&gt; Instances are always displayed in one of the maximized, minimized or normal states: &lt;ul&gt; &lt;li&gt; When an instance is marked as &lt;em&gt;maximized&lt;/em&gt;, the window manager will typically resize it to fill the entire visible area of the display, and the instance is usually put in a state where it can not be resized (even if it has style &lt;code&gt;RESIZE&lt;/code&gt;) until it is no longer maximized.
*****************************************************************
========================= CLASS #153 =============================
(975) {246499} [246764]: &lt;/li&gt;&lt;li&gt; When an instance is in the &lt;em&gt;normal&lt;/em&gt; state (neither maximized or minimized), its appearance is controlled by the style constants which were specified when it was created and the restrictions of the window manager (see below).
(4071) {943864} [944129]: &lt;/li&gt;&lt;li&gt; When an instance is in the &lt;em&gt;normal&lt;/em&gt; state (neither maximized or minimized), its appearance is controlled by the style constants which were specified when it was created and the restrictions of the window manager (see below).
*****************************************************************
========================= CLASS #154 =============================
(976) {246765} [247112]: &lt;/li&gt;&lt;li&gt; When an instance has been marked as &lt;em&gt;minimized&lt;/em&gt;, its contents (client area) will usually not be visible, and depending on the window manager, it may be "iconified" (that is, replaced on the desktop by a small simplified representation of itself), relocated to a distinguished area of the screen, or hidden.
(4072) {944130} [944477]: &lt;/li&gt;&lt;li&gt; When an instance has been marked as &lt;em&gt;minimized&lt;/em&gt;, its contents (client area) will usually not be visible, and depending on the window manager, it may be "iconified" (that is, replaced on the desktop by a small simplified representation of itself), relocated to a distinguished area of the screen, or hidden.
*****************************************************************
========================= CLASS #155 =============================
(977) {247113} [247161]: Combinations of these changes are also possible.
(4073) {944478} [944526]: Combinations of these changes are also possible.
*****************************************************************
========================= CLASS #156 =============================
(978) {247162} [247428]: &lt;/li&gt; &lt;/ul&gt; &lt;/p&gt; Note: The styles supported by this class must be treated as &lt;em&gt;HINT&lt;/em&gt;s, since the window manager for the desktop on which the instance is visible has ultimate control over the appearance and behavior of decorations.
(1138) {277983} [278185]: In addition, as is the case for shells, the window manager for the desktop on which the instance is visible has ultimate control over the appearance and behavior of the instance, including its modality.
(4079) {945132} [945392]: &lt;/p&gt;&lt;p&gt; Note: The styles supported by this class are treated as &lt;em&gt;HINT&lt;/em&gt;s, since the window manager for the desktop on which the instance is visible has ultimate control over the appearance and behavior of decorations and modality.
*****************************************************************
========================= CLASS #157 =============================
(979) {247429} [247557]: For example, some window managers only support resizable windows and will always assume the RESIZE style, even if it is not set.
(4080) {945393} [945521]: For example, some window managers only support resizable windows and will always assume the RESIZE style, even if it is not set.
*****************************************************************
========================= CLASS #158 =============================
(989) {250766} [250962]: The image is typically displayed by the window manager when the instance is marked as iconified, and may also be displayed somewhere in the trim when the instance is in normal or maximized states.
(993) {251548} [251742]: Images are typically displayed by the window manager when the instance is marked as iconified, and may also be displayed somewhere in the trim when the instance is in normal or maximized states.
(1007) {255237} [255433]: The image is typically displayed by the window manager when the instance is marked as iconified, and may also be displayed somewhere in the trim when the instance is in normal or maximized states.
(1009) {255928} [256122]: Images are typically displayed by the window manager when the instance is marked as iconified, and may also be displayed somewhere in the trim when the instance is in normal or maximized states.
*****************************************************************
========================= CLASS #159 =============================
(991) {251072} [251164]: It does not provide access to a window manager provided, "default" image even if one exists.
(997) {252098} [252190]: It does not provide access to a window manager provided, "default" image even if one exists.
*****************************************************************
========================= CLASS #160 =============================
(994) {251743} [251839]: Depending where the icon is displayed, the platform chooses the icon with the "best" attributes.
(1010) {256123} [256219]: Depending where the icon is displayed, the platform chooses the icon with the "best" attributes.
*****************************************************************
========================= CLASS #161 =============================
(995) {251841} [251976]: It is expected that the array will contain the same icon rendered at different sizes, with different depth and transparency attributes.
(1011) {256220} [256355]: It is expected that the array will contain the same icon rendered at different sizes, with different depth and transparency attributes.
*****************************************************************
========================= CLASS #162 =============================
(1002) {253798} [253863]: If the text has not previously been set, returns an empty string.
(1153) {282232} [282297]: If the text has not previously been set, returns an empty string.
(2355) {534744} [534809]: If the text has not previously been set, returns an empty string.
*****************************************************************
========================= CLASS #163 =============================
(1015) {257364} [257448]: Typically, the behavior will match the platform user's expectations, but not always.
(1021) {258855} [258939]: Typically, the behavior will match the platform user's expectations, but not always.
(4153) {964833} [964917]: Typically, the behavior will match the platform user's expectations, but not always.
*****************************************************************
========================= CLASS #164 =============================
(1016) {257449} [257484]: This should be avoided if possible.
(1022) {258940} [258975]: This should be avoided if possible.
(4154) {964918} [964953]: This should be avoided if possible.
*****************************************************************
========================= CLASS #165 =============================
(1047) {263144} [263253]: This may include both checks on the state of the receiver and more generally on the entire execution context.
(6395) {1467427} [1467536]: This may include both checks on the state of the receiver and more generally on the entire execution context.
*****************************************************************
========================= CLASS #166 =============================
(1048) {263254} [263366]: This method &lt;em&gt;should&lt;/em&gt; be called by device implementors to enforce the standard SWT invariants.
(6396) {1467537} [1467649]: This method &lt;em&gt;should&lt;/em&gt; be called by widget implementors to enforce the standard SWT invariants.
*****************************************************************
========================= CLASS #167 =============================
(1050) {263593} [263731]: &lt;/p&gt;&lt;p&gt; In future releases of SWT, there may be more or fewer error checks and exceptions may be thrown for different reasons.
(6399) {1467955} [1468093]: &lt;/p&gt;&lt;p&gt; In future releases of SWT, there may be more or fewer error checks and exceptions may be thrown for different reasons.
*****************************************************************
========================= CLASS #168 =============================
(1052) {263927} [264016]: If the device does not have a handle, this method may do nothing depending on the device.
(1056) {264394} [264483]: If the device does not have a handle, this method may do nothing depending on the device.
(1237) {306112} [306201]: If the device does not have a handle, this method may do nothing depending on the device.
(1240) {306444} [306533]: If the device does not have a handle, this method may do nothing depending on the device.
*****************************************************************
========================= CLASS #169 =============================
(1076) {267625} [267745]: When EnumFontFamiliesEx is called with a specified face name, it should enumerate for each available style of that font.
(1082) {268195} [268315]: When EnumFontFamiliesEx is called with a specified face name, it should enumerate for each available style of that font.
*****************************************************************
========================= CLASS #170 =============================
(1077) {267746} [267779]: Instead, it only enumerates once.
(1083) {268316} [268349]: Instead, it only enumerates once.
*****************************************************************
========================= CLASS #171 =============================
(1078) {267780} [267841]: The fix is to call EnumFontFamilies, which works as expected.
(1084) {268350} [268411]: The fix is to call EnumFontFamilies, which works as expected.
*****************************************************************
========================= CLASS #172 =============================
(1079) {267843} [267946]: if (OS.IsUnicode) { OS.EnumFontFamiliesW (hDC, ((LOGFONTW)lf).lfFaceName, lpEnumFontFamProc, scalable ?
(1085) {268413} [268480]: OS.EnumFontFamilies (hDC, lpFaceName, lpEnumFontFamProc, scalable ?
*****************************************************************
========================= CLASS #173 =============================
(1087) {270163} [270265]: Any value other than one of the SWT color constants which is passed in will result in the color black.
(1295) {319828} [319930]: Any value other than one of the SWT color constants which is passed in will result in the color black.
*****************************************************************
========================= CLASS #174 =============================
(1088) {270266} [270357]: This color should not be freed because it was allocated by the system, not the application.
(1091) {270710} [270800]: This font should not be freed because it was allocated by the system, not the application.
(1296) {319931} [320023]: This color should not be free'd because it was allocated by the system, not the application.
(1298) {320501} [320594]: This cursor should not be free'd because it was allocated by the system, not the application.
(1302) {321716} [321807]: This font should not be free'd because it was allocated by the system, not the application.
(1306) {322478} [322570]: This image should not be free'd because it was allocated by the system, not the application.
*****************************************************************
========================= CLASS #175 =============================
(1090) {270616} [270708]: On some platforms, this will match the "default font" or "system font" if such can be found.
(1301) {321622} [321714]: On some platforms, this will match the "default font" or "system font" if such can be found.
*****************************************************************
========================= CLASS #176 =============================
(1092) {270801} [270921]: &lt;p&gt; Typically, applications which want the default look should simply not set the font on the widgets they create.
(1303) {321808} [321928]: &lt;p&gt; Typically, applications which want the default look should simply not set the font on the widgets they create.
*****************************************************************
========================= CLASS #177 =============================
(1093) {270922} [271036]: Widgets are always created with the correct default font for the class of user-interface component they represent.
(1304) {321929} [322043]: Widgets are always created with the correct default font for the class of user-interface component they represent.
*****************************************************************
========================= CLASS #178 =============================
(1114) {274010} [274149]: &lt;p&gt; When a device is destroyed, resources that were acquired on behalf of the programmer need to be returned to the operating system.
(1360) {336269} [336418]: &lt;/p&gt;&lt;p&gt; When a device is destroyed, resources that were acquired on behalf of the programmer need to be returned to the operating system.
*****************************************************************
========================= CLASS #179 =============================
(1115) {274151} [274287]: For example, if the device allocated a font to be used as the system font, this font would be freed in &lt;code&gt;release&lt;/code&gt;.
(1361) {336420} [336556]: For example, if the device allocated a font to be used as the system font, this font would be freed in &lt;code&gt;release&lt;/code&gt;.
*****************************************************************
========================= CLASS #180 =============================
(1116) {274289} [274482]: Also,to assist the garbage collector and minimize the amount of memory that is not reclaimed when the programmer keeps a reference to a disposed device, all fields except the handle are zero'd.
(1362) {336558} [336751]: Also,to assist the garbage collector and minimize the amount of memory that is not reclaimed when the programmer keeps a reference to a disposed device, all fields except the handle are zero'd.
*****************************************************************
========================= CLASS #181 =============================
(1124) {275489} [275573]: @nooverride This method is not intended to be re-implemented or extended by clients.
(6445) {1477771} [1477855]: @nooverride This method is not intended to be re-implemented or extended by clients.
*****************************************************************
========================= CLASS #182 =============================
(1136) {277707} [277817]: If a modality style is not supported, it is "upgraded" to a more restrictive modality style that is supported.
(4081) {945522} [945645]: In addition, if a modality style is not supported, it is "upgraded" to a more restrictive modality style that is supported.
*****************************************************************
========================= CLASS #183 =============================
(1151) {281630} [281807]: &lt;p&gt; Note that, the value which is returned by this method &lt;em&gt;may not match&lt;/em&gt; the value which was provided to the constructor when the receiver was created.
(2054) {477593} [477769]: &lt;p&gt; Note that the value which is returned by this method &lt;em&gt;may not match&lt;/em&gt; the value which was provided to the constructor when the receiver was created.
(6427) {1473211} [1473387]: &lt;p&gt; Note that the value which is returned by this method &lt;em&gt;may not match&lt;/em&gt; the value which was provided to the constructor when the receiver was created.
*****************************************************************
========================= CLASS #184 =============================
(1166) {285974} [286124]: @return the filter path @see #setFilterPath ------------ Returns the dialog's message, which is a description of the purpose for which it was opened.
(1173) {286984} [287128]: &lt;/p&gt; @param string the filter path ------------ Sets the dialog's message, which is a description of the purpose for which it was opened.
(3282) {790189} [790265]: The message is a description of the purpose for which the dialog was opened.
*****************************************************************
========================= CLASS #185 =============================
(1167) {286125} [286185]: This message will be visible on the dialog while it is open.
(1174) {287129} [287189]: This message will be visible on the dialog while it is open.
(3283) {790266} [790326]: This message will be visible in the dialog while it is open.
(3288) {790869} [790929]: This message will be visible on the dialog while it is open.
*****************************************************************
========================= CLASS #186 =============================
(1170) {286772} [286856]: If the string is null, then the operating system's default filter path will be used.
(1646) {389555} [389639]: If the string is null, then the operating system's default filter path will be used.
*****************************************************************
========================= CLASS #187 =============================
(1172) {286916} [286983]: For convenience, either '/' or '\' can be used as a path separator.
(1648) {389699} [389766]: For convenience, either '/' or '\' can be used as a path separator.
*****************************************************************
========================= CLASS #188 =============================
(1219) {302096} [302213]: When the event does occur, the listener is notified by sending it the &lt;code&gt;handleEvent()&lt;/code&gt; message.
(1226) {303517} [303649]: When the event does occur in the display, the listener is notified by sending it the &lt;code&gt;handleEvent()&lt;/code&gt; message.
(6379) {1463487} [1463618]: When the event does occur in the widget, the listener is notified by sending it the &lt;code&gt;handleEvent()&lt;/code&gt; message.
(6382) {1464415} [1464537]: When the widget is disposed, the listener is notified by sending it the &lt;code&gt;widgetDisposed()&lt;/code&gt; message.
*****************************************************************
========================= CLASS #189 =============================
(1228) {304350} [304458]: The caller of this method continues to run in parallel, and is not notified when the runnable has completed.
(5035) {1128953} [1129061]: The caller of this method continues to run in parallel, and is not notified when the runnable has completed.
*****************************************************************
========================= CLASS #190 =============================
(1230) {304566} [304694]: &lt;p&gt; Note that at the time the runnable is invoked, widgets that have the receiver as their display may have been disposed.
(1414) {345831} [345959]: &lt;p&gt; Note that at the time the runnable is invoked, widgets that have the receiver as their display may have been disposed.
(1418) {346642} [346770]: &lt;p&gt; Note that at the time the runnable is invoked, widgets that have the receiver as their display may have been disposed.
*****************************************************************
========================= CLASS #191 =============================
(1231) {304695} [304793]: Therefore, it is necessary to check for this case inside the runnable before accessing the widget.
(1415) {345960} [346058]: Therefore, it is necessary to check for this case inside the runnable before accessing the widget.
(1419) {346771} [346869]: Therefore, it is necessary to check for this case inside the runnable before accessing the widget.
*****************************************************************
========================= CLASS #192 =============================
(1248) {307712} [307748]: The arguments are platform-specific.
(1252) {308540} [308576]: The arguments are platform-specific.
*****************************************************************
========================= CLASS #193 =============================
(1261) {311014} [311076]: Note that on multi-monitor systems the origin can be negative.
(3305) {794052} [794114]: Note that on multi-monitor systems the origin can be negative.
*****************************************************************
========================= CLASS #194 =============================
(1270) {313475} [313570]: &lt;p&gt; Applications may have associated arbitrary objects with the receiver in this fashion.
(1274) {314544} [314607]: &lt;p&gt; Applications may put arbitrary objects in this field.
(1376) {339875} [339970]: &lt;p&gt; Applications may have associated arbitrary objects with the receiver in this fashion.
(1380) {340894} [340957]: &lt;p&gt; Applications may put arbitrary objects in this field.
(6415) {1470488} [1470551]: &lt;p&gt; Applications may put arbitrary objects in this field.
(6418) {1471135} [1471230]: &lt;p&gt; Applications may have associated arbitrary objects with the receiver in this fashion.
(6454) {1479946} [1480009]: &lt;p&gt; Applications may put arbitrary objects in this field.
(6457) {1480575} [1480664]: &lt;p&gt; Applications may associate arbitrary objects with the receiver in this fashion.
*****************************************************************
========================= CLASS #195 =============================
(1271) {313571} [313777]: If the objects stored in the properties need to be notified when the display is disposed of, it is the application's responsibility to provide a &lt;code&gt;disposeExec()&lt;/code&gt; handler which does so.
(1275) {314608} [314825]: If the object stored in the display specific data needs to be notified when the display is disposed of, it is the application's responsibility to provide a &lt;code&gt;disposeExec()&lt;/code&gt; handler which does so.
(1377) {339971} [340174]: If the objects stored in the properties need to be notified when the display is disposed of, it is the application's responsibility provide a &lt;code&gt;disposeExec()&lt;/code&gt; handler which does so.
(1381) {340958} [341172]: If the object stored in the display specific data needs to be notified when the display is disposed of, it is the application's responsibility provide a &lt;code&gt;disposeExec()&lt;/code&gt; handler which does so.
(6416) {1470552} [1470734]: If the object stored in the widget data needs to be notified when the widget is disposed of, it is the application's responsibility to hook the Dispose event on the widget and do so.
(6419) {1471231} [1471412]: If the objects stored in the properties need to be notified when the widget is disposed of, it is the application's responsibility to hook the Dispose event on the widget and do so.
(6455) {1480010} [1480192]: If the object stored in the widget data needs to be notified when the widget is disposed of, it is the application's responsibility to hook the Dispose event on the widget and do so.
(6458) {1480665} [1480846]: If the objects stored in the properties need to be notified when the widget is disposed of, it is the application's responsibility to hook the Dispose event on the widget and do so.
*****************************************************************
========================= CLASS #196 =============================
(1273) {314435} [314543]: The &lt;em&gt;display specific data&lt;/em&gt; is a single, unnamed field that is stored with every display.
(1379) {340785} [340893]: The &lt;em&gt;display specific data&lt;/em&gt; is a single, unnamed field that is stored with every display.
(6414) {1470390} [1470487]: The &lt;em&gt;widget data&lt;/em&gt; is a single, unnamed field that is stored with every widget.
(6453) {1479848} [1479945]: The &lt;em&gt;widget data&lt;/em&gt; is a single, unnamed field that is stored with every widget.
*****************************************************************
========================= CLASS #197 =============================
(1278) {315410} [315598]: For example, in a dialog that contains an OK and CANCEL button, on platforms where the button dismissal alignment is &lt;code&gt;LEFT&lt;/code&gt;, the button ordering should be OK/CANCEL.
(1279) {315600} [315707]: When button dismissal alignment is &lt;code&gt;RIGHT&lt;/code&gt;, the button ordering should be CANCEL/OK.
*****************************************************************
========================= CLASS #198 =============================
(1326) {326715} [326779]: When the control is null, coordinates are mapped to the display.
(1332) {328209} [328273]: When the control is null, coordinates are mapped to the display.
(1338) {329681} [329745]: When the control is null, coordinates are mapped to the display.
(1344) {331187} [331251]: When the control is null, coordinates are mapped to the display.
*****************************************************************
========================= CLASS #199 =============================
(1327) {326780} [326993]: &lt;p&gt; NOTE: On right-to-left platforms where the coordinate systems are mirrored, special care needs to be taken when mapping coordinates from one control to another to ensure the result is correctly mirrored.
(1333) {328274} [328487]: &lt;p&gt; NOTE: On right-to-left platforms where the coordinate systems are mirrored, special care needs to be taken when mapping coordinates from one control to another to ensure the result is correctly mirrored.
(1339) {329746} [329959]: &lt;p&gt; NOTE: On right-to-left platforms where the coordinate systems are mirrored, special care needs to be taken when mapping coordinates from one control to another to ensure the result is correctly mirrored.
(1345) {331252} [331465]: &lt;p&gt; NOTE: On right-to-left platforms where the coordinate systems are mirrored, special care needs to be taken when mapping coordinates from one control to another to ensure the result is correctly mirrored.
*****************************************************************
========================= CLASS #200 =============================
(1328) {326995} [327125]: Mapping a point that is the origin of a rectangle and then adding the width and height is not equivalent to mapping the rectangle.
(1334) {328489} [328619]: Mapping a point that is the origin of a rectangle and then adding the width and height is not equivalent to mapping the rectangle.
(1340) {329961} [330091]: Mapping a point that is the origin of a rectangle and then adding the width and height is not equivalent to mapping the rectangle.
(1346) {331467} [331597]: Mapping a point that is the origin of a rectangle and then adding the width and height is not equivalent to mapping the rectangle.
*****************************************************************
========================= CLASS #201 =============================
(1329) {327127} [327287]: When one control is mirrored and the other is not, adding the width and height to a point that was mapped causes the rectangle to extend in the wrong direction.
(1335) {328621} [328781]: When one control is mirrored and the other is not, adding the width and height to a point that was mapped causes the rectangle to extend in the wrong direction.
(1341) {330093} [330253]: When one control is mirrored and the other is not, adding the width and height to a point that was mapped causes the rectangle to extend in the wrong direction.
(1347) {331599} [331759]: When one control is mirrored and the other is not, adding the width and height to a point that was mapped causes the rectangle to extend in the wrong direction.
*****************************************************************
========================= CLASS #202 =============================
(1330) {327289} [327412]: Mapping the entire rectangle instead of just one point causes both the origin and the corner of the rectangle to be mapped.
(1336) {328783} [328906]: Mapping the entire rectangle instead of just one point causes both the origin and the corner of the rectangle to be mapped.
(1342) {330255} [330378]: Mapping the entire rectangle instead of just one point causes both the origin and the corner of the rectangle to be mapped.
(1348) {331761} [331884]: Mapping the entire rectangle instead of just one point causes both the origin and the corner of the rectangle to be mapped.
*****************************************************************
========================= CLASS #203 =============================
(1392) {343323} [343493]: The application may use this to set a global exception handling policy: the most common policies are either to log and discard the exception or to re-throw the exception.
(1401) {344215} [344385]: The application may use this to set a global exception handling policy: the most common policies are either to log and discard the exception or to re-throw the exception.
*****************************************************************
========================= CLASS #204 =============================
(1393) {343494} [343567]: &lt;p&gt; The default SWT error handling policy is to rethrow exceptions.
(1402) {344386} [344459]: &lt;p&gt; The default SWT error handling policy is to rethrow exceptions.
*****************************************************************
========================= CLASS #205 =============================
(1395) {343640} [343704]: @since 3.106 ------------ Returns the current exception handler.
(1398) {344028} [344066]: @return the current exception handler.
(1404) {344517} [344581]: @since 3.106 ------------ Returns the current exception handler.
*****************************************************************
========================= CLASS #206 =============================
(1396) {343705} [343795]: It will receive all exceptions thrown by listeners and external callbacks in this display.
(1405) {344582} [344668]: It will receive all errors thrown by listeners and external callbacks in this display.
*****************************************************************
========================= CLASS #207 =============================
(1397) {343796} [344026]: If code wishes to temporarily replace the exception handler (for example, during a unit test), it is common practice to invoke this method prior to replacing the exception handler so that the old handler may be restored afterward.
(1406) {344669} [344891]: If code wishes to temporarily replace the error handler (for example, during a unit test), it is common practice to invoke this method prior to replacing the error handler so that the old handler may be restored afterward.
*****************************************************************
========================= CLASS #208 =============================
(1399) {344067} [344078]: Never null.
(1408) {344928} [344939]: Never null.
*****************************************************************
========================= CLASS #209 =============================
(1412) {345655} [345732]: The thread which calls this method is suspended until the runnable completes.
(5038) {1129294} [1129371]: The thread which calls this method is suspended until the runnable completes.
*****************************************************************
========================= CLASS #210 =============================
(1437) {350337} [350508]: &lt;p&gt; The {@code autoScaleUp(..)} methods convert from API coordinates (in SWT points) to internal high DPI coordinates (in pixels) that interface with native widgets.
(1438) {350509} [350624]: &lt;/p&gt; &lt;p&gt; The {@code autoScaleDown(..)} convert from high DPI pixels to API coordinates (in SWT points).
*****************************************************************
========================= CLASS #211 =============================
(1446) {352162} [352674]: private static final String SWT_AUTOSCALE_METHOD = "swt.autoScale.method"; static { String value = System.getProperty (SWT_AUTOSCALE_METHOD); if (value != null) { if (AutoScaleMethod.NEAREST.name().equalsIgnoreCase(value)) { autoScaleMethod = autoScaleMethodSetting = AutoScaleMethod.NEAREST; } else if (AutoScaleMethod.SMOOTH.name().equalsIgnoreCase(value)) { autoScaleMethod = autoScaleMethodSetting = AutoScaleMethod.SMOOTH; } } } Auto-scale down ImageData ------------ Auto-scale up float array dimensions.
(1447) {352675} [352755]: ------------ Auto-scale up float array dimensions if enabled for Drawable class.
(1448) {352756} [352800]: ------------ Auto-scale down int dimensions.
(1449) {352801} [352875]: ------------ Auto-scale down int dimensions if enabled for Drawable class.
(1450) {352876} [352922]: ------------ Auto-scale down float dimensions.
(1451) {352923} [352999]: ------------ Auto-scale down float dimensions if enabled for Drawable class.
(1457) {353358} [353437]: ------------ Auto-scale up ImageData ------------ Auto-scale up int dimensions.
(1458) {353438} [353569]: ------------ Auto-scale up int dimensions using Native DPI ------------ Auto-scale up int dimensions if enabled for Drawable class.
*****************************************************************
========================= CLASS #212 =============================
(1464) {353957} [354073]: @return zoom ------------ Gets Image data at specified zoom level, if image is missing then fall-back to 100% image.
(1466) {354136} [354244]: ------------ Gets Image file path at specified zoom level, if image is missing then fall-back to 100% image.
*****************************************************************
========================= CLASS #213 =============================
(1465) {354074} [354135]: If provider or fall-back image is not available, throw error.
(1467) {354245} [354306]: If provider or fall-back image is not available, throw error.
*****************************************************************
========================= CLASS #214 =============================
(1485) {357034} [357086]: It should never be referenced from application code.
(6332) {1456406} [1456458]: It should never be referenced from application code.
(6336) {1456933} [1456985]: It should never be referenced from application code.
(6341) {1457376} [1457428]: It should never be referenced from application code.
(6346) {1457783} [1457835]: It should never be referenced from application code.
(6443) {1477129} [1477181]: It should never be referenced from application code.
*****************************************************************
========================= CLASS #215 =============================
(1506) {359482} [360471]: &lt;/p&gt; @see Listener @see org.eclipse.swt.events.TypedEvent @see &lt;a href="http://www.eclipse.org/swt/examples.php"&gt;SWT Example: ControlExample, Listeners&lt;/a&gt; @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ the display where the event occurred * @since 2.0 public Display display; the widget that issued the event public Widget widget; the type of event, as defined by the event type constants in class &lt;code&gt;SWT&lt;/code&gt; * @see org.eclipse.swt.SWT public int type; the event specific detail field, as defined by the detail constants in class &lt;code&gt;SWT&lt;/code&gt; * @see org.eclipse.swt.SWT public int detail; the item that the event occurred in (can be null) public Widget item; the index of the item where the event occurred * @since 3.2 public int index; the graphics context to use when painting that is configured to use the colors, font and damaged region of the control.
(3376) {806061} [806307]: @see PaintListener @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ the graphics context to use when painting that is configured to use the colors, font and damaged region of the control.
(6320) {1454551} [1454862]: @see org.eclipse.swt.widgets.Event @see &lt;a href="http://www.eclipse.org/swt/"&gt;Sample code and further information&lt;/a&gt; ------------ the display where the event occurred * @since 2.0 public Display display; the widget that issued the event public Widget widget; the time that the event occurred.
*****************************************************************
========================= CLASS #216 =============================
(1507) {360473} [361490]: It is valid only during the paint and must not be disposed public GC gc; depending on the event type, the x offset of the bounding rectangle of the region that requires painting or the widget-relative, x coordinate of the pointer at the time the mouse button was pressed or released public int x; depending on the event type, the y offset of the bounding rectangle of the region that requires painting or the widget-relative, y coordinate of the pointer at the time the mouse button was pressed or released public int y; the width of the bounding rectangle of the region that requires painting public int width; the height of the bounding rectangle of the region that requires painting public int height; depending on the event type, the number of following paint events that are pending which may always be zero on some platforms, or the number of lines or pages to scroll using the mouse wheel, or the number of times the mouse has been clicked public int count; the time that the event occurred.
(3326) {797438} [797916]: * @see org.eclipse.swt.SWT#MODIFIER_MASK @see org.eclipse.swt.SWT#BUTTON_MASK public int stateMask; the widget-relative, x coordinate of the pointer at the time the mouse button was pressed or released public int x; the widget-relative, y coordinate of the pointer at the time the mouse button was pressed or released public int y; the number times the mouse has been clicked, as defined by the operating system; 1 for the first click, 2 for the second click and so on.
(3377) {806309} [807032]: It is valid only during the paint and must not be disposed public GC gc; the x offset of the bounding rectangle of the region that requires painting public int x; the y offset of the bounding rectangle of the region that requires painting public int y; the width of the bounding rectangle of the region that requires painting public int width; the height of the bounding rectangle of the region that requires painting public int height; the number of following paint events which are pending which may always be zero on some platforms public int count; static final long serialVersionUID = 3256446919205992497L; Constructs a new instance of this class based on the information in the given untyped event.
(5859) {1333015} [1333197]: * @see org.eclipse.swt.SWT#MODIFIER_MASK @see org.eclipse.swt.SWT#BUTTON_MASK public int stateMask; The widget-relative x coordinate of the pointer at the time the touch occurred.
(5860) {1333199} [1333294]: public int x; The widget-relative y coordinate of the pointer at the time the touch occurred.
*****************************************************************
========================= CLASS #217 =============================
(1508) {361491} [361614]: * NOTE: This field is an unsigned integer and should be AND'ed with 0xFFFFFFFFL so that it can be treated as a signed long.
(6321) {1454863} [1454986]: * NOTE: This field is an unsigned integer and should be AND'ed with 0xFFFFFFFFL so that it can be treated as a signed long.
*****************************************************************
========================= CLASS #218 =============================
(1511) {361858} [361937]: This is the final character that results after all modifiers have been applied.
(2805) {684191} [684270]: This is the final character that results after all modifiers have been applied.
*****************************************************************
========================= CLASS #219 =============================
(1512) {361939} [362020]: For example, when the user types Ctrl+A, the character value is 0x01 (ASCII SOH).
(2806) {684272} [684341]: For example, when the user types Ctrl+A, the character value is 0x01.
*****************************************************************
========================= CLASS #220 =============================
(1513) {362021} [362187]: It is important that applications do not attempt to modify the character value based on a stateMask (such as SWT.CTRL) or the resulting character will not be correct.
(2807) {684343} [684509]: It is important that applications do not attempt to modify the character value based on a stateMask (such as SWT.CTRL) or the resulting character will not be correct.
*****************************************************************
========================= CLASS #221 =============================
(1515) {362354} [362473]: When the character field of the event is ambiguous, this field contains the unaffected value of the original character.
(2809) {684652} [684768]: When the character field of the event is ambiguous, this field contains the unicode value of the original character.
*****************************************************************
========================= CLASS #222 =============================
(1516) {362475} [362641]: For example, typing Ctrl+M or Enter both result in the character '\r' but the keyCode field will also contain '\r' when Enter was typed and 'm' when Ctrl+M was typed.
(2810) {684770} [684908]: For example, typing Ctrl+M or Return both result in the character '\r' but the keyCode field will also contain '\r' when Return was typed.
*****************************************************************
========================= CLASS #223 =============================
(1517) {362642} [362774]: * @see org.eclipse.swt.SWT public int keyCode; depending on the event, the location of key specified by the keyCode or character.
(2811) {684909} [685041]: * @see org.eclipse.swt.SWT public int keyCode; depending on the event, the location of key specified by the keyCode or character.
*****************************************************************
========================= CLASS #224 =============================
(1519) {362996} [363159]: &lt;p&gt; The location field can be used to differentiate key events that have the same key code and character but are generated by different keys in the keyboard.
(2813) {685263} [685426]: &lt;p&gt; The location field can be used to differentiate key events that have the same key code and character but are generated by different keys on the keyboard.
*****************************************************************
========================= CLASS #225 =============================
(1520) {363160} [363298]: For example, a key down event with the key code equals to SWT.SHIFT can be generated by the left and the right shift keys in the keyboard.
(2814) {685427} [685564]: For example, a key down event with the key code equal to SWT.SHIFT can be generated by the left and the right shift keys on the keyboard.
*****************************************************************
========================= CLASS #226 =============================
(1522) {363412} [363490]: It does not include information about the location of modifiers in state mask.
(2816) {685698} [685780]: It does not include information about the location of modifiers in the state mask.
*****************************************************************
========================= CLASS #227 =============================
(1523) {363491} [363753]: &lt;/p&gt; * @see org.eclipse.swt.SWT#LEFT @see org.eclipse.swt.SWT#RIGHT @see org.eclipse.swt.SWT#KEYPAD * @since 3.6 public int keyLocation; depending on the event, the state of the keyboard modifier keys and mouse masks at the time the event was generated.
(2817) {685781} [686019]: &lt;/p&gt; * @see org.eclipse.swt.SWT#LEFT @see org.eclipse.swt.SWT#RIGHT @see org.eclipse.swt.SWT#KEYPAD * @since 3.6 public int keyLocation; the state of the keyboard modifier keys and mouse masks at the time the event was generated.
*****************************************************************
========================= CLASS #228 =============================
(1524) {363754} [363914]: * @see org.eclipse.swt.SWT#MODIFIER_MASK @see org.eclipse.swt.SWT#BUTTON_MASK public int stateMask; depending on the event, the range of text being modified.
(2163) {503749} [503869]: * @see org.eclipse.swt.SWT#MODIFIER_MASK @see org.eclipse.swt.SWT#BUTTON_MASK public int stateMask; The gesture type.
(2818) {686020} [686181]: * @see org.eclipse.swt.SWT#MODIFIER_MASK @see org.eclipse.swt.SWT#BUTTON_MASK public int stateMask; A flag indicating whether the operation should be allowed.
(3165) {763277} [763351]: public int y; A flag indicating whether the operation should be allowed.
*****************************************************************
========================= CLASS #229 =============================
(1526) {363983} [364067]: public int start, end; depending on the event, the new text that will be inserted.
(6352) {1458624} [1458684]: public int start, end; the new text that will be inserted.
*****************************************************************
========================= CLASS #230 =============================
(1527) {364068} [364148]: Setting this field will change the text that is about to be inserted or deleted.
(6353) {1458685} [1458765]: Setting this field will change the text that is about to be inserted or deleted.
*****************************************************************
========================= CLASS #231 =============================
(1531) {364603} [364755]: * @since 3.7 public Touch[] touches; If nonzero, a positive value indicates a swipe to the right, and a negative value indicates a swipe to the left.
(1532) {364756} [364924]: * @since 3.7 public int xDirection; If nonzero, a positive value indicates a swipe in the up direction, and a negative value indicates a swipe in the down direction.
*****************************************************************
========================= CLASS #232 =============================
(1620) {385960} [386123]: @return the file extensions filter ------------ Get the 0-based index of the file extension filter which was selected by the user, or -1 if no filter was selected.
(3492) {832724} [832756]: ------------ Get the chunk type.
(3508) {833478} [833512]: ------------ Get the chunk's data.
(3515) {833736} [833788]: ------------ Get the CRC value for the chunk's data.
(3517) {833860} [833912]: ------------ Set the CRC value for the chunk's data.
(3520) {834068} [834124]: ------------ Compute the CRC value for the chunk's data.
(3522) {834190} [834240]: ------------ Answer the CRC value of chunk's data.
(3654) {845850} [845902]: ------------ Answer the transparent pixel RGB value.
*****************************************************************
========================= CLASS #233 =============================
(1621) {386124} [386209]: &lt;p&gt; This is an index into the FilterExtensions array and the FilterNames array.
(1640) {388689} [388774]: &lt;p&gt; This is an index into the FilterExtensions array and the FilterNames array.
*****************************************************************
========================= CLASS #234 =============================
(1624) {386591} [386686]: File names in this path will appear in the dialog, filtered according to the filter extensions.
(1645) {389459} [389554]: File names in this path will appear in the dialog, filtered according to the filter extensions.
*****************************************************************
========================= CLASS #235 =============================
(1625) {386688} [386899]: @return the directory path string @see #setFilterExtensions ------------ Returns the flag that the dialog will use to determine whether to prompt the user for file overwrite if the selected file already exists.
(1649) {389767} [389986]: &lt;/p&gt; @param string the directory path @see #setFilterExtensions ------------ Sets the flag that the dialog will use to determine whether to prompt the user for file overwrite if the selected file already exists.
*****************************************************************
========================= CLASS #236 =============================
(1654) {390682} [390800]: ------------ Read the specified input stream, and return the device independent image array represented by the stream.
(1655) {390801} [390946]: ------------ Read the specified input stream using the specified loader, and return the device independent image array represented by the stream.
*****************************************************************
========================= CLASS #237 =============================
(1656) {390947} [391095]: ------------ Write the device independent image array stored in the specified loader to the specified output stream using the specified file format.
(1657) {391096} [391212]: ------------ Write the device independent image array stored in the specified loader to the specified output stream.
*****************************************************************
========================= CLASS #238 =============================
(1672) {393544} [393578]: * The default value is HORIZONTAL.
(1674) {393968} [393993]: * The default value is 0.
(1676) {394167} [394192]: * The default value is 0.
(1678) {394345} [394370]: * The default value is 0.
(1880) {432153} [432188]: * The default value is SWT.DEFAULT.
(1883) {432441} [432476]: * The default value is SWT.DEFAULT.
(1906) {437545} [437570]: * The default value is 0.
(1908) {437904} [437929]: * The default value is 0.
(1910) {438092} [438117]: * The default value is 0.
(1912) {438282} [438307]: * The default value is 0.
(1914) {438466} [438491]: * The default value is 0.
(2220) {514135} [514165]: * The default value is CENTER.
(2222) {514709} [514742]: * The default value is BEGINNING.
(2225) {515379} [515414]: * The default value is SWT.DEFAULT.
(2228) {515676} [515711]: * The default value is SWT.DEFAULT.
(2231) {515914} [515939]: * The default value is 0.
(2245) {519715} [519740]: * The default value is 0.
(2249) {520134} [520159]: * The default value is 0.
(2329) {530393} [530418]: * The default value is 0.
(2331) {530576} [530601]: * The default value is 0.
(2333) {530764} [530789]: * The default value is 0.
(2335) {530954} [530979]: * The default value is 0.
(3819) {889107} [889142]: * The default value is SWT.DEFAULT.
(3822) {889419} [889454]: * The default value is SWT.DEFAULT.
(3842) {893000} [893034]: * The default value is HORIZONTAL.
(3844) {893437} [893462]: * The default value is 0.
(3846) {893636} [893661]: * The default value is 0.
*****************************************************************
========================= CLASS #239 =============================
(1673) {393579} [393967]: * Possible values are: &lt;ul&gt; &lt;li&gt;HORIZONTAL: Position the controls horizontally from left to right&lt;/li&gt; &lt;li&gt;VERTICAL: Position the controls vertically from top to bottom&lt;/li&gt; &lt;/ul&gt; public int type = SWT.HORIZONTAL; marginWidth specifies the number of pixels of horizontal margin that will be placed along the left and right edges of the layout.
(2326) {529853} [530030]: public boolean makeColumnsEqualWidth = false; marginWidth specifies the number of pixels of horizontal margin that will be placed along the left and right edges of the layout.
(3843) {893035} [893436]: * Possible values are: &lt;ul&gt; &lt;li&gt;HORIZONTAL: Position the controls horizontally from left to right&lt;/li&gt; &lt;li&gt;VERTICAL: Position the controls vertically from top to bottom&lt;/li&gt; &lt;/ul&gt; * @since 2.0 public int type = SWT.HORIZONTAL; marginWidth specifies the number of pixels of horizontal margin that will be placed along the left and right edges of the layout.
*****************************************************************
========================= CLASS #240 =============================
(1675) {393994} [394166]: * @since 3.0 public int marginWidth = 0; marginHeight specifies the number of pixels of vertical margin that will be placed along the top and bottom edges of the layout.
(1904) {437359} [437544]: * The default value is 0. public int marginWidth = 0; marginHeight specifies the number of pixels of vertical margin that will be placed along the top and bottom edges of the layout.
(1905) {437545} [437720]: * The default value is 0. public int marginHeight = 0; marginLeft specifies the number of pixels of horizontal margin that will be placed along the left edge of the layout.
(1907) {437747} [437903]: * @since 3.1 public int marginLeft = 0; marginTop specifies the number of pixels of vertical margin that will be placed along the top edge of the layout.
(1909) {437930} [438091]: * @since 3.1 public int marginTop = 0; marginRight specifies the number of pixels of horizontal margin that will be placed along the right edge of the layout.
(1911) {438118} [438281]: * @since 3.1 public int marginRight = 0; marginBottom specifies the number of pixels of vertical margin that will be placed along the bottom edge of the layout.
(2230) {515914} [516088]: * The default value is 0. public int horizontalIndent = 0; verticalIndent specifies the number of pixels of indentation that will be placed along the top side of the cell.
(2327) {530031} [530216]: * The default value is 5. public int marginWidth = 5; marginHeight specifies the number of pixels of vertical margin that will be placed along the top and bottom edges of the layout.
(2328) {530217} [530392]: * The default value is 5. public int marginHeight = 5; marginLeft specifies the number of pixels of horizontal margin that will be placed along the left edge of the layout.
(2330) {530419} [530575]: * @since 3.1 public int marginLeft = 0; marginTop specifies the number of pixels of vertical margin that will be placed along the top edge of the layout.
(2332) {530602} [530763]: * @since 3.1 public int marginTop = 0; marginRight specifies the number of pixels of horizontal margin that will be placed along the right edge of the layout.
(2334) {530790} [530953]: * @since 3.1 public int marginRight = 0; marginBottom specifies the number of pixels of vertical margin that will be placed along the bottom edge of the layout.
(3845) {893463} [893635]: * @since 3.0 public int marginWidth = 0; marginHeight specifies the number of pixels of vertical margin that will be placed along the top and bottom edges of the layout.
(3859) {894995} [895146]: public boolean justify = false; marginLeft specifies the number of pixels of horizontal margin that will be placed along the left edge of the layout.
(3860) {895147} [895316]: * The default value is 3. public int marginLeft = 3; marginTop specifies the number of pixels of vertical margin that will be placed along the top edge of the layout.
(3861) {895317} [895491]: * The default value is 3. public int marginTop = 3; marginRight specifies the number of pixels of horizontal margin that will be placed along the right edge of the layout.
(3862) {895492} [895668]: * The default value is 3. public int marginRight = 3; marginBottom specifies the number of pixels of vertical margin that will be placed along the bottom edge of the layout.
*****************************************************************
========================= CLASS #241 =============================
(1677) {394193} [394344]: * @since 3.0 public int marginHeight = 0; spacing specifies the number of pixels between the edge of one cell and the edge of its neighbouring cell.
(1913) {438308} [438465]: * @since 3.1 public int marginBottom = 0; spacing specifies the number of pixels between the edge of one control and the edge of its neighbouring control.
(2336) {530980} [531165]: * @since 3.1 public int marginBottom = 0; horizontalSpacing specifies the number of pixels between the right edge of one cell and the left edge of its neighbouring cell to the right.
(3847) {893662} [893813]: * @since 3.0 public int marginHeight = 0; spacing specifies the number of pixels between the edge of one cell and the edge of its neighbouring cell.
*****************************************************************
========================= CLASS #242 =============================
(1679) {394371} [394451]: * @since 3.0 public int spacing = 0; Constructs a new instance of this class.
(1915) {438492} [438572]: * @since 3.0 public int spacing = 0; Constructs a new instance of this class.
*****************************************************************
========================= CLASS #243 =============================
(1701) {397707} [397908]: @param e an event containing information about the focus change ------------ Static helper method to create a focus listener for the {@link #focusGained(FocusEvent e)}) method with a lambda expression.
(2829) {687778} [687973]: @param e an event containing information about the key release ------------ Static helper method to create a key listener for the {@link #keyPressed(KeyEvent e)}) method with a lambda expression.
(4064) {942318} [942547]: &lt;/p&gt; @param e an event containing information about the default selection ------------ Static helper method to create a selection listener for the {@link #widgetSelected(SelectionEvent e)}) method with a lambda expression.
*****************************************************************
========================= CLASS #244 =============================
(1755) {409020} [409107]: &lt;p&gt; The locale determines which platform character set this font is going to use.
(1766) {410658} [410745]: &lt;p&gt; The locale determines which platform character set this font is going to use.
*****************************************************************
========================= CLASS #245 =============================
(1756) {409108} [409242]: Widgets and graphics operations that use this font will convert UNICODE strings to the platform character set of the specified locale.
(1767) {410746} [410880]: Widgets and graphics operations that use this font will convert UNICODE strings to the platform character set of the specified locale.
*****************************************************************
========================= CLASS #246 =============================
(1757) {409243} [409421]: &lt;/p&gt; &lt;p&gt; On platforms where there are multiple character sets for a given language/country locale, the variant portion of the locale will determine the character set.
(1768) {410881} [411059]: &lt;/p&gt; &lt;p&gt; On platforms where there are multiple character sets for a given language/country locale, the variant portion of the locale will determine the character set.
*****************************************************************
========================= CLASS #247 =============================
(1813) {420408} [420570]: A font's &lt;em&gt;ascent&lt;/em&gt; is the distance from the baseline to the top of actual characters, not including any of the leading area, measured in pixels.
(1816) {420833} [420999]: A font's &lt;em&gt;descent&lt;/em&gt; is the distance from the baseline to the bottom of actual characters, not including any of the leading area, measured in pixels.
(1818) {421124} [421212]: A font's &lt;em&gt;height&lt;/em&gt; is the sum of its ascent, descent and leading area.
*****************************************************************
========================= CLASS #248 =============================
(1832) {423123} [423520]: For example: &lt;pre&gt; FormData data = new FormData(); data.top = new FormAttachment(0,5); data.bottom = new FormAttachment(100,-5); data.left = new FormAttachment(0,5); data.right = new FormAttachment(100,-5); button.setLayoutData(data); &lt;/pre&gt; &lt;/p&gt; &lt;p&gt; A &lt;code&gt;FormAttachment&lt;/code&gt; defines where to attach the side of a control by using the equation, y = ax + b.
(1837) {423859} [424098]: For example: &lt;pre&gt; FormAttachment attach = new FormAttachment (20, -5); &lt;/pre&gt; specifies that the side to which the &lt;code&gt;FormAttachment&lt;/code&gt; object belongs will lie at 20% of the parent composite, minus 5 pixels.
(1839) {424175} [424476]: For example: &lt;pre&gt; FormAttachment attach = new FormAttachment (button, 10); &lt;/pre&gt; specifies that the side to which the &lt;code&gt;FormAttachment&lt;/code&gt; object belongs will lie in the same position as the adjacent side of the &lt;code&gt;button&lt;/code&gt; control, plus 10 pixels.
(1841) {424562} [424825]: For example: &lt;pre&gt; FormData data = new FormData (); data.left = new FormAttachment (button, 0, SWT.LEFT); &lt;/pre&gt; specifies that the left side of the control will lie in the same position as the left side of the &lt;code&gt;button&lt;/code&gt; control.
(1843) {424928} [425188]: For example: &lt;pre&gt; data.left = new FormAttachment (button, 0, SWT.CENTER); &lt;/pre&gt; specifies that the left side of the control will be positioned so that it is centered between the left and right sides of the &lt;code&gt;button&lt;/code&gt; control.
(1876) {431165} [431671]: To define attachments for the &lt;code&gt;FormData&lt;/code&gt;, set the fields directly, like this: &lt;pre&gt; FormData data = new FormData(); data.left = new FormAttachment(0,5); data.right = new FormAttachment(100,-5); button.setLayoutData(formData); &lt;/pre&gt; &lt;/p&gt; &lt;p&gt; &lt;code&gt;FormData&lt;/code&gt; contains the &lt;code&gt;FormAttachments&lt;/code&gt; for each edge of the control that the &lt;code&gt;FormLayout&lt;/code&gt; uses to determine the size and position of the control.
*****************************************************************
========================= CLASS #249 =============================
(1858) {427422} [427491]: The numerator is zero, the denominator is 100 and the offset is zero.
(1860) {427714} [427733]: The offset is zero.
*****************************************************************
========================= CLASS #250 =============================
(1859) {427493} [427713]: @since 3.2 ------------ Constructs a new instance of this class given a numerator Since no denominator or offset is specified, the default is to treat the numerator as a percentage of the form, with a denominator of 100.
(1862) {427881} [428009]: Since no denominator is specified, the default is to treat the numerator as a percentage of the form, with a denominator of 100.
*****************************************************************
========================= CLASS #251 =============================
(1866) {428544} [428667]: Since no alignment is specified, the default alignment is to attach the side to the adjacent side of the specified control.
(1869) {428858} [428981]: Since no alignment is specified, the default alignment is to attach the side to the adjacent side of the specified control.
*****************************************************************
========================= CLASS #252 =============================
(1881) {432189} [432317]: * @see Control#computeSize(int, int, boolean) public int width = SWT.DEFAULT; height specifies the preferred height in pixels.
(2226) {515415} [515552]: * @see Control#computeSize(int, int, boolean) public int widthHint = SWT.DEFAULT; heightHint specifies the preferred height in pixels.
(3820) {889143} [889295]: * @see org.eclipse.swt.widgets.Control#computeSize(int, int, boolean) public int width = SWT.DEFAULT; height specifies the preferred height in pixels.
*****************************************************************
========================= CLASS #253 =============================
(1888) {432895} [433256]: public FormAttachment bottom; int cacheWidth = -1, cacheHeight = -1; int defaultWhint, defaultHhint, defaultWidth = -1, defaultHeight = -1; int currentWhint, currentHhint, currentWidth = -1, currentHeight = -1; FormAttachment cacheLeft, cacheRight, cacheTop, cacheBottom; boolean isVisited, needed; Constructs a new instance of FormData using default values.
(2307) {525394} [525706]: public static final int FILL_BOTH = FILL_VERTICAL | FILL_HORIZONTAL; int cacheWidth = -1, cacheHeight = -1; int defaultWhint, defaultHhint, defaultWidth = -1, defaultHeight = -1; int currentWhint, currentHhint, currentWidth = -1, currentHeight = -1; Constructs a new instance of GridData using default values.
*****************************************************************
========================= CLASS #254 =============================
(1890) {433337} [433426]: A value of SWT.DEFAULT indicates that no minimum width or no minimum height is specified.
(2313) {527368} [527457]: A value of SWT.DEFAULT indicates that no minimum width or no minimum height is specified.
(3829) {890129} [890218]: A value of SWT.DEFAULT indicates that no minimum width or no minimum height is specified.
(3831) {890390} [890479]: A value of SWT.DEFAULT indicates that no minimum width or no minimum height is specified.
*****************************************************************
========================= CLASS #255 =============================
(1896) {434840} [435786]: The following example code attaches &lt;code&gt;button1&lt;/code&gt; to the top and left edge of the composite and &lt;code&gt;button2&lt;/code&gt; to the right edge of &lt;code&gt;button1&lt;/code&gt; and the top and right edges of the composite: &lt;pre&gt; FormData data1 = new FormData(); data1.left = new FormAttachment(0, 0); data1.top = new FormAttachment(0, 0); button1.setLayoutData(data1); FormData data2 = new FormData(); data2.left = new FormAttachment(button1); data2.top = new FormAttachment(0, 0); data2.right = new FormAttachment(100, 0); button2.setLayoutData(data2); &lt;/pre&gt; &lt;/p&gt; &lt;p&gt; Each side of a child control can be attached to a position in the parent composite, or to other controls within the &lt;code&gt;Composite&lt;/code&gt; by creating instances of &lt;code&gt;FormAttachment&lt;/code&gt; and setting them into the top, bottom, left, and right fields of the child's &lt;code&gt;FormData&lt;/code&gt;.
(1899) {436111} [436484]: The following code positions &lt;code&gt;button1&lt;/code&gt; and &lt;code&gt;button2&lt;/code&gt; but relies on default attachments: &lt;pre&gt; FormData data2 = new FormData(); data2.left = new FormAttachment(button1); data2.right = new FormAttachment(100, 0); button2.setLayoutData(data2); &lt;/pre&gt; &lt;/p&gt; &lt;p&gt; IMPORTANT: Do not define circular attachments.
(1900) {436486} [436737]: For example, do not attach the right edge of &lt;code&gt;button1&lt;/code&gt; to the left edge of &lt;code&gt;button2&lt;/code&gt; and then attach the left edge of &lt;code&gt;button2&lt;/code&gt; to the right edge of &lt;code&gt;button1&lt;/code&gt;.
*****************************************************************
========================= CLASS #256 =============================
(1934) {442704} [442798]: Sets the foreground color, background color and font in the GC to match those in the drawable.
(1937) {443696} [443790]: Sets the foreground color, background color and font in the GC to match those in the drawable.
*****************************************************************
========================= CLASS #257 =============================
(1943) {446757} [446814]: Applications must dispose of all GCs which they allocate.
(3778) {878391} [878454]: Applications must dispose of all resources which they allocate.
*****************************************************************
========================= CLASS #258 =============================
(1946) {447224} [447296]: Angles are interpreted such that 0 degrees is at the 3 o'clock position.
(1998) {463276} [463348]: Angles are interpreted such that 0 degrees is at the 3 o'clock position.
(3427) {817251} [817323]: Angles are interpreted such that 0 degrees is at the 3 o'clock position.
*****************************************************************
========================= CLASS #259 =============================
(1947) {447297} [447407]: A positive value indicates a counter-clockwise rotation while a negative value indicates a clockwise rotation.
(1999) {463349} [463459]: A positive value indicates a counter-clockwise rotation while a negative value indicates a clockwise rotation.
(3428) {817324} [817434]: A positive value indicates a counter-clockwise rotation while a negative value indicates a clockwise rotation.
(5953) {1354810} [1354920]: A positive value indicates a clockwise rotation while a negative value indicates a counter-clockwise rotation.
*****************************************************************
========================= CLASS #260 =============================
(1961) {452742} [452872]: &lt;p&gt; This operation requires the operating system's advanced graphics subsystem which may not be available on some platforms.
(2005) {465747} [465877]: &lt;p&gt; This operation requires the operating system's advanced graphics subsystem which may not be available on some platforms.
(2080) {483120} [483250]: &lt;p&gt; This operation requires the operating system's advanced graphics subsystem which may not be available on some platforms.
(2082) {483937} [484067]: &lt;p&gt; This operation requires the operating system's advanced graphics subsystem which may not be available on some platforms.
(2087) {484988} [485118]: &lt;p&gt; This operation requires the operating system's advanced graphics subsystem which may not be available on some platforms.
(2090) {486187} [486317]: &lt;p&gt; This operation requires the operating system's advanced graphics subsystem which may not be available on some platforms.
(2103) {489505} [489635]: &lt;p&gt; This operation requires the operating system's advanced graphics subsystem which may not be available on some platforms.
(2105) {490345} [490475]: &lt;p&gt; This operation requires the operating system's advanced graphics subsystem which may not be available on some platforms.
(2107) {491117} [491247]: &lt;p&gt; This operation requires the operating system's advanced graphics subsystem which may not be available on some platforms.
(2122) {496066} [496196]: &lt;p&gt; This operation requires the operating system's advanced graphics subsystem which may not be available on some platforms.
(2125) {496962} [497092]: &lt;p&gt; This operation requires the operating system's advanced graphics subsystem which may not be available on some platforms.
(3408) {813131} [813268]: &lt;/p&gt; &lt;p&gt; This class requires the operating system's advanced graphics subsystem which may not be available on some platforms.
(3414) {814159} [814289]: &lt;p&gt; This operation requires the operating system's advanced graphics subsystem which may not be available on some platforms.
(3420) {815189} [815319]: &lt;p&gt; This operation requires the operating system's advanced graphics subsystem which may not be available on some platforms.
(3423) {816186} [816316]: &lt;p&gt; This operation requires the operating system's advanced graphics subsystem which may not be available on some platforms.
(3459) {826089} [826226]: &lt;/p&gt; &lt;p&gt; This class requires the operating system's advanced graphics subsystem which may not be available on some platforms.
(3466) {827161} [827291]: &lt;p&gt; This operation requires the operating system's advanced graphics subsystem which may not be available on some platforms.
(3470) {828228} [828358]: &lt;p&gt; This operation requires the operating system's advanced graphics subsystem which may not be available on some platforms.
(3474) {829632} [829762]: &lt;p&gt; This operation requires the operating system's advanced graphics subsystem which may not be available on some platforms.
(4149) {963847} [963976]: &lt;p&gt; This operation requires the operating system's advanced widgets subsystem which may not be available on some platforms.
(5929) {1348280} [1348417]: &lt;/p&gt; &lt;p&gt; This class requires the operating system's advanced graphics subsystem which may not be available on some platforms.
(5935) {1349161} [1349291]: &lt;p&gt; This operation requires the operating system's advanced graphics subsystem which may not be available on some platforms.
(5938) {1350012} [1350142]: &lt;p&gt; This operation requires the operating system's advanced graphics subsystem which may not be available on some platforms.
(5941) {1351075} [1351205]: &lt;p&gt; This operation requires the operating system's advanced graphics subsystem which may not be available on some platforms.
*****************************************************************
========================= CLASS #261 =============================
(1965) {453940} [454065]: The array contains alternating x and y values which are considered to represent points which are the vertices of the polygon.
(1968) {454649} [454774]: The array contains alternating x and y values which are considered to represent points which are the corners of the polyline.
(2007) {466523} [466648]: The array contains alternating x and y values which are considered to represent points which are the vertices of the polygon.
*****************************************************************
========================= CLASS #262 =============================
(1966) {454066} [454167]: Lines are drawn between each consecutive pair, and between the first pair and last pair in the array.
(1969) {454775} [454880]: Lines are drawn between each consecutive pair, but not between the first pair and last pair in the array.
(2008) {466649} [466750]: Lines are drawn between each consecutive pair, and between the first pair and last pair in the array.
*****************************************************************
========================= CLASS #263 =============================
(1981) {457643} [457708]: No tab expansion or carriage return processing will be performed.
(1984) {458426} [458491]: No tab expansion or carriage return processing will be performed.
(2127) {497616} [497681]: No tab expansion or carriage return processing will be performed.
*****************************************************************
========================= CLASS #264 =============================
(1982) {457709} [457832]: The background of the rectangular area where the string is being drawn will be filled with the receiver's background color.
(1988) {459503} [459624]: The background of the rectangular area where the text is being drawn will be filled with the receiver's background color.
*****************************************************************
========================= CLASS #265 =============================
(1987) {459443} [459502]: Tab expansion and carriage return processing are performed.
(1990) {460214} [460273]: Tab expansion and carriage return processing are performed.
(2130) {498284} [498343]: Tab expansion and carriage return processing are performed.
*****************************************************************
========================= CLASS #266 =============================
(2016) {469416} [469490]: &lt;p&gt; Advanced graphics may not be installed for the operating system.
(2074) {481993} [482077]: &lt;/p&gt;&lt;p&gt; Advanced graphics may not be installed for the operating system.
*****************************************************************
========================= CLASS #267 =============================
(2023) {470326} [470386]: The alpha value is between 0 (transparent) and 255 (opaque).
(2558) {575216} [575276]: The alpha value is between 0 (transparent) and 255 (opaque).
(4133) {957931} [957991]: The alpha value is between 0 (transparent) and 255 (opaque).
*****************************************************************
========================= CLASS #268 =============================
(2025) {470745} [470840]: Note that this controls anti-aliasing for all &lt;em&gt;non-text drawing&lt;/em&gt; operations.
(2079) {483024} [483119]: Note that this controls anti-aliasing for all &lt;em&gt;non-text drawing&lt;/em&gt; operations.
(2121) {495969} [496065]: Note that this controls anti-aliasing only for all &lt;em&gt;text drawing&lt;/em&gt; operations.
*****************************************************************
========================= CLASS #269 =============================
(2055) {477770} [477884]: This can occur when the underlying operating system does not support a particular combination of requested styles.
(6428) {1473388} [1473502]: This can occur when the underlying operating system does not support a particular combination of requested styles.
*****************************************************************
========================= CLASS #270 =============================
(2098) {488467} [488562]: If the argument is null, then a default font appropriate for the platform will be used instead.
(5651) {1285037} [1285132]: If the argument is null, then a default font appropriate for the platform will be used instead.
*****************************************************************
========================= CLASS #271 =============================
(2150) {501531} [501605]: In other words, it returns the integer conversion of length * cos (angle).
(2152) {501843} [501917]: In other words, it returns the integer conversion of length * sin (angle).
*****************************************************************
========================= CLASS #272 =============================
(2151) {501607} [501842]: @param angle the angle in degrees @param length the length of the triangle's hypotenuse @return the integer conversion of length * cos (angle) ------------ Answers the length of the side opposite to the given angle of a right triangle.
(2153) {501919} [502141]: @param angle the angle in degrees @param length the length of the triangle's hypotenuse @return the integer conversion of length * sin (angle) ====== GCData.java ====== Copyright (c) 2000, 2009 IBM Corporation and others.
*****************************************************************
========================= CLASS #273 =============================
(2165) {504388} [504523]: public int detail; The meaning of this field is dependent on the value of the &lt;code&gt;detail&lt;/code&gt; field and the platform.
(2167) {504697} [504827]: public int x; The meaning of this field is dependent on the value of the &lt;code&gt;detail&lt;/code&gt; field and the platform.
(2174) {505628} [505725]: The meaning of this field is dependent on the value of the &lt;code&gt;detail&lt;/code&gt; field.
(2179) {506466} [506563]: The meaning of this field is dependent on the value of the &lt;code&gt;detail&lt;/code&gt; field.
*****************************************************************
========================= CLASS #274 =============================
(2166) {504525} [504695]: It can represent either the x coordinate of the centroid of the touches that make up the gesture, or the x coordinate of the cursor at the time the gesture was performed.
(2168) {504829} [504999]: It can represent either the y coordinate of the centroid of the touches that make up the gesture, or the y coordinate of the cursor at the time the gesture was performed.
*****************************************************************
========================= CLASS #275 =============================
(2203) {509980} [510089]: &lt;p&gt; The hashCode() method in this class uses the values of the public fields to compute the hash value.
(3665) {846966} [847086]: &lt;/p&gt; &lt;p&gt; The hashCode() method in this class uses the values of the public fields to compute the hash value.
(3701) {855817} [855937]: &lt;/p&gt; &lt;p&gt; The hashCode() method in this class uses the values of the public fields to compute the hash value.
(3789) {879873} [879982]: &lt;p&gt; The hashCode() method in this class uses the values of the public fields to compute the hash value.
(3804) {884490} [884599]: &lt;p&gt; The hashCode() method in this class uses the values of the public fields to compute the hash value.
(5690) {1291616} [1291725]: &lt;p&gt; The hashCode() method in this class uses the values of the public fields to compute the hash value.
*****************************************************************
========================= CLASS #276 =============================
(2204) {510090} [510211]: When storing instances of the class in hashed collections, do not modify these fields after the object has been inserted.
(3666) {847087} [847208]: When storing instances of the class in hashed collections, do not modify these fields after the object has been inserted.
(3702) {855938} [856059]: When storing instances of the class in hashed collections, do not modify these fields after the object has been inserted.
(3790) {879983} [880104]: When storing instances of the class in hashed collections, do not modify these fields after the object has been inserted.
(3805) {884600} [884721]: When storing instances of the class in hashed collections, do not modify these fields after the object has been inserted.
(5691) {1291726} [1291847]: When storing instances of the class in hashed collections, do not modify these fields after the object has been inserted.
*****************************************************************
========================= CLASS #277 =============================
(2221) {514166} [514708]: * Possible values are: &lt;ul&gt; &lt;li&gt;SWT.BEGINNING (or SWT.TOP): Position the control at the top of the cell&lt;/li&gt; &lt;li&gt;SWT.CENTER: Position the control in the vertical center of the cell&lt;/li&gt; &lt;li&gt;SWT.END (or SWT.BOTTOM): Position the control at the bottom of the cell&lt;/li&gt; &lt;li&gt;SWT.FILL: Resize the control to fill the cell vertically&lt;/li&gt; &lt;/ul&gt; public int verticalAlignment = CENTER; horizontalAlignment specifies how controls will be positioned horizontally within a cell.
(2223) {514743} [515255]: * Possible values are: &lt;ul&gt; &lt;li&gt;SWT.BEGINNING (or SWT.LEFT): Position the control at the left of the cell&lt;/li&gt; &lt;li&gt;SWT.CENTER: Position the control in the horizontal center of the cell&lt;/li&gt; &lt;li&gt;SWT.END (or SWT.RIGHT): Position the control at the right of the cell&lt;/li&gt; &lt;li&gt;SWT.FILL: Resize the control to fill the cell horizontally&lt;/li&gt; &lt;/ul&gt; public int horizontalAlignment = BEGINNING; widthHint specifies the preferred width in pixels.
(2255) {520757} [520809]: Position the control at the top or left of the cell.
(2259) {520981} [521067]: Position the control in the vertical or horizontal center of the cell Not recommended.
(2262) {521183} [521255]: Position the control at the bottom or right of the cell Not recommended.
(2265) {521390} [521453]: Resize the control to fill the cell horizontally or vertically.
(2266) {521454} [521470]: Not recommended.
(2269) {521595} [521639]: Position the control at the top of the cell.
(2270) {521640} [521656]: Not recommended.
(2273) {521932} [521948]: Not recommended.
(2276) {522208} [522224]: Not recommended.
(2279) {522478} [522494]: Not recommended.
(2281) {522747} [522763]: Not recommended.
(2284) {523043} [523059]: Not recommended.
(2287) {523320} [523336]: Not recommended.
(2290) {523594} [523610]: Not recommended.
(2293) {523878} [523894]: Not recommended.
(2296) {524146} [524162]: Not recommended.
*****************************************************************
========================= CLASS #278 =============================
(2236) {516830} [517143]: The new width will be "preferred width + delta" where delta is the extra horizontal space divided by the number of grabbing columns.&lt;/li&gt; &lt;li&gt;If there is not enough horizontal space available in the parent, the cell will shrink until it reaches its minimum width as specified by GridData.minimumWidth.
(2240) {518335} [518645]: The new height will be "preferred height + delta" where delta is the extra vertical space divided by the number of grabbing rows.&lt;/li&gt; &lt;li&gt;If there is not enough vertical space available in the parent, the cell will shrink until it reaches its minimum height as specified by GridData.minimumHeight.
*****************************************************************
========================= CLASS #279 =============================
(2237) {517144} [517617]: The new width will be the maximum of "minimumWidth" and "preferred width - delta", where delta is the amount of space missing divided by the number of grabbing columns.&lt;/li&gt; &lt;li&gt;If the parent is packed, the cell will be its preferred width as specified by GridData.widthHint.&lt;/li&gt; &lt;li&gt;If the control spans multiple columns and there are no other grabbing controls in any of the spanned columns, the last column in the span will grab the extra space.
(2241) {518646} [519112]: The new height will be the maximum of "minimumHeight" and "preferred height - delta", where delta is the amount of space missing divided by the number of grabbing rows.&lt;/li&gt; &lt;li&gt;If the parent is packed, the cell will be its preferred height as specified by GridData.heightHint.&lt;/li&gt; &lt;li&gt;If the control spans multiple rows and there are no other grabbing controls in any of the spanned rows, the last row in the span will grab the extra space.
*****************************************************************
========================= CLASS #280 =============================
(2238) {517619} [518076]: If there is at least one other grabbing control in the span, the grabbing will be spread over the columns already marked as grabExcessHorizontalSpace.&lt;/li&gt; &lt;/ul&gt; * &lt;p&gt;The default value is false.&lt;/p&gt; * @see GridData#minimumWidth @see GridData#widthHint public boolean grabExcessHorizontalSpace = false; &lt;p&gt;grabExcessVerticalSpace specifies whether the height of the cell changes depending on the size of the parent Composite.
(2242) {519114} [519489]: If there is at least one other grabbing control in the span, the grabbing will be spread over the rows already marked as grabExcessVerticalSpace.&lt;/li&gt; &lt;/ul&gt; * &lt;p&gt;The default value is false.&lt;/p&gt; * @see GridData#minimumHeight @see GridData#heightHint public boolean grabExcessVerticalSpace = false; minimumWidth specifies the minimum width in pixels.
(2508) {565302} [565375]: &lt;/p&gt;&lt;p&gt; The default is -1 which means 'no transparent pixel'.
(2512) {565653} [565728]: &lt;/p&gt;&lt;p&gt; The default is null which means 'no transparency mask'.
(2520) {566513} [566666]: &lt;/p&gt;&lt;p&gt; The default is -1 which means 'no global alpha value' &lt;/p&gt; public int alpha; The type of file from which the image was read.
*****************************************************************
========================= CLASS #281 =============================
(2243) {519491} [519552]: This value applies only if grabExcessHorizontalSpace is true.
(2247) {519909} [519968]: This value applies only if grabExcessVerticalSpace is true.
*****************************************************************
========================= CLASS #282 =============================
(2244) {519553} [519714]: A value of SWT.DEFAULT means that the minimum width will be the result of Control.computeSize(int, int, boolean) where wHint is determined by GridData.widthHint.
(2248) {519970} [520133]: A value of SWT.DEFAULT means that the minimum height will be the result of Control.computeSize(int, int, boolean) where hHint is determined by GridData.heightHint.
*****************************************************************
========================= CLASS #283 =============================
(2250) {520160} [520362]: * @since 3.1 @see Control#computeSize(int, int, boolean) @see GridData#heightHint public int minimumHeight = 0; exclude informs the layout to ignore this control when sizing and positioning controls.
(3823) {889455} [889648]: * @see org.eclipse.swt.widgets.Control#computeSize(int, int, boolean) public int height = SWT.DEFAULT; exclude informs the layout to ignore this control when sizing and positioning controls.
*****************************************************************
========================= CLASS #284 =============================
(2258) {520876} [520980]: public static final int BEGINNING = SWT.BEGINNING; Value for horizontalAlignment or verticalAlignment.
(2261) {521093} [521182]: public static final int CENTER = 2; Value for horizontalAlignment or verticalAlignment.
(2264) {521303} [521389]: public static final int END = 3; Value for horizontalAlignment or verticalAlignment.
*****************************************************************
========================= CLASS #285 =============================
(2268) {521494} [521594]: public static final int FILL = SWT.FILL; Style bit for &lt;code&gt;new GridData(int)&lt;/code&gt;.
(2272) {521747} [521931]: public static final int VERTICAL_ALIGN_BEGINNING = 1 &lt;&lt; 1; Style bit for &lt;code&gt;new GridData(int)&lt;/code&gt; to position the control in the vertical center of the cell.
(2275) {522036} [522207]: public static final int VERTICAL_ALIGN_CENTER = 1 &lt;&lt; 2; Style bit for &lt;code&gt;new GridData(int)&lt;/code&gt; to position the control at the bottom of the cell.
(2278) {522309} [522477]: public static final int VERTICAL_ALIGN_END = 1 &lt;&lt; 3; Style bit for &lt;code&gt;new GridData(int)&lt;/code&gt; to resize the control to fill the cell vertically.
(2280) {522495} [522746]: Use &lt;code&gt;new GridData(int, SWT.FILL, boolean, boolean)&lt;/code&gt; instead public static final int VERTICAL_ALIGN_FILL = 1 &lt;&lt; 4; Style bit for &lt;code&gt;new GridData(int)&lt;/code&gt; to position the control at the left of the cell.
(2283) {522854} [523042]: public static final int HORIZONTAL_ALIGN_BEGINNING = 1 &lt;&lt; 5; Style bit for &lt;code&gt;new GridData(int)&lt;/code&gt; to position the control in the horizontal center of the cell.
(2286) {523147} [523319]: public static final int HORIZONTAL_ALIGN_CENTER = 1 &lt;&lt; 6; Style bit for &lt;code&gt;new GridData(int)&lt;/code&gt; to position the control at the right of the cell.
(2289) {523421} [523593]: public static final int HORIZONTAL_ALIGN_END = 1 &lt;&lt; 7; Style bit for &lt;code&gt;new GridData(int)&lt;/code&gt; to resize the control to fill the cell horizontally.
(2292) {523696} [523877]: public static final int HORIZONTAL_ALIGN_FILL = 1 &lt;&lt; 8; Style bit for &lt;code&gt;new GridData(int)&lt;/code&gt; to resize the control to fit the remaining horizontal space.
(2295) {523972} [524145]: public static final int GRAB_HORIZONTAL = 1 &lt;&lt; 9; Style bit for &lt;code&gt;new GridData(int)&lt;/code&gt; to resize the control to fit the remaining vertical space.
(2298) {524240} [524444]: public static final int GRAB_VERTICAL = 1 &lt;&lt; 10; Style bit for &lt;code&gt;new GridData(int)&lt;/code&gt; to resize the control to fill the cell vertically and to fit the remaining vertical space.
(2301) {524596} [524826]: public static final int FILL_VERTICAL = VERTICAL_ALIGN_FILL | GRAB_VERTICAL; Style bit for &lt;code&gt;new GridData(int)&lt;/code&gt; to resize the control to fill the cell horizontally and to fit the remaining horizontal space.
(2304) {524984} [525248]: public static final int FILL_HORIZONTAL = HORIZONTAL_ALIGN_FILL | GRAB_HORIZONTAL; Style bit for &lt;code&gt;new GridData(int)&lt;/code&gt; to resize the control to fill the cell horizontally and vertically and to fit the remaining horizontal and vertical space.
*****************************************************************
========================= CLASS #286 =============================
(2311) {525926} [526569]: @param horizontalAlignment how control will be positioned horizontally within a cell, one of: SWT.BEGINNING (or SWT.LEFT), SWT.CENTER, SWT.END (or SWT.RIGHT), or SWT.FILL @param verticalAlignment how control will be positioned vertically within a cell, one of: SWT.BEGINNING (or SWT.TOP), SWT.CENTER, SWT.END (or SWT.BOTTOM), or SWT.FILL @param grabExcessHorizontalSpace whether cell will be made wide enough to fit the remaining horizontal space @param grabExcessVerticalSpace whether cell will be made high enough to fit the remaining vertical space @since 3.0 ------------ Constructs a new instance of GridData according to the parameters.
(2312) {526571} [527367]: @param horizontalAlignment how control will be positioned horizontally within a cell, one of: SWT.BEGINNING (or SWT.LEFT), SWT.CENTER, SWT.END (or SWT.RIGHT), or SWT.FILL @param verticalAlignment how control will be positioned vertically within a cell, one of: SWT.BEGINNING (or SWT.TOP), SWT.CENTER, SWT.END (or SWT.BOTTOM), or SWT.FILL @param grabExcessHorizontalSpace whether cell will be made wide enough to fit the remaining horizontal space @param grabExcessVerticalSpace whether cell will be made high enough to fit the remaining vertical space @param horizontalSpan the number of column cells that the control will take up @param verticalSpan the number of row cells that the control will take up @since 3.0 ------------ Constructs a new instance of GridData according to the parameters.
*****************************************************************
========================= CLASS #287 =============================
(2323) {529559} [529660]: If numColumns has a value less than 1, the layout will not set the size and position of any controls.
(2340) {531643} [531744]: If numColumns has a value less than 1, the layout will not set the size and position of any controls.
*****************************************************************
========================= CLASS #288 =============================
(2346) {532570} [532666]: To create a group with the default shadow style for the platform, do not specify a shadow style.
(2835) {688690} [688796]: To create a separator label with the default shadow style for the platform, do not specify a shadow style.
*****************************************************************
========================= CLASS #289 =============================
(2359) {535382} [535496]: When the user presses a key sequence that matches the mnemonic, focus is assigned to the first child of the group.
(2858) {693926} [694046]: When the user presses a key sequence that matches the mnemonic, focus is assigned to the control that follows the label.
(2934) {708107} [708223]: When the user presses a key sequence that matches the mnemonic, focus is assigned to the link that follows the text.
*****************************************************************
========================= CLASS #290 =============================
(2398) {542826} [543219]: The result may be drawn upon by creating a GC and using any of its drawing operations, as shown in the following example: &lt;pre&gt; Image i = new Image(device, width, height); GC gc = new GC(i); gc.drawRectangle(0, 0, 50, 50); gc.dispose(); &lt;/pre&gt; &lt;p&gt; Note: Some platforms may have a limitation on the size of image that can be created (size depends on width, height, and depth).
(2404) {545905} [546300]: The result may be drawn upon by creating a GC and using any of its drawing operations, as shown in the following example: &lt;pre&gt; Image i = new Image(device, boundsRectangle); GC gc = new GC(i); gc.drawRectangle(0, 0, 50, 50); gc.dispose(); &lt;/pre&gt; &lt;p&gt; Note: Some platforms may have a limitation on the size of image that can be created (size depends on width, height, and depth).
*****************************************************************
========================= CLASS #291 =============================
(2399) {543220} [543292]: For example, Windows 95, 98, and ME do not allow images larger than 16M.
(2405) {546301} [546373]: For example, Windows 95, 98, and ME do not allow images larger than 16M.
*****************************************************************
========================= CLASS #292 =============================
(2412) {548154} [548285]: &lt;p&gt; The mask image should contain white wherever the icon is to be visible, and black wherever the icon is to be transparent.
(2413) {548286} [548376]: In addition, the source image should contain black wherever the icon is to be transparent.
*****************************************************************
========================= CLASS #293 =============================
(2416) {549184} [549296]: Throws an error if an error occurs while loading the image, or if the result is an image of an unsupported type.
(2423) {551157} [551269]: Throws an error if an error occurs while loading the image, or if the result is an image of an unsupported type.
(2428) {552562} [552674]: Throws an error if an error occurs while loading the image, or if the result is an image of an unsupported type.
(2431) {553977} [554089]: Throws an error if an error occurs while loading the image, or if the result is an image of an unsupported type.
(2531) {571235} [571335]: Throws an error if an error occurs while loading the image, or if the image has an unsupported type.
(2537) {572751} [572845]: Throws an error if an error occurs loading the image, or if the image has an unsupported type.
*****************************************************************
========================= CLASS #294 =============================
(2417) {549298} [549365]: Application code is still responsible for closing the input stream.
(2532) {571337} [571404]: Application code is still responsible for closing the input stream.
*****************************************************************
========================= CLASS #295 =============================
(2418) {549366} [549454]: &lt;p&gt; This constructor is provided for convenience when loading a single image only.
(2424) {551270} [551358]: &lt;p&gt; This constructor is provided for convenience when loading a single image only.
(2429) {552675} [552765]: &lt;p&gt; This constructor is provided for convenience for loading image as per DPI level.
(2432) {554090} [554180]: &lt;p&gt; This constructor is provided for convenience for loading image as per DPI level.
(2533) {571405} [571493]: &lt;p&gt; This constructor is provided for convenience when loading a single image only.
(2538) {572846} [572934]: &lt;p&gt; This constructor is provided for convenience when loading a single image only.
*****************************************************************
========================= CLASS #296 =============================
(2419) {549455} [549529]: If the stream contains multiple images, only the first one will be loaded.
(2425) {551359} [551439]: If the specified file contains multiple images, only the first one will be used.
(2534) {571494} [571568]: If the stream contains multiple images, only the first one will be loaded.
(2539) {572935} [573007]: If the file contains multiple images, only the first one will be loaded.
*****************************************************************
========================= CLASS #297 =============================
(2438) {555933} [556064]: &lt;p&gt; There are certain uses of Images that do not support transparency (for example, setting an image into a button or label).
(2477) {560799} [560955]: &lt;p&gt; There are certain uses of &lt;code&gt;Images&lt;/code&gt; that do not support transparency (for example, setting an image into a button or label).
*****************************************************************
========================= CLASS #298 =============================
(2439) {556065} [556213]: In these cases, it may be desired to simulate transparency by using the background color of the widget to paint the transparent pixels of the image.
(2478) {560956} [561104]: In these cases, it may be desired to simulate transparency by using the background color of the widget to paint the transparent pixels of the image.
*****************************************************************
========================= CLASS #299 =============================
(2443) {556629} [556719]: The rectangle will always have x and y values of 0, and the width and height of the image.
(2446) {557042} [557142]: The rectangle will always have x and y values of 0, and the width and height of the image in pixels.
*****************************************************************
========================= CLASS #300 =============================
(2500) {564623} [564737]: &lt;p&gt; If one scanline of the image is not a multiple of this number, it will be padded with zeros until it is.
(2514) {565831} [565957]: &lt;p&gt; If one scanline of the transparency mask is not a multiple of this number, it will be padded with zeros until it is.
*****************************************************************
========================= CLASS #301 =============================
(2503) {564864} [564931]: &lt;/p&gt; public int bytesPerLine; The pixel data of the image.
(2515) {565958} [566020]: &lt;/p&gt; public int maskPad; The alpha data of the image.
*****************************************************************
========================= CLASS #302 =============================
(2511) {565560} [565652]: The number of bytes per scanline is '((width + 7) / 8 + (maskPad - 1)) / maskPad * maskPad'.
(2517) {566174} [566218]: The number of bytes per scanline is 'width'.
*****************************************************************
========================= CLASS #303 =============================
(2543) {573783} [573855]: &lt;p&gt; This method is for internal use, and is not described further.
(2547) {574120} [574192]: &lt;p&gt; This method is for internal use, and is not described further.
(2552) {574612} [574695]: &lt;/p&gt; &lt;p&gt; This method is for internal use, and is not described further.
*****************************************************************
========================= CLASS #304 =============================
(2587) {585055} [587246]: &lt;/p&gt; @param op the blitter operation: a combination of BLIT_xxx flags (see BLIT_xxx constants) @param srcData the source byte array containing image data @param srcDepth the source depth: one of 8, 16, 24, 32 @param srcStride the source number of bytes per line @param srcOrder the source byte ordering: one of MSB_FIRST or LSB_FIRST; ignored if srcDepth is not 16 or 32 @param srcX the top-left x-coord of the source blit region @param srcY the top-left y-coord of the source blit region @param srcWidth the width of the source blit region @param srcHeight the height of the source blit region @param srcRedMask the source red channel mask @param srcGreenMask the source green channel mask @param srcBlueMask the source blue channel mask @param alphaMode the alpha blending or mask mode, may be an integer 0-255 for global alpha; ignored if BLIT_ALPHA not specified in the blitter operations (see ALPHA_MODE_xxx constants) @param alphaData the alpha blending or mask data, varies depending on the value of alphaMode and sometimes ignored @param alphaStride the alpha data number of bytes per line @param alphaX the top-left x-coord of the alpha blit region @param alphaY the top-left y-coord of the alpha blit region @param destData the destination byte array containing image data @param destDepth the destination depth: one of 8, 16, 24, 32 @param destStride the destination number of bytes per line @param destOrder the destination byte ordering: one of MSB_FIRST or LSB_FIRST; ignored if destDepth is not 16 or 32 @param destX the top-left x-coord of the destination blit region @param destY the top-left y-coord of the destination blit region @param destWidth the width of the destination blit region @param destHeight the height of the destination blit region @param destRedMask the destination red channel mask @param destGreenMask the destination green channel mask @param destBlueMask the destination blue channel mask @param flipX if true the resulting image is flipped along the vertical axis @param flipY if true the resulting image is flipped along the horizontal axis ------------ Prepare scaling data ***/ final int dwm1 = destWidth - 1; final int sfxi = (dwm1 != 0) ?
(2600) {602993} [605248]: &lt;/p&gt; @param op the blitter operation: a combination of BLIT_xxx flags (see BLIT_xxx constants) @param srcData the source byte array containing image data @param srcDepth the source depth: one of 1, 2, 4, 8 @param srcStride the source number of bytes per line @param srcOrder the source byte ordering: one of MSB_FIRST or LSB_FIRST; ignored if srcDepth is not 1 @param srcX the top-left x-coord of the source blit region @param srcY the top-left y-coord of the source blit region @param srcWidth the width of the source blit region @param srcHeight the height of the source blit region @param srcReds the source palette red component intensities @param srcGreens the source palette green component intensities @param srcBlues the source palette blue component intensities @param alphaMode the alpha blending or mask mode, may be an integer 0-255 for global alpha; ignored if BLIT_ALPHA not specified in the blitter operations (see ALPHA_MODE_xxx constants) @param alphaData the alpha blending or mask data, varies depending on the value of alphaMode and sometimes ignored @param alphaStride the alpha data number of bytes per line @param alphaX the top-left x-coord of the alpha blit region @param alphaY the top-left y-coord of the alpha blit region @param destData the destination byte array containing image data @param destDepth the destination depth: one of 1, 2, 4, 8 @param destStride the destination number of bytes per line @param destOrder the destination byte ordering: one of MSB_FIRST or LSB_FIRST; ignored if destDepth is not 1 @param destX the top-left x-coord of the destination blit region @param destY the top-left y-coord of the destination blit region @param destWidth the width of the destination blit region @param destHeight the height of the destination blit region @param destReds the destination palette red component intensities @param destGreens the destination palette green component intensities @param destBlues the destination palette blue component intensities @param flipX if true the resulting image is flipped along the vertical axis @param flipY if true the resulting image is flipped along the horizontal axis ------------ Prepare scaling data ***/ final int dwm1 = destWidth - 1; final int sfxi = (dwm1 != 0) ?
(2624) {633841} [636064]: &lt;/p&gt; @param op the blitter operation: a combination of BLIT_xxx flags (see BLIT_xxx constants) @param srcData the source byte array containing image data @param srcDepth the source depth: one of 8, 16, 24, 32 @param srcStride the source number of bytes per line @param srcOrder the source byte ordering: one of MSB_FIRST or LSB_FIRST; ignored if srcDepth is not 16 or 32 @param srcX the top-left x-coord of the source blit region @param srcY the top-left y-coord of the source blit region @param srcWidth the width of the source blit region @param srcHeight the height of the source blit region @param srcRedMask the source red channel mask @param srcGreenMask the source green channel mask @param srcBlueMask the source blue channel mask @param alphaMode the alpha blending or mask mode, may be an integer 0-255 for global alpha; ignored if BLIT_ALPHA not specified in the blitter operations (see ALPHA_MODE_xxx constants) @param alphaData the alpha blending or mask data, varies depending on the value of alphaMode and sometimes ignored @param alphaStride the alpha data number of bytes per line @param alphaX the top-left x-coord of the alpha blit region @param alphaY the top-left y-coord of the alpha blit region @param destData the destination byte array containing image data @param destDepth the destination depth: one of 1, 2, 4, 8 @param destStride the destination number of bytes per line @param destOrder the destination byte ordering: one of MSB_FIRST or LSB_FIRST; ignored if destDepth is not 1 @param destX the top-left x-coord of the destination blit region @param destY the top-left y-coord of the destination blit region @param destWidth the width of the destination blit region @param destHeight the height of the destination blit region @param destReds the destination palette red component intensities @param destGreens the destination palette green component intensities @param destBlues the destination palette blue component intensities @param flipX if true the resulting image is flipped along the vertical axis @param flipY if true the resulting image is flipped along the horizontal axis ------------ Prepare scaling data ***/ final int dwm1 = destWidth - 1; final int sfxi = (dwm1 != 0) ?
*****************************************************************
========================= CLASS #305 =============================
(2588) {587247} [587364]: (int)((((long)srcWidth &lt;&lt; 16) - 1) / dwm1) : 0; final int dhm1 = destHeight - 1; final int sfyi = (dhm1 != 0) ?
(2601) {605249} [605366]: (int)((((long)srcWidth &lt;&lt; 16) - 1) / dwm1) : 0; final int dhm1 = destHeight - 1; final int sfyi = (dhm1 != 0) ?
(2613) {624190} [624307]: (int)((((long)srcWidth &lt;&lt; 16) - 1) / dwm1) : 0; final int dhm1 = destHeight - 1; final int sfyi = (dhm1 != 0) ?
(2625) {636065} [636182]: (int)((((long)srcWidth &lt;&lt; 16) - 1) / dwm1) : 0; final int dhm1 = destHeight - 1; final int sfyi = (dhm1 != 0) ?
*****************************************************************
========================= CLASS #306 =============================
(2589) {587365} [587598]: (int)((((long)srcHeight &lt;&lt; 16) - 1) / dhm1) : 0; Prepare source-related data ***/ final int sbpp, stype; switch (srcDepth) { case 8: sbpp = 1; stype = TYPE_GENERIC_8; break; case 16: sbpp = 2; stype = (srcOrder == MSB_FIRST) ?
(2602) {605367} [605714]: (int)((((long)srcHeight &lt;&lt; 16) - 1) / dhm1) : 0; Prepare source-related data ***/ final int stype; switch (srcDepth) { case 8: stype = TYPE_INDEX_8; break; case 4: srcStride &lt;&lt;= 1; stype = TYPE_INDEX_4; break; case 2: srcStride &lt;&lt;= 2; stype = TYPE_INDEX_2; break; case 1: srcStride &lt;&lt;= 3; stype = (srcOrder == MSB_FIRST) ?
(2614) {624308} [624655]: (int)((((long)srcHeight &lt;&lt; 16) - 1) / dhm1) : 0; Prepare source-related data ***/ final int stype; switch (srcDepth) { case 8: stype = TYPE_INDEX_8; break; case 4: srcStride &lt;&lt;= 1; stype = TYPE_INDEX_4; break; case 2: srcStride &lt;&lt;= 2; stype = TYPE_INDEX_2; break; case 1: srcStride &lt;&lt;= 3; stype = (srcOrder == MSB_FIRST) ?
(2626) {636183} [636416]: (int)((((long)srcHeight &lt;&lt; 16) - 1) / dhm1) : 0; Prepare source-related data ***/ final int sbpp, stype; switch (srcDepth) { case 8: sbpp = 1; stype = TYPE_GENERIC_8; break; case 16: sbpp = 2; stype = (srcOrder == MSB_FIRST) ?
*****************************************************************
========================= CLASS #307 =============================
(2590) {587599} [587752]: TYPE_GENERIC_16_MSB : TYPE_GENERIC_16_LSB; break; case 24: sbpp = 3; stype = TYPE_GENERIC_24; break; case 32: sbpp = 4; stype = (srcOrder == MSB_FIRST) ?
(2592) {588111} [588265]: TYPE_GENERIC_16_MSB : TYPE_GENERIC_16_LSB; break; case 24: dbpp = 3; dtype = TYPE_GENERIC_24; break; case 32: dbpp = 4; dtype = (destOrder == MSB_FIRST) ?
(2616) {625001} [625155]: TYPE_GENERIC_16_MSB : TYPE_GENERIC_16_LSB; break; case 24: dbpp = 3; dtype = TYPE_GENERIC_24; break; case 32: dbpp = 4; dtype = (destOrder == MSB_FIRST) ?
(2627) {636417} [636570]: TYPE_GENERIC_16_MSB : TYPE_GENERIC_16_LSB; break; case 24: sbpp = 3; stype = TYPE_GENERIC_24; break; case 32: sbpp = 4; stype = (srcOrder == MSB_FIRST) ?
*****************************************************************
========================= CLASS #308 =============================
(2591) {587753} [588110]: TYPE_GENERIC_32_MSB : TYPE_GENERIC_32_LSB; break; default: //throw new IllegalArgumentException("Invalid source type"); return; } int spr = srcY * srcStride + srcX * sbpp; Prepare destination-related data ***/ final int dbpp, dtype; switch (destDepth) { case 8: dbpp = 1; dtype = TYPE_GENERIC_8; break; case 16: dbpp = 2; dtype = (destOrder == MSB_FIRST) ?
(2593) {588266} [588421]: TYPE_GENERIC_32_MSB : TYPE_GENERIC_32_LSB; break; default: //throw new IllegalArgumentException("Invalid destination type"); return; } int dpr = ((flipY) ?
(2603) {605715} [606176]: TYPE_INDEX_1_MSB : TYPE_INDEX_1_LSB; break; default: //throw new IllegalArgumentException("Invalid source type"); return; } int spr = srcY * srcStride + srcX; Prepare destination-related data ***/ final int dtype; switch (destDepth) { case 8: dtype = TYPE_INDEX_8; break; case 4: destStride &lt;&lt;= 1; dtype = TYPE_INDEX_4; break; case 2: destStride &lt;&lt;= 2; dtype = TYPE_INDEX_2; break; case 1: destStride &lt;&lt;= 3; dtype = (destOrder == MSB_FIRST) ?
(2604) {606177} [606321]: TYPE_INDEX_1_MSB : TYPE_INDEX_1_LSB; break; default: //throw new IllegalArgumentException("Invalid source type"); return; } int dpr = ((flipY) ?
(2615) {624656} [625000]: TYPE_INDEX_1_MSB : TYPE_INDEX_1_LSB; break; default: //throw new IllegalArgumentException("Invalid source type"); return; } int spr = srcY * srcStride + srcX; Prepare destination-related data ***/ final int dbpp, dtype; switch (destDepth) { case 8: dbpp = 1; dtype = TYPE_GENERIC_8; break; case 16: dbpp = 2; dtype = (destOrder == MSB_FIRST) ?
(2617) {625156} [625311]: TYPE_GENERIC_32_MSB : TYPE_GENERIC_32_LSB; break; default: //throw new IllegalArgumentException("Invalid destination type"); return; } int dpr = ((flipY) ?
(2628) {636571} [637045]: TYPE_GENERIC_32_MSB : TYPE_GENERIC_32_LSB; break; default: //throw new IllegalArgumentException("Invalid source type"); return; } int spr = srcY * srcStride + srcX * sbpp; Prepare destination-related data ***/ final int dtype; switch (destDepth) { case 8: dtype = TYPE_INDEX_8; break; case 4: destStride &lt;&lt;= 1; dtype = TYPE_INDEX_4; break; case 2: destStride &lt;&lt;= 2; dtype = TYPE_INDEX_2; break; case 1: destStride &lt;&lt;= 3; dtype = (destOrder == MSB_FIRST) ?
(2629) {637046} [637190]: TYPE_INDEX_1_MSB : TYPE_INDEX_1_LSB; break; default: //throw new IllegalArgumentException("Invalid source type"); return; } int dpr = ((flipY) ?
*****************************************************************
========================= CLASS #309 =============================
(2594) {588422} [588469]: destY + dhm1 : destY) * destStride + ((flipX) ?
(2605) {606322} [606369]: destY + dhm1 : destY) * destStride + ((flipX) ?
(2618) {625312} [625359]: destY + dhm1 : destY) * destStride + ((flipX) ?
(2630) {637191} [637238]: destY + dhm1 : destY) * destStride + ((flipX) ?
*****************************************************************
========================= CLASS #310 =============================
(2595) {588470} [588527]: destX + dwm1 : destX) * dbpp; final int dprxi = (flipX) ?
(2606) {606370} [606420]: destX + dwm1 : destX); final int dprxi = (flipX) ?
(2619) {625360} [625417]: destX + dwm1 : destX) * dbpp; final int dprxi = (flipX) ?
(2631) {637239} [637289]: destX + dwm1 : destX); final int dprxi = (flipX) ?
*****************************************************************
========================= CLASS #311 =============================
(2596) {588528} [588569]: -dbpp : dbpp; final int dpryi = (flipY) ?
(2607) {606421} [606456]: -1 : 1; final int dpryi = (flipY) ?
(2620) {625418} [625459]: -dbpp : dbpp; final int dpryi = (flipY) ?
(2632) {637290} [637325]: -1 : 1; final int dpryi = (flipY) ?
*****************************************************************
========================= CLASS #312 =============================
(2597) {588570} [597986]: -destStride : destStride; Prepare special processing data ***/ int apr; if ((op &amp; BLIT_ALPHA) != 0) { switch (alphaMode) { case ALPHA_MASK_UNPACKED: case ALPHA_CHANNEL_SEPARATE: if (alphaData == null) alphaMode = 0x10000; apr = alphaY * alphaStride + alphaX; break; case ALPHA_MASK_PACKED: if (alphaData == null) alphaMode = 0x10000; alphaStride &lt;&lt;= 3; apr = alphaY * alphaStride + alphaX; break; case ALPHA_MASK_INDEX: //throw new IllegalArgumentException("Invalid alpha type"); return; case ALPHA_MASK_RGB: if (alphaData == null) alphaMode = 0x10000; apr = 0; break; default: alphaMode = (alphaMode &lt;&lt; 16) / 255; // prescale case ALPHA_CHANNEL_SOURCE: apr = 0; break; } } else { alphaMode = 0x10000; apr = 0; } Blit ***/ int dp = dpr; int sp = spr; if ((alphaMode == 0x10000) &amp;&amp; (stype == dtype) &amp;&amp; (srcRedMask == destRedMask) &amp;&amp; (srcGreenMask == destGreenMask) &amp;&amp; (srcBlueMask == destBlueMask) &amp;&amp; (srcAlphaMask == destAlphaMask)) { Fast blit (straight copy) ***/ switch (sbpp) { case 1: for (int dy = destHeight, sfy = sfyi; dy &gt; 0; --dy, sp = spr += (sfy &gt;&gt;&gt; 16) * srcStride, sfy = (sfy &amp; 0xffff) + sfyi, dp = dpr += dpryi) { for (int dx = destWidth, sfx = sfxi; dx &gt; 0; --dx, dp += dprxi, sfx = (sfx &amp; 0xffff) + sfxi) { destData[dp] = srcData[sp]; sp += (sfx &gt;&gt;&gt; 16); } } break; case 2: for (int dy = destHeight, sfy = sfyi; dy &gt; 0; --dy, sp = spr += (sfy &gt;&gt;&gt; 16) * srcStride, sfy = (sfy &amp; 0xffff) + sfyi, dp = dpr += dpryi) { for (int dx = destWidth, sfx = sfxi; dx &gt; 0; --dx, dp += dprxi, sfx = (sfx &amp; 0xffff) + sfxi) { destData[dp] = srcData[sp]; destData[dp + 1] = srcData[sp + 1]; sp += (sfx &gt;&gt;&gt; 16) * 2; } } break; case 3: for (int dy = destHeight, sfy = sfyi; dy &gt; 0; --dy, sp = spr += (sfy &gt;&gt;&gt; 16) * srcStride, sfy = (sfy &amp; 0xffff) + sfyi, dp = dpr += dpryi) { for (int dx = destWidth, sfx = sfxi; dx &gt; 0; --dx, dp += dprxi, sfx = (sfx &amp; 0xffff) + sfxi) { destData[dp] = srcData[sp]; destData[dp + 1] = srcData[sp + 1]; destData[dp + 2] = srcData[sp + 2]; sp += (sfx &gt;&gt;&gt; 16) * 3; } } break; case 4: for (int dy = destHeight, sfy = sfyi; dy &gt; 0; --dy, sp = spr += (sfy &gt;&gt;&gt; 16) * srcStride, sfy = (sfy &amp; 0xffff) + sfyi, dp = dpr += dpryi) { for (int dx = destWidth, sfx = sfxi; dx &gt; 0; --dx, dp += dprxi, sfx = (sfx &amp; 0xffff) + sfxi) { destData[dp] = srcData[sp]; destData[dp + 1] = srcData[sp + 1]; destData[dp + 2] = srcData[sp + 2]; destData[dp + 3] = srcData[sp + 3]; sp += (sfx &gt;&gt;&gt; 16) * 4; } } break; } return; } /*Fast 32 to 32 blit */ if (alphaMode == 0x10000 &amp;&amp; stype == TYPE_GENERIC_32_MSB &amp;&amp; dtype == TYPE_GENERIC_32_MSB) { if (srcRedMask == 0xFF00 &amp;&amp; srcGreenMask == 0xff0000 &amp;&amp; srcBlueMask == 0xff000000 &amp;&amp; destRedMask == 0xFF0000 &amp;&amp; destGreenMask == 0xff00 &amp;&amp; destBlueMask == 0xff) { for (int dy = destHeight, sfy = sfyi; dy &gt; 0; --dy, sp = spr += (sfy &gt;&gt;&gt; 16) * srcStride, sfy = (sfy &amp; 0xffff) + sfyi, dp = dpr += dpryi) { for (int dx = destWidth, sfx = sfxi; dx &gt; 0; --dx, dp += dprxi, sfx = (sfx &amp; 0xffff) + sfxi) { destData[dp] = srcData[sp + 3]; destData[dp + 1] = srcData[sp + 2]; destData[dp + 2] = srcData[sp + 1]; destData[dp + 3] = srcData[sp]; sp += (sfx &gt;&gt;&gt; 16) * 4; } } return; } } /*Fast 24 to 32 blit */ if (alphaMode == 0x10000 &amp;&amp; stype == TYPE_GENERIC_24 &amp;&amp; dtype == TYPE_GENERIC_32_MSB) { if (srcRedMask == 0xFF &amp;&amp; srcGreenMask == 0xff00 &amp;&amp; srcBlueMask == 0xff0000 &amp;&amp; destRedMask == 0xFF0000 &amp;&amp; destGreenMask == 0xff00 &amp;&amp; destBlueMask == 0xff) { for (int dy = destHeight, sfy = sfyi; dy &gt; 0; --dy, sp = spr += (sfy &gt;&gt;&gt; 16) * srcStride, sfy = (sfy &amp; 0xffff) + sfyi, dp = dpr += dpryi) { for (int dx = destWidth, sfx = sfxi; dx &gt; 0; --dx, dp += dprxi, sfx = (sfx &amp; 0xffff) + sfxi) { destData[dp] = 0; destData[dp + 1] = srcData[sp + 2]; destData[dp + 2] = srcData[sp + 1]; destData[dp + 3] = srcData[sp]; sp += (sfx &gt;&gt;&gt; 16) * 3; } } return; } } Comprehensive blit (apply transformations) ***/ final int srcRedShift = getChannelShift(srcRedMask); final byte[] srcReds = ANY_TO_EIGHT[getChannelWidth(srcRedMask, srcRedShift)]; final int srcGreenShift = getChannelShift(srcGreenMask); final byte[] srcGreens = ANY_TO_EIGHT[getChannelWidth(srcGreenMask, srcGreenShift)]; final int srcBlueShift = getChannelShift(srcBlueMask); final byte[] srcBlues = ANY_TO_EIGHT[getChannelWidth(srcBlueMask, srcBlueShift)]; final int srcAlphaShift = getChannelShift(srcAlphaMask); final byte[] srcAlphas = ANY_TO_EIGHT[getChannelWidth(srcAlphaMask, srcAlphaShift)]; final int destRedShift = getChannelShift(destRedMask); final int destRedWidth = getChannelWidth(destRedMask, destRedShift); final byte[] destReds = ANY_TO_EIGHT[destRedWidth]; final int destRedPreShift = 8 - destRedWidth; final int destGreenShift = getChannelShift(destGreenMask); final int destGreenWidth = getChannelWidth(destGreenMask, destGreenShift); final byte[] destGreens = ANY_TO_EIGHT[destGreenWidth]; final int destGreenPreShift = 8 - destGreenWidth; final int destBlueShift = getChannelShift(destBlueMask); final int destBlueWidth = getChannelWidth(destBlueMask, destBlueShift); final byte[] destBlues = ANY_TO_EIGHT[destBlueWidth]; final int destBluePreShift = 8 - destBlueWidth; final int destAlphaShift = getChannelShift(destAlphaMask); final int destAlphaWidth = getChannelWidth(destAlphaMask, destAlphaShift); final byte[] destAlphas = ANY_TO_EIGHT[destAlphaWidth]; final int destAlphaPreShift = 8 - destAlphaWidth; int ap = apr, alpha = alphaMode; int r = 0, g = 0, b = 0, a = 0; int rq = 0, gq = 0, bq = 0, aq = 0; for (int dy = destHeight, sfy = sfyi; dy &gt; 0; --dy, sp = spr += (sfy &gt;&gt;&gt; 16) * srcStride, ap = apr += (sfy &gt;&gt;&gt; 16) * alphaStride, sfy = (sfy &amp; 0xffff) + sfyi, dp = dpr += dpryi) { for (int dx = destWidth, sfx = sfxi; dx &gt; 0; --dx, dp += dprxi, sfx = (sfx &amp; 0xffff) + sfxi) { READ NEXT PIXEL ***/ switch (stype) { case TYPE_GENERIC_8: { final int data = srcData[sp] &amp; 0xff; sp += (sfx &gt;&gt;&gt; 16); r = srcReds[(data &amp; srcRedMask) &gt;&gt;&gt; srcRedShift] &amp; 0xff; g = srcGreens[(data &amp; srcGreenMask) &gt;&gt;&gt; srcGreenShift] &amp; 0xff; b = srcBlues[(data &amp; srcBlueMask) &gt;&gt;&gt; srcBlueShift] &amp; 0xff; a = srcAlphas[(data &amp; srcAlphaMask) &gt;&gt;&gt; srcAlphaShift] &amp; 0xff; } break; case TYPE_GENERIC_16_MSB: { final int data = ((srcData[sp] &amp; 0xff) &lt;&lt; 8) | (srcData[sp + 1] &amp; 0xff); sp += (sfx &gt;&gt;&gt; 16) * 2; r = srcReds[(data &amp; srcRedMask) &gt;&gt;&gt; srcRedShift] &amp; 0xff; g = srcGreens[(data &amp; srcGreenMask) &gt;&gt;&gt; srcGreenShift] &amp; 0xff; b = srcBlues[(data &amp; srcBlueMask) &gt;&gt;&gt; srcBlueShift] &amp; 0xff; a = srcAlphas[(data &amp; srcAlphaMask) &gt;&gt;&gt; srcAlphaShift] &amp; 0xff; } break; case TYPE_GENERIC_16_LSB: { final int data = ((srcData[sp + 1] &amp; 0xff) &lt;&lt; 8) | (srcData[sp] &amp; 0xff); sp += (sfx &gt;&gt;&gt; 16) * 2; r = srcReds[(data &amp; srcRedMask) &gt;&gt;&gt; srcRedShift] &amp; 0xff; g = srcGreens[(data &amp; srcGreenMask) &gt;&gt;&gt; srcGreenShift] &amp; 0xff; b = srcBlues[(data &amp; srcBlueMask) &gt;&gt;&gt; srcBlueShift] &amp; 0xff; a = srcAlphas[(data &amp; srcAlphaMask) &gt;&gt;&gt; srcAlphaShift] &amp; 0xff; } break; case TYPE_GENERIC_24: { final int data = (( ((srcData[sp] &amp; 0xff) &lt;&lt; 8) | (srcData[sp + 1] &amp; 0xff)) &lt;&lt; 8) | (srcData[sp + 2] &amp; 0xff); sp += (sfx &gt;&gt;&gt; 16) * 3; r = srcReds[(data &amp; srcRedMask) &gt;&gt;&gt; srcRedShift] &amp; 0xff; g = srcGreens[(data &amp; srcGreenMask) &gt;&gt;&gt; srcGreenShift] &amp; 0xff; b = srcBlues[(data &amp; srcBlueMask) &gt;&gt;&gt; srcBlueShift] &amp; 0xff; a = srcAlphas[(data &amp; srcAlphaMask) &gt;&gt;&gt; srcAlphaShift] &amp; 0xff; } break; case TYPE_GENERIC_32_MSB: { final int data = (( (( ((srcData[sp] &amp; 0xff) &lt;&lt; 8) | (srcData[sp + 1] &amp; 0xff)) &lt;&lt; 8) | (srcData[sp + 2] &amp; 0xff)) &lt;&lt; 8) | (srcData[sp + 3] &amp; 0xff); sp += (sfx &gt;&gt;&gt; 16) * 4; r = srcReds[(data &amp; srcRedMask) &gt;&gt;&gt; srcRedShift] &amp; 0xff; g = srcGreens[(data &amp; srcGreenMask) &gt;&gt;&gt; srcGreenShift] &amp; 0xff; b = srcBlues[(data &amp; srcBlueMask) &gt;&gt;&gt; srcBlueShift] &amp; 0xff; a = srcAlphas[(data &amp; srcAlphaMask) &gt;&gt;&gt; srcAlphaShift] &amp; 0xff; } break; case TYPE_GENERIC_32_LSB: { final int data = (( (( ((srcData[sp + 3] &amp; 0xff) &lt;&lt; 8) | (srcData[sp + 2] &amp; 0xff)) &lt;&lt; 8) | (srcData[sp + 1] &amp; 0xff)) &lt;&lt; 8) | (srcData[sp] &amp; 0xff); sp += (sfx &gt;&gt;&gt; 16) * 4; r = srcReds[(data &amp; srcRedMask) &gt;&gt;&gt; srcRedShift] &amp; 0xff; g = srcGreens[(data &amp; srcGreenMask) &gt;&gt;&gt; srcGreenShift] &amp; 0xff; b = srcBlues[(data &amp; srcBlueMask) &gt;&gt;&gt; srcBlueShift] &amp; 0xff; a = srcAlphas[(data &amp; srcAlphaMask) &gt;&gt;&gt; srcAlphaShift] &amp; 0xff; } break; } DO SPECIAL PROCESSING IF REQUIRED ***/ switch (alphaMode) { case ALPHA_CHANNEL_SEPARATE: alpha = ((alphaData[ap] &amp; 0xff) &lt;&lt; 16) / 255; ap += (sfx &gt;&gt; 16); break; case ALPHA_CHANNEL_SOURCE: alpha = (a &lt;&lt; 16) / 255; break; case ALPHA_MASK_UNPACKED: alpha = (alphaData[ap] != 0) ?
(2598) {597987} [602858]: 0x10000 : 0; ap += (sfx &gt;&gt; 16); break; case ALPHA_MASK_PACKED: alpha = (alphaData[ap &gt;&gt; 3] &lt;&lt; ((ap &amp; 7) + 9)) &amp; 0x10000; ap += (sfx &gt;&gt; 16); break; case ALPHA_MASK_RGB: alpha = 0x10000; for (int i = 0; i &lt; alphaData.length; i += 3) { if ((r == alphaData[i]) &amp;&amp; (g == alphaData[i + 1]) &amp;&amp; (b == alphaData[i + 2])) { alpha = 0x0000; break; } } break; } if (alpha != 0x10000) { if (alpha == 0x0000) continue; switch (dtype) { case TYPE_GENERIC_8: { final int data = destData[dp] &amp; 0xff; rq = destReds[(data &amp; destRedMask) &gt;&gt;&gt; destRedShift] &amp; 0xff; gq = destGreens[(data &amp; destGreenMask) &gt;&gt;&gt; destGreenShift] &amp; 0xff; bq = destBlues[(data &amp; destBlueMask) &gt;&gt;&gt; destBlueShift] &amp; 0xff; aq = destAlphas[(data &amp; destAlphaMask) &gt;&gt;&gt; destAlphaShift] &amp; 0xff; } break; case TYPE_GENERIC_16_MSB: { final int data = ((destData[dp] &amp; 0xff) &lt;&lt; 8) | (destData[dp + 1] &amp; 0xff); rq = destReds[(data &amp; destRedMask) &gt;&gt;&gt; destRedShift] &amp; 0xff; gq = destGreens[(data &amp; destGreenMask) &gt;&gt;&gt; destGreenShift] &amp; 0xff; bq = destBlues[(data &amp; destBlueMask) &gt;&gt;&gt; destBlueShift] &amp; 0xff; aq = destAlphas[(data &amp; destAlphaMask) &gt;&gt;&gt; destAlphaShift] &amp; 0xff; } break; case TYPE_GENERIC_16_LSB: { final int data = ((destData[dp + 1] &amp; 0xff) &lt;&lt; 8) | (destData[dp] &amp; 0xff); rq = destReds[(data &amp; destRedMask) &gt;&gt;&gt; destRedShift] &amp; 0xff; gq = destGreens[(data &amp; destGreenMask) &gt;&gt;&gt; destGreenShift] &amp; 0xff; bq = destBlues[(data &amp; destBlueMask) &gt;&gt;&gt; destBlueShift] &amp; 0xff; aq = destAlphas[(data &amp; destAlphaMask) &gt;&gt;&gt; destAlphaShift] &amp; 0xff; } break; case TYPE_GENERIC_24: { final int data = (( ((destData[dp] &amp; 0xff) &lt;&lt; 8) | (destData[dp + 1] &amp; 0xff)) &lt;&lt; 8) | (destData[dp + 2] &amp; 0xff); rq = destReds[(data &amp; destRedMask) &gt;&gt;&gt; destRedShift] &amp; 0xff; gq = destGreens[(data &amp; destGreenMask) &gt;&gt;&gt; destGreenShift] &amp; 0xff; bq = destBlues[(data &amp; destBlueMask) &gt;&gt;&gt; destBlueShift] &amp; 0xff; aq = destAlphas[(data &amp; destAlphaMask) &gt;&gt;&gt; destAlphaShift] &amp; 0xff; } break; case TYPE_GENERIC_32_MSB: { final int data = (( (( ((destData[dp] &amp; 0xff) &lt;&lt; 8) | (destData[dp + 1] &amp; 0xff)) &lt;&lt; 8) | (destData[dp + 2] &amp; 0xff)) &lt;&lt; 8) | (destData[dp + 3] &amp; 0xff); rq = destReds[(data &amp; destRedMask) &gt;&gt;&gt; destRedShift] &amp; 0xff; gq = destGreens[(data &amp; destGreenMask) &gt;&gt;&gt; destGreenShift] &amp; 0xff; bq = destBlues[(data &amp; destBlueMask) &gt;&gt;&gt; destBlueShift] &amp; 0xff; aq = destAlphas[(data &amp; destAlphaMask) &gt;&gt;&gt; destAlphaShift] &amp; 0xff; } break; case TYPE_GENERIC_32_LSB: { final int data = (( (( ((destData[dp + 3] &amp; 0xff) &lt;&lt; 8) | (destData[dp + 2] &amp; 0xff)) &lt;&lt; 8) | (destData[dp + 1] &amp; 0xff)) &lt;&lt; 8) | (destData[dp] &amp; 0xff); rq = destReds[(data &amp; destRedMask) &gt;&gt;&gt; destRedShift] &amp; 0xff; gq = destGreens[(data &amp; destGreenMask) &gt;&gt;&gt; destGreenShift] &amp; 0xff; bq = destBlues[(data &amp; destBlueMask) &gt;&gt;&gt; destBlueShift] &amp; 0xff; aq = destAlphas[(data &amp; destAlphaMask) &gt;&gt;&gt; destAlphaShift] &amp; 0xff; } break; } // Perform alpha blending a = aq + ((a - aq) * alpha &gt;&gt; 16); r = rq + ((r - rq) * alpha &gt;&gt; 16); g = gq + ((g - gq) * alpha &gt;&gt; 16); b = bq + ((b - bq) * alpha &gt;&gt; 16); } WRITE NEXT PIXEL ***/ final int data = (r &gt;&gt;&gt; destRedPreShift &lt;&lt; destRedShift) | (g &gt;&gt;&gt; destGreenPreShift &lt;&lt; destGreenShift) | (b &gt;&gt;&gt; destBluePreShift &lt;&lt; destBlueShift) | (a &gt;&gt;&gt; destAlphaPreShift &lt;&lt; destAlphaShift); switch (dtype) { case TYPE_GENERIC_8: { destData[dp] = (byte) data; } break; case TYPE_GENERIC_16_MSB: { destData[dp] = (byte) (data &gt;&gt;&gt; 8); destData[dp + 1] = (byte) (data &amp; 0xff); } break; case TYPE_GENERIC_16_LSB: { destData[dp] = (byte) (data &amp; 0xff); destData[dp + 1] = (byte) (data &gt;&gt;&gt; 8); } break; case TYPE_GENERIC_24: { destData[dp] = (byte) (data &gt;&gt;&gt; 16); destData[dp + 1] = (byte) (data &gt;&gt;&gt; 8); destData[dp + 2] = (byte) (data &amp; 0xff); } break; case TYPE_GENERIC_32_MSB: { destData[dp] = (byte) (data &gt;&gt;&gt; 24); destData[dp + 1] = (byte) (data &gt;&gt;&gt; 16); destData[dp + 2] = (byte) (data &gt;&gt;&gt; 8); destData[dp + 3] = (byte) (data &amp; 0xff); } break; case TYPE_GENERIC_32_LSB: { destData[dp] = (byte) (data &amp; 0xff); destData[dp + 1] = (byte) (data &gt;&gt;&gt; 8); destData[dp + 2] = (byte) (data &gt;&gt;&gt; 16); destData[dp + 3] = (byte) (data &gt;&gt;&gt; 24); } break; } } } } Blits an index palette image into an index palette image.
(2609) {609119} [616518]: ditherEnabled)) { if ((stype == dtype) &amp;&amp; (alphaMode == 0x10000)) { Fast blit (copy w/ mapping) ***/ switch (stype) { case TYPE_INDEX_8: for (int dy = destHeight, sfy = sfyi; dy &gt; 0; --dy, sp = spr += (sfy &gt;&gt;&gt; 16) * srcStride, sfy = (sfy &amp; 0xffff) + sfyi, dp = dpr += dpryi) { for (int dx = destWidth, sfx = sfxi; dx &gt; 0; --dx, dp += dprxi, sfx = (sfx &amp; 0xffff) + sfxi) { destData[dp] = paletteMapping[srcData[sp] &amp; 0xff]; sp += (sfx &gt;&gt;&gt; 16); } } break; case TYPE_INDEX_4: for (int dy = destHeight, sfy = sfyi; dy &gt; 0; --dy, sp = spr += (sfy &gt;&gt;&gt; 16) * srcStride, sfy = (sfy &amp; 0xffff) + sfyi, dp = dpr += dpryi) { for (int dx = destWidth, sfx = sfxi; dx &gt; 0; --dx, dp += dprxi, sfx = (sfx &amp; 0xffff) + sfxi) { final int v; if ((sp &amp; 1) != 0) v = paletteMapping[srcData[sp &gt;&gt; 1] &amp; 0x0f]; else v = (srcData[sp &gt;&gt; 1] &gt;&gt;&gt; 4) &amp; 0x0f; sp += (sfx &gt;&gt;&gt; 16); if ((dp &amp; 1) != 0) destData[dp &gt;&gt; 1] = (byte)((destData[dp &gt;&gt; 1] &amp; 0xf0) | v); else destData[dp &gt;&gt; 1] = (byte)((destData[dp &gt;&gt; 1] &amp; 0x0f) | (v &lt;&lt; 4)); } } break; case TYPE_INDEX_2: for (int dy = destHeight, sfy = sfyi; dy &gt; 0; --dy, sp = spr += (sfy &gt;&gt;&gt; 16) * srcStride, sfy = (sfy &amp; 0xffff) + sfyi, dp = dpr += dpryi) { for (int dx = destWidth, sfx = sfxi; dx &gt; 0; --dx, dp += dprxi, sfx = (sfx &amp; 0xffff) + sfxi) { final int index = paletteMapping[(srcData[sp &gt;&gt; 2] &gt;&gt;&gt; (6 - (sp &amp; 3) * 2)) &amp; 0x03]; sp += (sfx &gt;&gt;&gt; 16); final int shift = 6 - (dp &amp; 3) * 2; destData[dp &gt;&gt; 2] = (byte)(destData[dp &gt;&gt; 2] &amp; ~(0x03 &lt;&lt; shift) | (index &lt;&lt; shift)); } } break; case TYPE_INDEX_1_MSB: for (int dy = destHeight, sfy = sfyi; dy &gt; 0; --dy, sp = spr += (sfy &gt;&gt;&gt; 16) * srcStride, sfy = (sfy &amp; 0xffff) + sfyi, dp = dpr += dpryi) { for (int dx = destWidth, sfx = sfxi; dx &gt; 0; --dx, dp += dprxi, sfx = (sfx &amp; 0xffff) + sfxi) { final int index = paletteMapping[(srcData[sp &gt;&gt; 3] &gt;&gt;&gt; (7 - (sp &amp; 7))) &amp; 0x01]; sp += (sfx &gt;&gt;&gt; 16); final int shift = 7 - (dp &amp; 7); destData[dp &gt;&gt; 3] = (byte)(destData[dp &gt;&gt; 3] &amp; ~(0x01 &lt;&lt; shift) | (index &lt;&lt; shift)); } } break; case TYPE_INDEX_1_LSB: for (int dy = destHeight, sfy = sfyi; dy &gt; 0; --dy, sp = spr += (sfy &gt;&gt;&gt; 16) * srcStride, sfy = (sfy &amp; 0xffff) + sfyi, dp = dpr += dpryi) { for (int dx = destWidth, sfx = sfxi; dx &gt; 0; --dx, dp += dprxi, sfx = (sfx &amp; 0xffff) + sfxi) { final int index = paletteMapping[(srcData[sp &gt;&gt; 3] &gt;&gt;&gt; (sp &amp; 7)) &amp; 0x01]; sp += (sfx &gt;&gt;&gt; 16); final int shift = dp &amp; 7; destData[dp &gt;&gt; 3] = (byte)(destData[dp &gt;&gt; 3] &amp; ~(0x01 &lt;&lt; shift) | (index &lt;&lt; shift)); } } break; } } else { Convert between indexed modes using mapping and mask ***/ for (int dy = destHeight, sfy = sfyi; dy &gt; 0; --dy, sp = spr += (sfy &gt;&gt;&gt; 16) * srcStride, sfy = (sfy &amp; 0xffff) + sfyi, dp = dpr += dpryi) { for (int dx = destWidth, sfx = sfxi; dx &gt; 0; --dx, dp += dprxi, sfx = (sfx &amp; 0xffff) + sfxi) { int index; READ NEXT PIXEL ***/ switch (stype) { case TYPE_INDEX_8: index = srcData[sp] &amp; 0xff; sp += (sfx &gt;&gt;&gt; 16); break; case TYPE_INDEX_4: if ((sp &amp; 1) != 0) index = srcData[sp &gt;&gt; 1] &amp; 0x0f; else index = (srcData[sp &gt;&gt; 1] &gt;&gt;&gt; 4) &amp; 0x0f; sp += (sfx &gt;&gt;&gt; 16); break; case TYPE_INDEX_2: index = (srcData[sp &gt;&gt; 2] &gt;&gt;&gt; (6 - (sp &amp; 3) * 2)) &amp; 0x03; sp += (sfx &gt;&gt;&gt; 16); break; case TYPE_INDEX_1_MSB: index = (srcData[sp &gt;&gt; 3] &gt;&gt;&gt; (7 - (sp &amp; 7))) &amp; 0x01; sp += (sfx &gt;&gt;&gt; 16); break; case TYPE_INDEX_1_LSB: index = (srcData[sp &gt;&gt; 3] &gt;&gt;&gt; (sp &amp; 7)) &amp; 0x01; sp += (sfx &gt;&gt;&gt; 16); break; default: return; } APPLY MASK ***/ switch (alphaMode) { case ALPHA_MASK_UNPACKED: { final byte mask = alphaData[ap]; ap += (sfx &gt;&gt; 16); if (mask == 0) continue; } break; case ALPHA_MASK_PACKED: { final int mask = alphaData[ap &gt;&gt; 3] &amp; (1 &lt;&lt; (ap &amp; 7)); ap += (sfx &gt;&gt; 16); if (mask == 0) continue; } break; case ALPHA_MASK_INDEX: { int i = 0; while (i &lt; alphaData.length) { if (index == (alphaData[i] &amp; 0xff)) break; } if (i &lt; alphaData.length) continue; } break; case ALPHA_MASK_RGB: { final byte r = srcReds[index], g = srcGreens[index], b = srcBlues[index]; int i = 0; while (i &lt; alphaData.length) { if ((r == alphaData[i]) &amp;&amp; (g == alphaData[i + 1]) &amp;&amp; (b == alphaData[i + 2])) break; i += 3; } if (i &lt; alphaData.length) continue; } break; } index = paletteMapping[index] &amp; 0xff; WRITE NEXT PIXEL ***/ switch (dtype) { case TYPE_INDEX_8: destData[dp] = (byte) index; break; case TYPE_INDEX_4: if ((dp &amp; 1) != 0) destData[dp &gt;&gt; 1] = (byte)((destData[dp &gt;&gt; 1] &amp; 0xf0) | index); else destData[dp &gt;&gt; 1] = (byte)((destData[dp &gt;&gt; 1] &amp; 0x0f) | (index &lt;&lt; 4)); break; case TYPE_INDEX_2: { final int shift = 6 - (dp &amp; 3) * 2; destData[dp &gt;&gt; 2] = (byte)(destData[dp &gt;&gt; 2] &amp; ~(0x03 &lt;&lt; shift) | (index &lt;&lt; shift)); } break; case TYPE_INDEX_1_MSB: { final int shift = 7 - (dp &amp; 7); destData[dp &gt;&gt; 3] = (byte)(destData[dp &gt;&gt; 3] &amp; ~(0x01 &lt;&lt; shift) | (index &lt;&lt; shift)); } break; case TYPE_INDEX_1_LSB: { final int shift = dp &amp; 7; destData[dp &gt;&gt; 3] = (byte)(destData[dp &gt;&gt; 3] &amp; ~(0x01 &lt;&lt; shift) | (index &lt;&lt; shift)); } break; } } } } return; } Comprehensive blit (apply transformations) ***/ int alpha = alphaMode; int index = 0; int indexq = 0; int lastindex = 0, lastr = -1, lastg = -1, lastb = -1; final int[] rerr, gerr, berr; if (ditherEnabled) { rerr = new int[destWidth + 2]; gerr = new int[destWidth + 2]; berr = new int[destWidth + 2]; } else { rerr = null; gerr = null; berr = null; } for (int dy = destHeight, sfy = sfyi; dy &gt; 0; --dy, sp = spr += (sfy &gt;&gt;&gt; 16) * srcStride, ap = apr += (sfy &gt;&gt;&gt; 16) * alphaStride, sfy = (sfy &amp; 0xffff) + sfyi, dp = dpr += dpryi) { int lrerr = 0, lgerr = 0, lberr = 0; for (int dx = destWidth, sfx = sfxi; dx &gt; 0; --dx, dp += dprxi, sfx = (sfx &amp; 0xffff) + sfxi) { READ NEXT PIXEL ***/ switch (stype) { case TYPE_INDEX_8: index = srcData[sp] &amp; 0xff; sp += (sfx &gt;&gt;&gt; 16); break; case TYPE_INDEX_4: if ((sp &amp; 1) != 0) index = srcData[sp &gt;&gt; 1] &amp; 0x0f; else index = (srcData[sp &gt;&gt; 1] &gt;&gt;&gt; 4) &amp; 0x0f; sp += (sfx &gt;&gt;&gt; 16); break; case TYPE_INDEX_2: index = (srcData[sp &gt;&gt; 2] &gt;&gt;&gt; (6 - (sp &amp; 3) * 2)) &amp; 0x03; sp += (sfx &gt;&gt;&gt; 16); break; case TYPE_INDEX_1_MSB: index = (srcData[sp &gt;&gt; 3] &gt;&gt;&gt; (7 - (sp &amp; 7))) &amp; 0x01; sp += (sfx &gt;&gt;&gt; 16); break; case TYPE_INDEX_1_LSB: index = (srcData[sp &gt;&gt; 3] &gt;&gt;&gt; (sp &amp; 7)) &amp; 0x01; sp += (sfx &gt;&gt;&gt; 16); break; } DO SPECIAL PROCESSING IF REQUIRED ***/ int r = srcReds[index] &amp; 0xff, g = srcGreens[index] &amp; 0xff, b = srcBlues[index] &amp; 0xff; switch (alphaMode) { case ALPHA_CHANNEL_SEPARATE: alpha = ((alphaData[ap] &amp; 0xff) &lt;&lt; 16) / 255; ap += (sfx &gt;&gt; 16); break; case ALPHA_MASK_UNPACKED: alpha = (alphaData[ap] != 0) ?
(2610) {616519} [620512]: 0x10000 : 0; ap += (sfx &gt;&gt; 16); break; case ALPHA_MASK_PACKED: alpha = (alphaData[ap &gt;&gt; 3] &lt;&lt; ((ap &amp; 7) + 9)) &amp; 0x10000; ap += (sfx &gt;&gt; 16); break; case ALPHA_MASK_INDEX: { // could speed up using binary search if we sorted the indices int i = 0; while (i &lt; alphaData.length) { if (index == (alphaData[i] &amp; 0xff)) break; } if (i &lt; alphaData.length) continue; } break; case ALPHA_MASK_RGB: { int i = 0; while (i &lt; alphaData.length) { if ((r == (alphaData[i] &amp; 0xff)) &amp;&amp; (g == (alphaData[i + 1] &amp; 0xff)) &amp;&amp; (b == (alphaData[i + 2] &amp; 0xff))) break; i += 3; } if (i &lt; alphaData.length) continue; } break; } if (alpha != 0x10000) { if (alpha == 0x0000) continue; switch (dtype) { case TYPE_INDEX_8: indexq = destData[dp] &amp; 0xff; break; case TYPE_INDEX_4: if ((dp &amp; 1) != 0) indexq = destData[dp &gt;&gt; 1] &amp; 0x0f; else indexq = (destData[dp &gt;&gt; 1] &gt;&gt;&gt; 4) &amp; 0x0f; break; case TYPE_INDEX_2: indexq = (destData[dp &gt;&gt; 2] &gt;&gt;&gt; (6 - (dp &amp; 3) * 2)) &amp; 0x03; break; case TYPE_INDEX_1_MSB: indexq = (destData[dp &gt;&gt; 3] &gt;&gt;&gt; (7 - (dp &amp; 7))) &amp; 0x01; break; case TYPE_INDEX_1_LSB: indexq = (destData[dp &gt;&gt; 3] &gt;&gt;&gt; (dp &amp; 7)) &amp; 0x01; break; } // Perform alpha blending final int rq = destReds[indexq] &amp; 0xff; final int gq = destGreens[indexq] &amp; 0xff; final int bq = destBlues[indexq] &amp; 0xff; r = rq + ((r - rq) * alpha &gt;&gt; 16); g = gq + ((g - gq) * alpha &gt;&gt; 16); b = bq + ((b - bq) * alpha &gt;&gt; 16); } MAP COLOR TO THE PALETTE ***/ if (ditherEnabled) { // Floyd-Steinberg error diffusion r += rerr[dx] &gt;&gt; 4; if (r &lt; 0) r = 0; else if (r &gt; 255) r = 255; g += gerr[dx] &gt;&gt; 4; if (g &lt; 0) g = 0; else if (g &gt; 255) g = 255; b += berr[dx] &gt;&gt; 4; if (b &lt; 0) b = 0; else if (b &gt; 255) b = 255; rerr[dx] = lrerr; gerr[dx] = lgerr; berr[dx] = lberr; } if (r != lastr || g != lastg || b != lastb) { // moving the variable declarations out seems to make the JDK JIT happier... for (int j = 0, dr, dg, db, distance, minDistance = 0x7fffffff; j &lt; destPaletteSize; ++j) { dr = (destReds[j] &amp; 0xff) - r; dg = (destGreens[j] &amp; 0xff) - g; db = (destBlues[j] &amp; 0xff) - b; distance = dr * dr + dg * dg + db * db; if (distance &lt; minDistance) { lastindex = j; if (distance == 0) break; minDistance = distance; } } lastr = r; lastg = g; lastb = b; } if (ditherEnabled) { // Floyd-Steinberg error diffusion, cont'd... final int dxm1 = dx - 1, dxp1 = dx + 1; int acc; rerr[dxp1] += acc = (lrerr = r - (destReds[lastindex] &amp; 0xff)) + lrerr + lrerr; rerr[dx] += acc += lrerr + lrerr; rerr[dxm1] += acc + lrerr + lrerr; gerr[dxp1] += acc = (lgerr = g - (destGreens[lastindex] &amp; 0xff)) + lgerr + lgerr; gerr[dx] += acc += lgerr + lgerr; gerr[dxm1] += acc + lgerr + lgerr; berr[dxp1] += acc = (lberr = b - (destBlues[lastindex] &amp; 0xff)) + lberr + lberr; berr[dx] += acc += lberr + lberr; berr[dxm1] += acc + lberr + lberr; } WRITE NEXT PIXEL ***/ switch (dtype) { case TYPE_INDEX_8: destData[dp] = (byte) lastindex; break; case TYPE_INDEX_4: if ((dp &amp; 1) != 0) destData[dp &gt;&gt; 1] = (byte)((destData[dp &gt;&gt; 1] &amp; 0xf0) | lastindex); else destData[dp &gt;&gt; 1] = (byte)((destData[dp &gt;&gt; 1] &amp; 0x0f) | (lastindex &lt;&lt; 4)); break; case TYPE_INDEX_2: { final int shift = 6 - (dp &amp; 3) * 2; destData[dp &gt;&gt; 2] = (byte)(destData[dp &gt;&gt; 2] &amp; ~(0x03 &lt;&lt; shift) | (lastindex &lt;&lt; shift)); } break; case TYPE_INDEX_1_MSB: { final int shift = 7 - (dp &amp; 7); destData[dp &gt;&gt; 3] = (byte)(destData[dp &gt;&gt; 3] &amp; ~(0x01 &lt;&lt; shift) | (lastindex &lt;&lt; shift)); } break; case TYPE_INDEX_1_LSB: { final int shift = dp &amp; 7; destData[dp &gt;&gt; 3] = (byte)(destData[dp &gt;&gt; 3] &amp; ~(0x01 &lt;&lt; shift) | (lastindex &lt;&lt; shift)); } break; } } } } Blits an index palette image into a direct palette image.
(2621) {625460} [628597]: -destStride : destStride; Prepare special processing data ***/ int apr; if ((op &amp; BLIT_ALPHA) != 0) { switch (alphaMode) { case ALPHA_MASK_UNPACKED: case ALPHA_CHANNEL_SEPARATE: if (alphaData == null) alphaMode = 0x10000; apr = alphaY * alphaStride + alphaX; break; case ALPHA_MASK_PACKED: if (alphaData == null) alphaMode = 0x10000; alphaStride &lt;&lt;= 3; apr = alphaY * alphaStride + alphaX; break; case ALPHA_MASK_INDEX: case ALPHA_MASK_RGB: if (alphaData == null) alphaMode = 0x10000; apr = 0; break; default: alphaMode = (alphaMode &lt;&lt; 16) / 255; // prescale case ALPHA_CHANNEL_SOURCE: apr = 0; break; } } else { alphaMode = 0x10000; apr = 0; } Comprehensive blit (apply transformations) ***/ final int destRedShift = getChannelShift(destRedMask); final int destRedWidth = getChannelWidth(destRedMask, destRedShift); final byte[] destReds = ANY_TO_EIGHT[destRedWidth]; final int destRedPreShift = 8 - destRedWidth; final int destGreenShift = getChannelShift(destGreenMask); final int destGreenWidth = getChannelWidth(destGreenMask, destGreenShift); final byte[] destGreens = ANY_TO_EIGHT[destGreenWidth]; final int destGreenPreShift = 8 - destGreenWidth; final int destBlueShift = getChannelShift(destBlueMask); final int destBlueWidth = getChannelWidth(destBlueMask, destBlueShift); final byte[] destBlues = ANY_TO_EIGHT[destBlueWidth]; final int destBluePreShift = 8 - destBlueWidth; final int destAlphaShift = getChannelShift(destAlphaMask); final int destAlphaWidth = getChannelWidth(destAlphaMask, destAlphaShift); final byte[] destAlphas = ANY_TO_EIGHT[destAlphaWidth]; final int destAlphaPreShift = 8 - destAlphaWidth; int dp = dpr; int sp = spr; int ap = apr, alpha = alphaMode; int r = 0, g = 0, b = 0, a = 0, index = 0; int rq = 0, gq = 0, bq = 0, aq = 0; for (int dy = destHeight, sfy = sfyi; dy &gt; 0; --dy, sp = spr += (sfy &gt;&gt;&gt; 16) * srcStride, ap = apr += (sfy &gt;&gt;&gt; 16) * alphaStride, sfy = (sfy &amp; 0xffff) + sfyi, dp = dpr += dpryi) { for (int dx = destWidth, sfx = sfxi; dx &gt; 0; --dx, dp += dprxi, sfx = (sfx &amp; 0xffff) + sfxi) { READ NEXT PIXEL ***/ switch (stype) { case TYPE_INDEX_8: index = srcData[sp] &amp; 0xff; sp += (sfx &gt;&gt;&gt; 16); break; case TYPE_INDEX_4: if ((sp &amp; 1) != 0) index = srcData[sp &gt;&gt; 1] &amp; 0x0f; else index = (srcData[sp &gt;&gt; 1] &gt;&gt;&gt; 4) &amp; 0x0f; sp += (sfx &gt;&gt;&gt; 16); break; case TYPE_INDEX_2: index = (srcData[sp &gt;&gt; 2] &gt;&gt;&gt; (6 - (sp &amp; 3) * 2)) &amp; 0x03; sp += (sfx &gt;&gt;&gt; 16); break; case TYPE_INDEX_1_MSB: index = (srcData[sp &gt;&gt; 3] &gt;&gt;&gt; (7 - (sp &amp; 7))) &amp; 0x01; sp += (sfx &gt;&gt;&gt; 16); break; case TYPE_INDEX_1_LSB: index = (srcData[sp &gt;&gt; 3] &gt;&gt;&gt; (sp &amp; 7)) &amp; 0x01; sp += (sfx &gt;&gt;&gt; 16); break; } DO SPECIAL PROCESSING IF REQUIRED ***/ r = srcReds[index] &amp; 0xff; g = srcGreens[index] &amp; 0xff; b = srcBlues[index] &amp; 0xff; switch (alphaMode) { case ALPHA_CHANNEL_SEPARATE: alpha = ((alphaData[ap] &amp; 0xff) &lt;&lt; 16) / 255; ap += (sfx &gt;&gt; 16); break; case ALPHA_MASK_UNPACKED: alpha = (alphaData[ap] != 0) ?
(2622) {628598} [633746]: 0x10000 : 0; ap += (sfx &gt;&gt; 16); break; case ALPHA_MASK_PACKED: alpha = (alphaData[ap &gt;&gt; 3] &lt;&lt; ((ap &amp; 7) + 9)) &amp; 0x10000; ap += (sfx &gt;&gt; 16); break; case ALPHA_MASK_INDEX: { // could speed up using binary search if we sorted the indices int i = 0; while (i &lt; alphaData.length) { if (index == (alphaData[i] &amp; 0xff)) break; } if (i &lt; alphaData.length) continue; } break; case ALPHA_MASK_RGB: { int i = 0; while (i &lt; alphaData.length) { if ((r == (alphaData[i] &amp; 0xff)) &amp;&amp; (g == (alphaData[i + 1] &amp; 0xff)) &amp;&amp; (b == (alphaData[i + 2] &amp; 0xff))) break; i += 3; } if (i &lt; alphaData.length) continue; } break; } if (alpha != 0x10000) { if (alpha == 0x0000) continue; switch (dtype) { case TYPE_GENERIC_8: { final int data = destData[dp] &amp; 0xff; rq = destReds[(data &amp; destRedMask) &gt;&gt;&gt; destRedShift] &amp; 0xff; gq = destGreens[(data &amp; destGreenMask) &gt;&gt;&gt; destGreenShift] &amp; 0xff; bq = destBlues[(data &amp; destBlueMask) &gt;&gt;&gt; destBlueShift] &amp; 0xff; aq = destAlphas[(data &amp; destAlphaMask) &gt;&gt;&gt; destAlphaShift] &amp; 0xff; } break; case TYPE_GENERIC_16_MSB: { final int data = ((destData[dp] &amp; 0xff) &lt;&lt; 8) | (destData[dp + 1] &amp; 0xff); rq = destReds[(data &amp; destRedMask) &gt;&gt;&gt; destRedShift] &amp; 0xff; gq = destGreens[(data &amp; destGreenMask) &gt;&gt;&gt; destGreenShift] &amp; 0xff; bq = destBlues[(data &amp; destBlueMask) &gt;&gt;&gt; destBlueShift] &amp; 0xff; aq = destAlphas[(data &amp; destAlphaMask) &gt;&gt;&gt; destAlphaShift] &amp; 0xff; } break; case TYPE_GENERIC_16_LSB: { final int data = ((destData[dp + 1] &amp; 0xff) &lt;&lt; 8) | (destData[dp] &amp; 0xff); rq = destReds[(data &amp; destRedMask) &gt;&gt;&gt; destRedShift] &amp; 0xff; gq = destGreens[(data &amp; destGreenMask) &gt;&gt;&gt; destGreenShift] &amp; 0xff; bq = destBlues[(data &amp; destBlueMask) &gt;&gt;&gt; destBlueShift] &amp; 0xff; aq = destAlphas[(data &amp; destAlphaMask) &gt;&gt;&gt; destAlphaShift] &amp; 0xff; } break; case TYPE_GENERIC_24: { final int data = (( ((destData[dp] &amp; 0xff) &lt;&lt; 8) | (destData[dp + 1] &amp; 0xff)) &lt;&lt; 8) | (destData[dp + 2] &amp; 0xff); rq = destReds[(data &amp; destRedMask) &gt;&gt;&gt; destRedShift] &amp; 0xff; gq = destGreens[(data &amp; destGreenMask) &gt;&gt;&gt; destGreenShift] &amp; 0xff; bq = destBlues[(data &amp; destBlueMask) &gt;&gt;&gt; destBlueShift] &amp; 0xff; aq = destAlphas[(data &amp; destAlphaMask) &gt;&gt;&gt; destAlphaShift] &amp; 0xff; } break; case TYPE_GENERIC_32_MSB: { final int data = (( (( ((destData[dp] &amp; 0xff) &lt;&lt; 8) | (destData[dp + 1] &amp; 0xff)) &lt;&lt; 8) | (destData[dp + 2] &amp; 0xff)) &lt;&lt; 8) | (destData[dp + 3] &amp; 0xff); rq = destReds[(data &amp; destRedMask) &gt;&gt;&gt; destRedShift] &amp; 0xff; gq = destGreens[(data &amp; destGreenMask) &gt;&gt;&gt; destGreenShift] &amp; 0xff; bq = destBlues[(data &amp; destBlueMask) &gt;&gt;&gt; destBlueShift] &amp; 0xff; aq = destAlphas[(data &amp; destAlphaMask) &gt;&gt;&gt; destAlphaShift] &amp; 0xff; } break; case TYPE_GENERIC_32_LSB: { final int data = (( (( ((destData[dp + 3] &amp; 0xff) &lt;&lt; 8) | (destData[dp + 2] &amp; 0xff)) &lt;&lt; 8) | (destData[dp + 1] &amp; 0xff)) &lt;&lt; 8) | (destData[dp] &amp; 0xff); rq = destReds[(data &amp; destRedMask) &gt;&gt;&gt; destRedShift] &amp; 0xff; gq = destGreens[(data &amp; destGreenMask) &gt;&gt;&gt; destGreenShift] &amp; 0xff; bq = destBlues[(data &amp; destBlueMask) &gt;&gt;&gt; destBlueShift] &amp; 0xff; aq = destAlphas[(data &amp; destAlphaMask) &gt;&gt;&gt; destAlphaShift] &amp; 0xff; } break; } // Perform alpha blending a = aq + ((a - aq) * alpha &gt;&gt; 16); r = rq + ((r - rq) * alpha &gt;&gt; 16); g = gq + ((g - gq) * alpha &gt;&gt; 16); b = bq + ((b - bq) * alpha &gt;&gt; 16); } WRITE NEXT PIXEL ***/ final int data = (r &gt;&gt;&gt; destRedPreShift &lt;&lt; destRedShift) | (g &gt;&gt;&gt; destGreenPreShift &lt;&lt; destGreenShift) | (b &gt;&gt;&gt; destBluePreShift &lt;&lt; destBlueShift) | (a &gt;&gt;&gt; destAlphaPreShift &lt;&lt; destAlphaShift); switch (dtype) { case TYPE_GENERIC_8: { destData[dp] = (byte) data; } break; case TYPE_GENERIC_16_MSB: { destData[dp] = (byte) (data &gt;&gt;&gt; 8); destData[dp + 1] = (byte) (data &amp; 0xff); } break; case TYPE_GENERIC_16_LSB: { destData[dp] = (byte) (data &amp; 0xff); destData[dp + 1] = (byte) (data &gt;&gt;&gt; 8); } break; case TYPE_GENERIC_24: { destData[dp] = (byte) (data &gt;&gt;&gt; 16); destData[dp + 1] = (byte) (data &gt;&gt;&gt; 8); destData[dp + 2] = (byte) (data &amp; 0xff); } break; case TYPE_GENERIC_32_MSB: { destData[dp] = (byte) (data &gt;&gt;&gt; 24); destData[dp + 1] = (byte) (data &gt;&gt;&gt; 16); destData[dp + 2] = (byte) (data &gt;&gt;&gt; 8); destData[dp + 3] = (byte) (data &amp; 0xff); } break; case TYPE_GENERIC_32_LSB: { destData[dp] = (byte) (data &amp; 0xff); destData[dp + 1] = (byte) (data &gt;&gt;&gt; 8); destData[dp + 2] = (byte) (data &gt;&gt;&gt; 16); destData[dp + 3] = (byte) (data &gt;&gt;&gt; 24); } break; } } } } Blits a direct palette image into an index palette image.
(2633) {637326} [642896]: -destStride : destStride; Prepare special processing data ***/ int apr; if ((op &amp; BLIT_ALPHA) != 0) { switch (alphaMode) { case ALPHA_MASK_UNPACKED: case ALPHA_CHANNEL_SEPARATE: if (alphaData == null) alphaMode = 0x10000; apr = alphaY * alphaStride + alphaX; break; case ALPHA_MASK_PACKED: if (alphaData == null) alphaMode = 0x10000; alphaStride &lt;&lt;= 3; apr = alphaY * alphaStride + alphaX; break; case ALPHA_MASK_INDEX: //throw new IllegalArgumentException("Invalid alpha type"); return; case ALPHA_MASK_RGB: if (alphaData == null) alphaMode = 0x10000; apr = 0; break; default: alphaMode = (alphaMode &lt;&lt; 16) / 255; // prescale case ALPHA_CHANNEL_SOURCE: apr = 0; break; } } else { alphaMode = 0x10000; apr = 0; } final boolean ditherEnabled = (op &amp; BLIT_DITHER) != 0; Comprehensive blit (apply transformations) ***/ final int srcRedShift = getChannelShift(srcRedMask); final byte[] srcReds = ANY_TO_EIGHT[getChannelWidth(srcRedMask, srcRedShift)]; final int srcGreenShift = getChannelShift(srcGreenMask); final byte[] srcGreens = ANY_TO_EIGHT[getChannelWidth(srcGreenMask, srcGreenShift)]; final int srcBlueShift = getChannelShift(srcBlueMask); final byte[] srcBlues = ANY_TO_EIGHT[getChannelWidth(srcBlueMask, srcBlueShift)]; final int srcAlphaShift = getChannelShift(srcAlphaMask); final byte[] srcAlphas = ANY_TO_EIGHT[getChannelWidth(srcAlphaMask, srcAlphaShift)]; int dp = dpr; int sp = spr; int ap = apr, alpha = alphaMode; int r = 0, g = 0, b = 0, a = 0; int indexq = 0; int lastindex = 0, lastr = -1, lastg = -1, lastb = -1; final int[] rerr, gerr, berr; int destPaletteSize = 1 &lt;&lt; destDepth; if ((destReds != null) &amp;&amp; (destReds.length &lt; destPaletteSize)) destPaletteSize = destReds.length; if (ditherEnabled) { rerr = new int[destWidth + 2]; gerr = new int[destWidth + 2]; berr = new int[destWidth + 2]; } else { rerr = null; gerr = null; berr = null; } for (int dy = destHeight, sfy = sfyi; dy &gt; 0; --dy, sp = spr += (sfy &gt;&gt;&gt; 16) * srcStride, ap = apr += (sfy &gt;&gt;&gt; 16) * alphaStride, sfy = (sfy &amp; 0xffff) + sfyi, dp = dpr += dpryi) { int lrerr = 0, lgerr = 0, lberr = 0; for (int dx = destWidth, sfx = sfxi; dx &gt; 0; --dx, dp += dprxi, sfx = (sfx &amp; 0xffff) + sfxi) { READ NEXT PIXEL ***/ switch (stype) { case TYPE_GENERIC_8: { final int data = srcData[sp] &amp; 0xff; sp += (sfx &gt;&gt;&gt; 16); r = srcReds[(data &amp; srcRedMask) &gt;&gt;&gt; srcRedShift] &amp; 0xff; g = srcGreens[(data &amp; srcGreenMask) &gt;&gt;&gt; srcGreenShift] &amp; 0xff; b = srcBlues[(data &amp; srcBlueMask) &gt;&gt;&gt; srcBlueShift] &amp; 0xff; a = srcAlphas[(data &amp; srcAlphaMask) &gt;&gt;&gt; srcAlphaShift] &amp; 0xff; } break; case TYPE_GENERIC_16_MSB: { final int data = ((srcData[sp] &amp; 0xff) &lt;&lt; 8) | (srcData[sp + 1] &amp; 0xff); sp += (sfx &gt;&gt;&gt; 16) * 2; r = srcReds[(data &amp; srcRedMask) &gt;&gt;&gt; srcRedShift] &amp; 0xff; g = srcGreens[(data &amp; srcGreenMask) &gt;&gt;&gt; srcGreenShift] &amp; 0xff; b = srcBlues[(data &amp; srcBlueMask) &gt;&gt;&gt; srcBlueShift] &amp; 0xff; a = srcAlphas[(data &amp; srcAlphaMask) &gt;&gt;&gt; srcAlphaShift] &amp; 0xff; } break; case TYPE_GENERIC_16_LSB: { final int data = ((srcData[sp + 1] &amp; 0xff) &lt;&lt; 8) | (srcData[sp] &amp; 0xff); sp += (sfx &gt;&gt;&gt; 16) * 2; r = srcReds[(data &amp; srcRedMask) &gt;&gt;&gt; srcRedShift] &amp; 0xff; g = srcGreens[(data &amp; srcGreenMask) &gt;&gt;&gt; srcGreenShift] &amp; 0xff; b = srcBlues[(data &amp; srcBlueMask) &gt;&gt;&gt; srcBlueShift] &amp; 0xff; a = srcAlphas[(data &amp; srcAlphaMask) &gt;&gt;&gt; srcAlphaShift] &amp; 0xff; } break; case TYPE_GENERIC_24: { final int data = (( ((srcData[sp] &amp; 0xff) &lt;&lt; 8) | (srcData[sp + 1] &amp; 0xff)) &lt;&lt; 8) | (srcData[sp + 2] &amp; 0xff); sp += (sfx &gt;&gt;&gt; 16) * 3; r = srcReds[(data &amp; srcRedMask) &gt;&gt;&gt; srcRedShift] &amp; 0xff; g = srcGreens[(data &amp; srcGreenMask) &gt;&gt;&gt; srcGreenShift] &amp; 0xff; b = srcBlues[(data &amp; srcBlueMask) &gt;&gt;&gt; srcBlueShift] &amp; 0xff; a = srcAlphas[(data &amp; srcAlphaMask) &gt;&gt;&gt; srcAlphaShift] &amp; 0xff; } break; case TYPE_GENERIC_32_MSB: { final int data = (( (( ((srcData[sp] &amp; 0xff) &lt;&lt; 8) | (srcData[sp + 1] &amp; 0xff)) &lt;&lt; 8) | (srcData[sp + 2] &amp; 0xff)) &lt;&lt; 8) | (srcData[sp + 3] &amp; 0xff); sp += (sfx &gt;&gt;&gt; 16) * 4; r = srcReds[(data &amp; srcRedMask) &gt;&gt;&gt; srcRedShift] &amp; 0xff; g = srcGreens[(data &amp; srcGreenMask) &gt;&gt;&gt; srcGreenShift] &amp; 0xff; b = srcBlues[(data &amp; srcBlueMask) &gt;&gt;&gt; srcBlueShift] &amp; 0xff; a = srcAlphas[(data &amp; srcAlphaMask) &gt;&gt;&gt; srcAlphaShift] &amp; 0xff; } break; case TYPE_GENERIC_32_LSB: { final int data = (( (( ((srcData[sp + 3] &amp; 0xff) &lt;&lt; 8) | (srcData[sp + 2] &amp; 0xff)) &lt;&lt; 8) | (srcData[sp + 1] &amp; 0xff)) &lt;&lt; 8) | (srcData[sp] &amp; 0xff); sp += (sfx &gt;&gt;&gt; 16) * 4; r = srcReds[(data &amp; srcRedMask) &gt;&gt;&gt; srcRedShift] &amp; 0xff; g = srcGreens[(data &amp; srcGreenMask) &gt;&gt;&gt; srcGreenShift] &amp; 0xff; b = srcBlues[(data &amp; srcBlueMask) &gt;&gt;&gt; srcBlueShift] &amp; 0xff; a = srcAlphas[(data &amp; srcAlphaMask) &gt;&gt;&gt; srcAlphaShift] &amp; 0xff; } break; } DO SPECIAL PROCESSING IF REQUIRED ***/ switch (alphaMode) { case ALPHA_CHANNEL_SEPARATE: alpha = ((alphaData[ap] &amp; 0xff) &lt;&lt; 16) / 255; ap += (sfx &gt;&gt; 16); break; case ALPHA_CHANNEL_SOURCE: alpha = (a &lt;&lt; 16) / 255; break; case ALPHA_MASK_UNPACKED: alpha = (alphaData[ap] != 0) ?
(2634) {642897} [646604]: 0x10000 : 0; ap += (sfx &gt;&gt; 16); break; case ALPHA_MASK_PACKED: alpha = (alphaData[ap &gt;&gt; 3] &lt;&lt; ((ap &amp; 7) + 9)) &amp; 0x10000; ap += (sfx &gt;&gt; 16); break; case ALPHA_MASK_RGB: alpha = 0x10000; for (int i = 0; i &lt; alphaData.length; i += 3) { if ((r == alphaData[i]) &amp;&amp; (g == alphaData[i + 1]) &amp;&amp; (b == alphaData[i + 2])) { alpha = 0x0000; break; } } break; } if (alpha != 0x10000) { if (alpha == 0x0000) continue; switch (dtype) { case TYPE_INDEX_8: indexq = destData[dp] &amp; 0xff; break; case TYPE_INDEX_4: if ((dp &amp; 1) != 0) indexq = destData[dp &gt;&gt; 1] &amp; 0x0f; else indexq = (destData[dp &gt;&gt; 1] &gt;&gt;&gt; 4) &amp; 0x0f; break; case TYPE_INDEX_2: indexq = (destData[dp &gt;&gt; 2] &gt;&gt;&gt; (6 - (dp &amp; 3) * 2)) &amp; 0x03; break; case TYPE_INDEX_1_MSB: indexq = (destData[dp &gt;&gt; 3] &gt;&gt;&gt; (7 - (dp &amp; 7))) &amp; 0x01; break; case TYPE_INDEX_1_LSB: indexq = (destData[dp &gt;&gt; 3] &gt;&gt;&gt; (dp &amp; 7)) &amp; 0x01; break; } // Perform alpha blending final int rq = destReds[indexq] &amp; 0xff; final int gq = destGreens[indexq] &amp; 0xff; final int bq = destBlues[indexq] &amp; 0xff; r = rq + ((r - rq) * alpha &gt;&gt; 16); g = gq + ((g - gq) * alpha &gt;&gt; 16); b = bq + ((b - bq) * alpha &gt;&gt; 16); } MAP COLOR TO THE PALETTE ***/ if (ditherEnabled) { // Floyd-Steinberg error diffusion r += rerr[dx] &gt;&gt; 4; if (r &lt; 0) r = 0; else if (r &gt; 255) r = 255; g += gerr[dx] &gt;&gt; 4; if (g &lt; 0) g = 0; else if (g &gt; 255) g = 255; b += berr[dx] &gt;&gt; 4; if (b &lt; 0) b = 0; else if (b &gt; 255) b = 255; rerr[dx] = lrerr; gerr[dx] = lgerr; berr[dx] = lberr; } if (r != lastr || g != lastg || b != lastb) { // moving the variable declarations out seems to make the JDK JIT happier... for (int j = 0, dr, dg, db, distance, minDistance = 0x7fffffff; j &lt; destPaletteSize; ++j) { dr = (destReds[j] &amp; 0xff) - r; dg = (destGreens[j] &amp; 0xff) - g; db = (destBlues[j] &amp; 0xff) - b; distance = dr * dr + dg * dg + db * db; if (distance &lt; minDistance) { lastindex = j; if (distance == 0) break; minDistance = distance; } } lastr = r; lastg = g; lastb = b; } if (ditherEnabled) { // Floyd-Steinberg error diffusion, cont'd... final int dxm1 = dx - 1, dxp1 = dx + 1; int acc; rerr[dxp1] += acc = (lrerr = r - (destReds[lastindex] &amp; 0xff)) + lrerr + lrerr; rerr[dx] += acc += lrerr + lrerr; rerr[dxm1] += acc + lrerr + lrerr; gerr[dxp1] += acc = (lgerr = g - (destGreens[lastindex] &amp; 0xff)) + lgerr + lgerr; gerr[dx] += acc += lgerr + lgerr; gerr[dxm1] += acc + lgerr + lgerr; berr[dxp1] += acc = (lberr = b - (destBlues[lastindex] &amp; 0xff)) + lberr + lberr; berr[dx] += acc += lberr + lberr; berr[dxm1] += acc + lberr + lberr; } WRITE NEXT PIXEL ***/ switch (dtype) { case TYPE_INDEX_8: destData[dp] = (byte) lastindex; break; case TYPE_INDEX_4: if ((dp &amp; 1) != 0) destData[dp &gt;&gt; 1] = (byte)((destData[dp &gt;&gt; 1] &amp; 0xf0) | lastindex); else destData[dp &gt;&gt; 1] = (byte)((destData[dp &gt;&gt; 1] &amp; 0x0f) | (lastindex &lt;&lt; 4)); break; case TYPE_INDEX_2: { final int shift = 6 - (dp &amp; 3) * 2; destData[dp &gt;&gt; 2] = (byte)(destData[dp &gt;&gt; 2] &amp; ~(0x03 &lt;&lt; shift) | (lastindex &lt;&lt; shift)); } break; case TYPE_INDEX_1_MSB: { final int shift = 7 - (dp &amp; 7); destData[dp &gt;&gt; 3] = (byte)(destData[dp &gt;&gt; 3] &amp; ~(0x01 &lt;&lt; shift) | (lastindex &lt;&lt; shift)); } break; case TYPE_INDEX_1_LSB: { final int shift = dp &amp; 7; destData[dp &gt;&gt; 3] = (byte)(destData[dp &gt;&gt; 3] &amp; ~(0x01 &lt;&lt; shift) | (lastindex &lt;&lt; shift)); } break; } } } } Computes the required channel shift from a mask.
*****************************************************************
========================= CLASS #313 =============================
(2599) {602859} [602992]: &lt;p&gt; Note: The source and destination red, green, and blue arrays may be null if no alpha blending or dither is to be performed.
(2611) {620513} [620606]: &lt;p&gt; Note: The source and destination masks and palettes must always be fully specified.
(2623) {633747} [633840]: &lt;p&gt; Note: The source and destination masks and palettes must always be fully specified.
*****************************************************************
========================= CLASS #314 =============================
(2639) {646986} [647531]: @param width the width of the region to be filled @param height the height of the region to be filled @param vertical if true sweeps from top to bottom, else sweeps from left to right @param fromRGB the color to start with @param toRGB the color to end with @param redBits the number of significant red bits, 0 for palette modes @param greenBits the number of significant green bits, 0 for palette modes @param blueBits the number of significant blue bits, 0 for palette modes @return the new ImageData ------------ Renders a gradient onto a GC.
(2641) {647563} [648352]: &lt;/p&gt; @param gc the GC to render the gradient onto @param device the device the GC belongs to @param x the top-left x coordinate of the region to be filled @param y the top-left y coordinate of the region to be filled @param width the width of the region to be filled @param height the height of the region to be filled @param vertical if true sweeps from top to bottom, else sweeps from left to right @param fromRGB the color to start with @param toRGB the color to end with @param redBits the number of significant red bits, 0 for palette modes @param greenBits the number of significant green bits, 0 for palette modes @param blueBits the number of significant blue bits, 0 for palette modes ====== ImageDataLoader.java ====== Copyright (c) 2000, 2006 IBM Corporation and others.
*****************************************************************
========================= CLASS #315 =============================
(2647) {649317} [649390]: This provides API which will be called by SWT during the image rendering.
(2652) {650054} [650127]: This provides API which will be called by SWT during the image rendering.
*****************************************************************
========================= CLASS #316 =============================
(2648) {649392} [649489]: This interface needs to be implemented by client code to provide the image information on demand.
(2653) {650129} [650226]: This interface needs to be implemented by client code to provide the image information on demand.
*****************************************************************
========================= CLASS #317 =============================
(2670) {653819} [653932]: Throws an error if either an error occurs while loading the images, or if the images are not of a supported type.
(2673) {654682} [654795]: Throws an error if either an error occurs while loading the images, or if the images are not of a supported type.
*****************************************************************
========================= CLASS #318 =============================
(2671) {653933} [653969]: Returns the loaded image data array.
(2674) {654796} [654832]: Returns the loaded image data array.
*****************************************************************
========================= CLASS #319 =============================
(2712) {666091} [666205]: When the commit count is equal to the length of the composition text, then the in-line edit operation is complete.
(2725) {668382} [668496]: When the commit count is equal to the length of the composition text, then the in-line edit operation is complete.
*****************************************************************
========================= CLASS #320 =============================
(2714) {666567} [666716]: This is the start offset of the composition within the document and in not changed by the input method editor itself during the in-line edit session.
(2729) {669375} [669573]: This is the start offset of the composition within the document and in not changed by the input method editor itself during the in-line edit session but may need to be changed by clients of the IME.
*****************************************************************
========================= CLASS #321 =============================
(2717) {667150} [667214]: Each pair refers to the corresponding style in the styles array.
(2721) {667772} [667836]: Each pair refers to the corresponding style in the styles array.
*****************************************************************
========================= CLASS #322 =============================
(2718) {667216} [667366]: For example, the pair that starts at ranges[n] and ends at ranges[n+1] uses the style at styles[n/2] returned by &lt;code&gt;getStyles()&lt;/code&gt;.
(2722) {667838} [667939]: For example, the pair that starts at ranges[n] and ends at ranges[n+1] uses the style at styles[n/2].
*****************************************************************
========================= CLASS #323 =============================
(2868) {695578} [695800]: &lt;p&gt; This method computes the size that the client area of the composite must be in order to position all children at their preferred size inside the composite according to the layout algorithm encoded by this layout.
(2873) {697017} [697137]: &lt;p&gt; This method positions and sizes the children of a composite using the layout algorithm encoded by this layout.
*****************************************************************
========================= CLASS #324 =============================
(2928) {707502} [707659]: When a hyperlink is selected, the text field of the selection event contains either the text of the hyperlink or the value of its HREF, if one was specified.
(4044) {939758} [939851]: This will be either the text of the hyperlink or the value of its HREF, if one was specified.
*****************************************************************
========================= CLASS #325 =============================
(2969) {715459} [715497]: The range of the indices is inclusive.
(3015) {727699} [727733]: The range of indices is inclusive.
(3038) {732579} [732613]: The range of indices is inclusive.
(5150) {1157335} [1157373]: The range of the indices is inclusive.
(5223) {1176199} [1176233]: The range of indices is inclusive.
(5253) {1183500} [1183534]: The range of indices is inclusive.
*****************************************************************
========================= CLASS #326 =============================
(2980) {718612} [718650]: The order of the items is unspecified.
(2986) {720011} [720051]: The order of the indices is unspecified.
(5187) {1166894} [1166932]: The order of the items is unspecified.
(5193) {1168286} [1168326]: The order of the indices is unspecified.
(6115) {1397117} [1397155]: The order of the items is unspecified.
*****************************************************************
========================= CLASS #327 =============================
(2981) {718651} [718703]: An empty array indicates that no items are selected.
(5065) {1135722} [1135774]: An empty array indicates that no items are selected.
(5188) {1166933} [1166985]: An empty array indicates that no items are selected.
(6116) {1397156} [1397208]: An empty array indicates that no items are selected.
*****************************************************************
========================= CLASS #328 =============================
(2987) {720052} [720096]: The array is empty if no items are selected.
(5194) {1168327} [1168371]: The array is empty if no items are selected.
*****************************************************************
========================= CLASS #329 =============================
(2990) {720647} [720727]: This index can change when items are scrolled or new items are added or removed.
(3043) {733473} [733554]: This index can change when items are scrolled or new items are added and removed.
(5201) {1169868} [1169948]: This index can change when items are scrolled or new items are added or removed.
(5263) {1185543} [1185624]: This index can change when items are scrolled or new items are added and removed.
(6124) {1399019} [1399119]: This item can change when items are expanded, collapsed, scrolled or new items are added or removed.
(6163) {1409705} [1409805]: This item can change when items are expanded, collapsed, scrolled or new items are added or removed.
*****************************************************************
========================= CLASS #330 =============================
(3006) {726274} [726345]: The current selection is not cleared before the new items are selected.
(3016) {727734} [727805]: The current selection is not cleared before the new items are selected.
(5214) {1174770} [1174841]: The current selection is not cleared before the new items are selected.
(5224) {1176234} [1176305]: The current selection is not cleared before the new items are selected.
*****************************************************************
========================= CLASS #331 =============================
(3010) {726555} [726653]: If the receiver is single-select and multiple indices are specified, then all indices are ignored.
(3028) {730390} [730488]: If the receiver is single-select and multiple indices are specified, then all indices are ignored.
(3032) {731235} [731329]: If the receiver is single-select and multiple items are specified, then all items are ignored.
(5218) {1175051} [1175149]: If the receiver is single-select and multiple indices are specified, then all indices are ignored.
(5242) {1180550} [1180648]: If the receiver is single-select and multiple indices are specified, then all indices are ignored.
(5249) {1182166} [1182260]: If the receiver is single-select and multiple items are specified, then all items are ignored.
(6156) {1407881} [1407975]: If the receiver is single-select and multiple items are specified, then all items are ignored.
*****************************************************************
========================= CLASS #332 =============================
(3018) {727879} [727951]: If an item in the given range was already selected, it remains selected.
(5226) {1176379} [1176451]: If an item in the given range was already selected, it remains selected.
*****************************************************************
========================= CLASS #333 =============================
(3019) {727952} [728053]: Indices that are out of range are ignored and no items will be selected if start is greater than end.
(3040) {732759} [732870]: &lt;p&gt; Indices that are out of range are ignored and no items will be selected if start is greater than end.
(5227) {1176452} [1176553]: Indices that are out of range are ignored and no items will be selected if start is greater than end.
(5255) {1183680} [1183791]: &lt;p&gt; Indices that are out of range are ignored and no items will be selected if start is greater than end.
*****************************************************************
========================= CLASS #334 =============================
(3020) {728054} [728168]: If the receiver is single-select and there is more than one item in the given range, then all indices are ignored.
(3041) {732871} [732985]: If the receiver is single-select and there is more than one item in the given range, then all indices are ignored.
(5228) {1176554} [1176668]: If the receiver is single-select and there is more than one item in the given range, then all indices are ignored.
(5256) {1183792} [1183906]: If the receiver is single-select and there is more than one item in the given range, then all indices are ignored.
*****************************************************************
========================= CLASS #335 =============================
(3026) {730170} [730314]: The current selection is cleared before the new items are selected, and if necessary the receiver is scrolled to make the new selection visible.
(3030) {731032} [731176]: The current selection is cleared before the new items are selected, and if necessary the receiver is scrolled to make the new selection visible.
(3035) {731956} [732103]: The current selection is first cleared, then the new item is selected, and if necessary the receiver is scrolled to make the new selection visible.
(3039) {732614} [732758]: The current selection is cleared before the new items are selected, and if necessary the receiver is scrolled to make the new selection visible.
(5072) {1137911} [1137980]: The current selected is first cleared, then the new item is selected.
(5074) {1138456} [1138527]: The current selected is first cleared, then the new items are selected.
(5077) {1139072} [1139144]: The current selection is first cleared, then the new items are selected.
(5240) {1180330} [1180474]: The current selection is cleared before the new items are selected, and if necessary the receiver is scrolled to make the new selection visible.
(5244) {1181192} [1181334]: The current selection is cleared before the new item is selected, and if necessary the receiver is scrolled to make the new selection visible.
(5247) {1181963} [1182107]: The current selection is cleared before the new items are selected, and if necessary the receiver is scrolled to make the new selection visible.
(5251) {1182917} [1183064]: The current selection is first cleared, then the new item is selected, and if necessary the receiver is scrolled to make the new selection visible.
(5254) {1183535} [1183679]: The current selection is cleared before the new items are selected, and if necessary the receiver is scrolled to make the new selection visible.
(6151) {1406907} [1407049]: The current selection is cleared before the new item is selected, and if necessary the receiver is scrolled to make the new selection visible.
(6154) {1407678} [1407822]: The current selection is cleared before the new items are selected, and if necessary the receiver is scrolled to make the new selection visible.
*****************************************************************
========================= CLASS #336 =============================
(3045) {733864} [733944]: If the selection is already showing in the receiver, this method simply returns.
(5265) {1185931} [1186008]: If the column is already showing in the receiver, this method simply returns.
(5268) {1186591} [1186666]: If the item is already showing in the receiver, this method simply returns.
(5271) {1187258} [1187338]: If the selection is already showing in the receiver, this method simply returns.
(5576) {1265376} [1265466]: &lt;p&gt; If the selection is already showing in the receiver, this method simply returns.
(6165) {1410340} [1410417]: If the column is already showing in the receiver, this method simply returns.
(6168) {1410996} [1411071]: If the item is already showing in the receiver, this method simply returns.
(6171) {1411675} [1411755]: If the selection is already showing in the receiver, this method simply returns.
*****************************************************************
========================= CLASS #337 =============================
(3046) {733946} [734011]: Otherwise, the items are scrolled until the selection is visible.
(5269) {1186668} [1186728]: Otherwise, the items are scrolled until the item is visible.
(5272) {1187340} [1187405]: Otherwise, the items are scrolled until the selection is visible.
(5577) {1265468} [1265529]: Otherwise, lines are scrolled until the selection is visible.
(6169) {1411073} [1411146]: Otherwise, the items are scrolled and expanded until the item is visible.
(6172) {1411757} [1411822]: Otherwise, the items are scrolled until the selection is visible.
*****************************************************************
========================= CLASS #338 =============================
(3059) {736425} [736530]: ------------ Decode the LZW-encoded bytes in the given byte stream into the given DeviceIndependentImage.
(3061) {736562} [736657]: ------------ Encode the bytes into the given byte stream from the given DeviceIndependentImage.
*****************************************************************
========================= CLASS #339 =============================
(3063) {736719} [736790]: ------------ Initialize the receiver for decoding the given byte array.
(3064) {736791} [736862]: ------------ Initialize the receiver for encoding the given byte array.
*****************************************************************
========================= CLASS #340 =============================
(3066) {736924} [737037]: ------------ Answer the next pixel to encode in the image ------------ Copy a row of pixel values from the image.
(3068) {737086} [737139]: ------------ Copy a row of pixel values to the image.
(3069) {737140} [737202]: ------------ Copy duplicate rows of pixel values to the image.
*****************************************************************
========================= CLASS #341 =============================
(3071) {737255} [737302]: ------------ Read a block from the byte stream.
(3074) {737387} [737433]: ------------ Write a block to the byte stream.
(3543) {836958} [837011]: ------------ Load the PNG image from the byte stream.
*****************************************************************
========================= CLASS #342 =============================
(3073) {737336} [737386]: Throw an exception if the block could not be read.
(3075) {737434} [737487]: Throw an exception if the block could not be written.
*****************************************************************
========================= CLASS #343 =============================
(3144) {758845} [758960]: &lt;p&gt; Note that this is different from most widgets where the location of the widget is relative to the parent.
(3147) {759560} [759675]: &lt;p&gt; Note that this is different from most widgets where the location of the widget is relative to the parent.
(5830) {1327120} [1327235]: &lt;p&gt; Note that this is different from most widgets where the location of the widget is relative to the parent.
(5832) {1327722} [1327837]: &lt;p&gt; Note that this is different from most widgets where the location of the widget is relative to the parent.
*****************************************************************
========================= CLASS #344 =============================
(3205) {773263} [773338]: An accelerator is the bit-wise OR of zero or more modifier masks and a key.
(3225) {779316} [779391]: An accelerator is the bit-wise OR of zero or more modifier masks and a key.
*****************************************************************
========================= CLASS #345 =============================
(3206) {773339} [773422]: Examples: &lt;code&gt;SWT.CONTROL | SWT.SHIFT | 'T', SWT.ALT | SWT.F2&lt;/code&gt;.
(3226) {779392} [779472]: Examples: &lt;code&gt;SWT.MOD1 | SWT.MOD2 | 'T', SWT.MOD3 | SWT.F2&lt;/code&gt;.
(3227) {779473} [779546]: &lt;code&gt;SWT.CONTROL | SWT.SHIFT | 'T', SWT.ALT | SWT.F2&lt;/code&gt;.
*****************************************************************
========================= CLASS #346 =============================
(3207) {773423} [773509]: The default value is zero, indicating that the menu item does not have an accelerator.
(3228) {779547} [779633]: The default value is zero, indicating that the menu item does not have an accelerator.
*****************************************************************
========================= CLASS #347 =============================
(3213) {775178} [775253]: Only &lt;code&gt;CASCADE&lt;/code&gt; menu items can have a pull down menu.
(3241) {781864} [781939]: Only &lt;code&gt;CASCADE&lt;/code&gt; menu items can have a pull down menu.
*****************************************************************
========================= CLASS #348 =============================
(3370) {805362} [805432]: ------------ Unload the given image's data into the given byte stream.
(3372) {805469} [805567]: ------------ Unload a DeviceIndependentImage using Windows .BMP format into the given byte stream.
(6466) {1482191} [1482298]: ------------ Unload the given image's data into the given byte stream using the given compression strategy.
(6472) {1482595} [1482693]: ------------ Unload a DeviceIndependentImage using Windows .BMP format into the given byte stream.
*****************************************************************
========================= CLASS #349 =============================
(3371) {805433} [805468]: Answer the number of bytes written.
(6467) {1482299} [1482334]: Answer the number of bytes written.
(6470) {1482501} [1482536]: Answer the number of bytes written.
*****************************************************************
========================= CLASS #350 =============================
(3395) {809874} [809943]: For example, with a red mask of 0xFF0000, the red shift would be -16.
(3396) {809944} [809994]: With a red mask of 0x1F, the red shift would be 3.
*****************************************************************
========================= CLASS #351 =============================
(3413) {814036} [814158]: public long /*int*/ handle; PointF currentPoint = new PointF(), startPoint = new PointF(); Constructs a new empty Path.
(3732) {863855} [863915]: public long /*int*/ handle; Constructs a new empty region.
(5934) {1349094} [1349160]: public long /*int*/ handle; Constructs a new identity Transform.
*****************************************************************
========================= CLASS #352 =============================
(3469) {828115} [828227]: Drawing with the pattern will cause the resulting area to be tiled with the gradient specified by the arguments.
(3473) {829519} [829631]: Drawing with the pattern will cause the resulting area to be tiled with the gradient specified by the arguments.
*****************************************************************
========================= CLASS #353 =============================
(3484) {832056} [832248]: ------------ Get the PngChunk's reference byteArray; ------------ Set the PngChunk's reference byteArray; ------------ Get the 16-bit integer from the reference byte array at the given offset.
(3485) {832249} [832333]: ------------ Set the 16-bit integer in the reference byte array at the given offset.
(3486) {832334} [832420]: ------------ Get the 32-bit integer from the reference byte array at the given offset.
(3487) {832421} [832505]: ------------ Set the 32-bit integer in the reference byte array at the given offset.
*****************************************************************
========================= CLASS #354 =============================
(3488) {832506} [832570]: ------------ Get the length of the data component of this chunk.
(3490) {832615} [832679]: ------------ Set the length of the data component of this chunk.
*****************************************************************
========================= CLASS #355 =============================
(3489) {832571} [832614]: This is not the length of the entire chunk.
(3491) {832680} [832723]: This is not the length of the entire chunk.
*****************************************************************
========================= CLASS #356 =============================
(3493) {832757} [832783]: This is a four byte value.
(3501) {833134} [833160]: This is a four byte value.
*****************************************************************
========================= CLASS #357 =============================
(3494) {832784} [832823]: Each byte should be an ASCII character.
(3502) {833161} [833200]: Each byte should be an ASCII character.
*****************************************************************
========================= CLASS #358 =============================
(3495) {832824} [832878]: The first byte is upper case if the chunk is critical.
(3496) {832879} [832942]: The second byte is upper case if the chunk is publicly defined.
(3498) {832978} [833039]: The fourth byte is upper case if the chunk is unsafe to copy.
(3503) {833201} [833255]: The first byte is upper case if the chunk is critical.
(3504) {833256} [833319]: The second byte is upper case if the chunk is publicly defined.
(3506) {833355} [833416]: The fourth byte is upper case if the chunk is unsafe to copy.
*****************************************************************
========================= CLASS #359 =============================
(3497) {832943} [832977]: The third byte must be upper case.
(3505) {833320} [833354]: The third byte must be upper case.
*****************************************************************
========================= CLASS #360 =============================
(3499) {833040} [833100]: Public chunk types are defined by the PNG Development Group.
(3507) {833417} [833477]: Public chunk types are defined by the PNG Development Group.
*****************************************************************
========================= CLASS #361 =============================
(3516) {833789} [833859]: Ensure that the length field has a good value before making this call.
(3518) {833913} [833983]: Ensure that the length field has a good value before making this call.
*****************************************************************
========================= CLASS #362 =============================
(3545) {837083} [837131]: ------------ SWT does not support 16-bit depths.
(3547) {837202} [837262]: ------------ SWT does not support greyscale as a color type.
(3577) {839166} [839227]: ------------ SWT does not support 16-bit depth color formats.
(3581) {839439} [839500]: ------------ SWT does not support 16-bit depth color formats.
*****************************************************************
========================= CLASS #363 =============================
(3551) {837488} [837574]: ------------ PNG supports some color types and bit depths that are unsupported by SWT.
(3585) {839712} [839759]: ------------ PNG supports four filtering types.
*****************************************************************
========================= CLASS #364 =============================
(3554) {837763} [837817]: ------------ Read the image data from the data stream.
(3572) {838767} [838845]: ------------ Read the pixel data for an interlaced image from the data stream.
(3575) {839038} [839119]: ------------ Read the pixel data for a non-interlaced image from the data stream.
*****************************************************************
========================= CLASS #365 =============================
(3556) {837882} [837958]: ------------ Answer the number of bytes in a word-aligned row of pixel data.
(3557) {837959} [838029]: ------------ Answer the number of bytes in each row of the image data.
(3560) {838186} [838254]: ------------ Answer the number of bytes needed to represent a pixel.
(3563) {838392} [838466]: ------------ Answer the number of bytes in a row of the given pixel width.
*****************************************************************
========================= CLASS #366 =============================
(3558) {838030} [838147]: Each PNG row is byte-aligned, so images with bit depths less than a byte may have unused bits at the end of each row.
(3564) {838467} [838580]: Each row is byte-aligned, so images with bit depths less than a byte may have unused bits at the end of each row.
*****************************************************************
========================= CLASS #367 =============================
(3559) {838148} [838185]: The value of these bits is undefined.
(3565) {838581} [838618]: The value of these bits is undefined.
*****************************************************************
========================= CLASS #368 =============================
(3578) {839228} [839266]: Convert the 16-bit data to 8-bit data.
(3582) {839501} [839539]: Convert the 16-bit data to 8-bit data.
*****************************************************************
========================= CLASS #369 =============================
(3579) {839267} [839364]: The correct way to do this is to multiply each 16 bit value by the value: (2^8 - 1) / (2^16 - 1).
(3583) {839540} [839637]: The correct way to do this is to multiply each 16 bit value by the value: (2^8 - 1) / (2^16 - 1).
*****************************************************************
========================= CLASS #370 =============================
(3580) {839365} [839438]: The fast way to do this is just to drop the low byte of the 16-bit value.
(3584) {839638} [839711]: The fast way to do this is just to drop the low byte of the 16-bit value.
*****************************************************************
========================= CLASS #371 =============================
(3608) {842598} [842646]: This is limited to the values 1, 2, 4, 8, or 16.
(3610) {842687} [842735]: This is limited to the values 1, 2, 4, 8, or 16.
*****************************************************************
========================= CLASS #372 =============================
(3612) {842777} [842828]: This is limited to the values: 0 - Grayscale image.
(3618) {842961} [843012]: This is limited to the values: 0 - Grayscale image.
*****************************************************************
========================= CLASS #373 =============================
(3613) {842829} [842844]: 2 - RGB triple.
(3619) {843013} [843028]: 2 - RGB triple.
*****************************************************************
========================= CLASS #374 =============================
(3614) {842845} [842857]: 3 - Palette.
(3620) {843029} [843041]: 3 - Palette.
*****************************************************************
========================= CLASS #375 =============================
(3615) {842858} [842891]: 4 - Grayscale with Alpha channel.
(3621) {843042} [843075]: 4 - Grayscale with Alpha channel.
*****************************************************************
========================= CLASS #376 =============================
(3616) {842892} [842919]: 6 - RGB with Alpha channel.
(3622) {843076} [843103]: 6 - RGB with Alpha channel.
*****************************************************************
========================= CLASS #377 =============================
(3624) {843153} [843174]: This value must be 0.
(3626) {843224} [843245]: This value must be 0.
(3628) {843290} [843311]: This value must be 0.
(3630) {843356} [843377]: This value must be 0.
*****************************************************************
========================= CLASS #378 =============================
(3632) {843425} [843475]: This value is limited to: 0 - No interlacing used.
(3635) {843551} [843601]: This value is limited to: 0 - No interlacing used.
*****************************************************************
========================= CLASS #379 =============================
(3633) {843476} [843503]: 1 - Adam7 interlacing used.
(3636) {843602} [843629]: 1 - Adam7 interlacing used.
*****************************************************************
========================= CLASS #380 =============================
(3638) {843691} [843772]: ------------ Answer the pixel size in bits based on the color type and bit depth.
(3639) {843691} [843772]: ------------ Answer the pixel size in bits based on the color type and bit depth.
*****************************************************************
========================= CLASS #381 =============================
(3655) {845903} [845945]: This is not valid for palette color types.
(3656) {845946} [845986]: This is not valid for alpha color types.
*****************************************************************
========================= CLASS #382 =============================
(3664) {846706} [846965]: &lt;p&gt; The coordinate space for rectangles and points is considered to have increasing values downward and to the right from its origin making this the normal, computer graphics oriented notion of (x, y) coordinates rather than the strict mathematical one.
(3700) {855557} [855816]: &lt;p&gt; The coordinate space for rectangles and points is considered to have increasing values downward and to the right from its origin making this the normal, computer graphics oriented notion of (x, y) coordinates rather than the strict mathematical one.
*****************************************************************
========================= CLASS #383 =============================
(3688) {852733} [852827]: This new value will be ignored if it is not greater than the receiver's current minimum value.
(3691) {853334} [853440]: This new value will be ignored if it is negative or is not less than the receiver's current maximum value.
(3905) {907113} [907207]: This new value will be ignored if it is not greater than the receiver's current minimum value.
(3908) {907714} [907820]: This new value will be ignored if it is negative or is not less than the receiver's current maximum value.
(4287) {997103} [997190]: This new value will be ignored if it is less than the receiver's current minimum value.
(4290) {997709} [997799]: This new value will be ignored if it is greater than the receiver's current maximum value.
*****************************************************************
========================= CLASS #384 =============================
(3689) {852829} [852954]: If the new maximum is applied then the receiver's selection value will be adjusted if necessary to fall within its new range.
(3692) {853442} [853567]: If the new minimum is applied then the receiver's selection value will be adjusted if necessary to fall within its new range.
(3906) {907209} [907334]: If the new maximum is applied then the receiver's selection value will be adjusted if necessary to fall within its new range.
(3909) {907822} [907947]: If the new minimum is applied then the receiver's selection value will be adjusted if necessary to fall within its new range.
(4288) {997192} [997317]: If the new maximum is applied then the receiver's selection value will be adjusted if necessary to fall within its new range.
(4291) {997801} [997926]: If the new minimum is applied then the receiver's selection value will be adjusted if necessary to fall within its new range.
*****************************************************************
========================= CLASS #385 =============================
(3706) {857165} [857313]: &lt;p&gt; The union of two rectangles is the smallest single rectangle that completely covers both of the areas covered by the two given rectangles.
(3723) {862045} [862193]: &lt;p&gt; The union of two rectangles is the smallest single rectangle that completely covers both of the areas covered by the two given rectangles.
*****************************************************************
========================= CLASS #386 =============================
(3716) {860059} [860168]: &lt;p&gt; Two rectangles intersect if the area of the rectangle representing their intersection is not empty.
(3718) {860842} [860951]: &lt;p&gt; Two rectangles intersect if the area of the rectangle representing their intersection is not empty.
*****************************************************************
========================= CLASS #387 =============================
(3773) {877271} [877513]: However, it has not been marked final to allow those outside of the SWT development team to implement patched versions of the class in order to get around specific limitations in advance of when those limitations can be addressed by the team.
(6369) {1461293} [1461535]: However, it has not been marked final to allow those outside of the SWT development team to implement patched versions of the class in order to get around specific limitations in advance of when those limitations can be addressed by the team.
*****************************************************************
========================= CLASS #388 =============================
(3774) {877515} [877677]: Any class built using subclassing to access the internals of this class will likely fail to compile or run between releases and may be strongly platform specific.
(6370) {1461537} [1461699]: Any class built using subclassing to access the internals of this class will likely fail to compile or run between releases and may be strongly platform specific.
*****************************************************************
========================= CLASS #389 =============================
(3775) {877678} [877794]: Subclassing should not be attempted without an intimate and detailed understanding of the workings of the hierarchy.
(6371) {1461700} [1461816]: Subclassing should not be attempted without an intimate and detailed understanding of the workings of the hierarchy.
(6393) {1467068} [1467168]: Subclassing should not be attempted without an intimate and detailed understanding of the hierarchy.
*****************************************************************
========================= CLASS #390 =============================
(3776) {877795} [877893]: No support is provided for user-written classes which are implemented as subclasses of this class.
(6372) {1461817} [1461915]: No support is provided for user-written classes which are implemented as subclasses of this class.
(6391) {1466703} [1466789]: No support is provided for user-written classes which are implemented in this fashion.
*****************************************************************
========================= CLASS #391 =============================
(3779) {878455} [878516]: This method does nothing if the resource is already disposed.
(6409) {1469478} [1469537]: This method does nothing if the widget is already disposed.
*****************************************************************
========================= CLASS #392 =============================
(3787) {879628} [879720]: A color may be described in terms of the relative intensities of these three primary colors.
(3802) {884182} [884274]: A color may be described in terms of the relative intensities of these three primary colors.
*****************************************************************
========================= CLASS #393 =============================
(3788) {879721} [879872]: The brightness of each color is specified by a value in the range 0 to 255, where 0 indicates no color (blackness) and 255 indicates maximum intensity.
(3803) {884275} [884489]: The brightness of each color is specified by a value in the range 0 to 255, where 0 indicates no color (blackness) and 255 indicates maximum intensity and for alpha 0 indicates transparent and 255 indicates opaque.
*****************************************************************
========================= CLASS #394 =============================
(3794) {881288} [882643]: @param hue the hue value for the HSB color (from 0 to 360) @param saturation the saturation value for the HSB color (from 0 to 1) @param brightness the brightness value for the HSB color (from 0 to 1) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the hue is not between 0 and 360 or the saturation or brightness is not between 0 and 1&lt;/li&gt; &lt;/ul&gt; @since 3.2 / public RGB(float hue, float saturation, float brightness) { if (hue &lt; 0 || hue &gt; 360 || saturation &lt; 0 || saturation &gt; 1 || brightness &lt; 0 || brightness &gt; 1) { SWT.error(SWT.ERROR_INVALID_ARGUMENT); } float r, g, b; if (saturation == 0) { r = g = b = brightness; } else { if (hue == 360) hue = 0; hue /= 60; int i = (int)hue; float f = hue - i; float p = brightness * (1 - saturation); float q = brightness * (1 - saturation * f); float t = brightness * (1 - saturation * (1 - f)); switch(i) { case 0: r = brightness; g = t; b = p; break; case 1: r = q; g = brightness; b = p; break; case 2: r = p; g = brightness; b = t; break; case 3: r = p; g = q; b = brightness; break; case 4: r = t; g = p; b = brightness; break; case 5: default: r = brightness; g = p; b = q; break; } } red = (int)(r * 255 + 0.5); green = (int)(g * 255 + 0.5); blue = (int)(b * 255 + 0.5); } Returns the hue, saturation, and brightness of the color.
(3809) {885943} [886743]: @param hue the hue value for the HSBA color (from 0 to 360) @param saturation the saturation value for the HSBA color (from 0 to 1) @param brightness the brightness value for the HSBA color (from 0 to 1) @param alpha the alpha value for the HSBA color (from 0 to 255) @exception IllegalArgumentException &lt;ul&gt; &lt;li&gt;ERROR_INVALID_ARGUMENT - if the hue is not between 0 and 360 or the saturation or brightness is not between 0 and 1 or if the alpha is not between 0 and 255&lt;/li&gt; &lt;/ul&gt; / public RGBA(float hue, float saturation, float brightness, float alpha) { if ((alpha &gt; 255) || (alpha &lt; 0)) SWT.error(SWT.ERROR_INVALID_ARGUMENT); rgb = new RGB(hue, saturation, brightness); this.alpha = (int)(alpha + 0.5); } Returns the hue, saturation, and brightness of the color.
*****************************************************************
========================= CLASS #395 =============================
(3932) {915285} [915574]: &lt;p&gt; At any given moment, a given scroll bar will have a single 'selection' that is considered to be its value, which is constrained to be within the range of values the scroll bar represents (that is, between its &lt;em&gt;minimum&lt;/em&gt; and &lt;em&gt;maximum&lt;/em&gt; values).
(4200) {973102} [973383]: &lt;p&gt; At any given moment, a given slider will have a single 'selection' that is considered to be its value, which is constrained to be within the range of values the slider represents (that is, between its &lt;em&gt;minimum&lt;/em&gt; and &lt;em&gt;maximum&lt;/em&gt; values).
*****************************************************************
========================= CLASS #396 =============================
(3933) {915575} [916409]: &lt;/p&gt;&lt;p&gt; Typically, scroll bars will be made up of five areas: &lt;ol&gt; &lt;li&gt;an arrow button for decrementing the value&lt;/li&gt; &lt;li&gt;a page decrement area for decrementing the value by a larger amount&lt;/li&gt; &lt;li&gt;a &lt;em&gt;thumb&lt;/em&gt; for modifying the value by mouse dragging&lt;/li&gt; &lt;li&gt;a page increment area for incrementing the value by a larger amount&lt;/li&gt; &lt;li&gt;an arrow button for incrementing the value&lt;/li&gt; &lt;/ol&gt; Based on their style, scroll bars are either &lt;code&gt;HORIZONTAL&lt;/code&gt; (which have a left facing button for decrementing the value and a right facing button for incrementing it) or &lt;code&gt;VERTICAL&lt;/code&gt; (which have an upward facing button for decrementing the value and a downward facing buttons for incrementing it).
(4201) {973384} [974210]: &lt;/p&gt;&lt;p&gt; Typically, sliders will be made up of five areas: &lt;ol&gt; &lt;li&gt;an arrow button for decrementing the value&lt;/li&gt; &lt;li&gt;a page decrement area for decrementing the value by a larger amount&lt;/li&gt; &lt;li&gt;a &lt;em&gt;thumb&lt;/em&gt; for modifying the value by mouse dragging&lt;/li&gt; &lt;li&gt;a page increment area for incrementing the value by a larger amount&lt;/li&gt; &lt;li&gt;an arrow button for incrementing the value&lt;/li&gt; &lt;/ol&gt; Based on their style, sliders are either &lt;code&gt;HORIZONTAL&lt;/code&gt; (which have a left facing button for decrementing the value and a right facing button for incrementing it) or &lt;code&gt;VERTICAL&lt;/code&gt; (which have an upward facing button for decrementing the value and a downward facing buttons for incrementing it).
*****************************************************************
========================= CLASS #397 =============================
(3934) {916410} [916638]: &lt;/p&gt;&lt;p&gt; On some platforms, the size of the scroll bar's thumb can be varied relative to the magnitude of the range of values it represents (that is, relative to the difference between its maximum and minimum values).
(4202) {974211} [974435]: &lt;/p&gt;&lt;p&gt; On some platforms, the size of the slider's thumb can be varied relative to the magnitude of the range of values it represents (that is, relative to the difference between its maximum and minimum values).
*****************************************************************
========================= CLASS #398 =============================
(3935) {916639} [916813]: Typically, this is used to indicate some proportional value such as the ratio of the visible area of a document to the total amount of space that it would take to display it.
(4203) {974436} [974610]: Typically, this is used to indicate some proportional value such as the ratio of the visible area of a document to the total amount of space that it would take to display it.
*****************************************************************
========================= CLASS #399 =============================
(3936) {916814} [916958]: SWT supports setting the thumb size even if the underlying platform does not, but in this case the appearance of the scroll bar will not change.
(4204) {974611} [974751]: SWT supports setting the thumb size even if the underlying platform does not, but in this case the appearance of the slider will not change.
*****************************************************************
========================= CLASS #400 =============================
(3985) {928602} [928687]: If this value is negative or less than or equal to the minimum, the value is ignored.
(3988) {929084} [929172]: If this value is negative or greater than or equal to the maximum, the value is ignored.
(4231) {981188} [981273]: If this value is negative or less than or equal to the minimum, the value is ignored.
(4234) {981718} [981806]: If this value is negative or greater than or equal to the maximum, the value is ignored.
*****************************************************************
========================= CLASS #401 =============================
(3986) {928688} [928782]: If necessary, first the thumb and then the selection are adjusted to fit within the new range.
(3989) {929173} [929267]: If necessary, first the thumb and then the selection are adjusted to fit within the new range.
(4232) {981274} [981368]: If necessary, first the thumb and then the selection are adjusted to fit within the new range.
(4235) {981807} [981901]: If necessary, first the thumb and then the selection are adjusted to fit within the new range.
*****************************************************************
========================= CLASS #402 =============================
(3993) {930481} [930577]: The thumb value should be used to represent the size of the visual portion of the current range.
(4239) {983088} [983184]: The thumb value should be used to represent the size of the visual portion of the current range.
*****************************************************************
========================= CLASS #403 =============================
(3994) {930578} [930637]: This value is usually the same as the page increment value.
(4240) {983185} [983244]: This value is usually the same as the page increment value.
*****************************************************************
========================= CLASS #404 =============================
(3995) {930638} [930766]: &lt;p&gt; This new value will be ignored if it is less than one, and will be clamped if it exceeds the receiver's current range.
(4241) {983245} [983373]: &lt;p&gt; This new value will be ignored if it is less than one, and will be clamped if it exceeds the receiver's current range.
*****************************************************************
========================= CLASS #405 =============================
(3997) {931247} [931414]: &lt;p&gt; Note: This is similar to setting the values individually using the appropriate methods, but may be implemented in a more efficient fashion on some platforms.
(4243) {983854} [984021]: &lt;p&gt; Note: This is similar to setting the values individually using the appropriate methods, but may be implemented in a more efficient fashion on some platforms.
(4299) {1000142} [1000309]: &lt;p&gt; Note: This is similar to setting the values individually using the appropriate methods, but may be implemented in a more efficient fashion on some platforms.
*****************************************************************
========================= CLASS #406 =============================
(4037) {939110} [939158]: public int x; The y location of selected area.
(5851) {1331474} [1331545]: public int x; The y location of the touch in TouchSource coordinates.
*****************************************************************
========================= CLASS #407 =============================
(4055) {941505} [941621]: &lt;p&gt; For example, selection occurs in a List when the user selects an item or items with the keyboard or mouse.
(4060) {941970} [942108]: &lt;p&gt; For example, on some platforms default selection occurs in a List when the user double-clicks an item or types return in a Text.
*****************************************************************
========================= CLASS #408 =============================
(4056) {941623} [941697]: On some platforms, the event occurs when a mouse button or key is pressed.
(4061) {942109} [942183]: On some platforms, the event occurs when a mouse button or key is pressed.
*****************************************************************
========================= CLASS #409 =============================
(4057) {941699} [941755]: On others, it happens when the mouse or key is released.
(4062) {942185} [942241]: On others, it happens when the mouse or key is released.
*****************************************************************
========================= CLASS #410 =============================
(4058) {941757} [941832]: The exact key or mouse gesture that causes this event is platform specific.
(4063) {942242} [942317]: The exact key or mouse gesture that causes this event is platform specific.
*****************************************************************
========================= CLASS #411 =============================
(4097) {949509} [949583]: &lt;p&gt; Note: Currently, null can be passed in for the display argument.
(4104) {950837} [950921]: &lt;/p&gt;&lt;p&gt; Note: Currently, null can be passed in for the display argument.
(4109) {952036} [952100]: &lt;p&gt; Note: Currently, null can be passed in for the parent.
(4116) {953475} [953549]: &lt;/p&gt;&lt;p&gt; Note: Currently, null can be passed in for the parent.
(5905) {1340806} [1340890]: &lt;/p&gt;&lt;p&gt; Note: Currently, null can be passed in for the display argument.
*****************************************************************
========================= CLASS #412 =============================
(4098) {949584} [949674]: This has the effect of creating the shell on the currently active display if there is one.
(4105) {950922} [951012]: This has the effect of creating the shell on the currently active display if there is one.
(4110) {952101} [952191]: This has the effect of creating the shell on the currently active display if there is one.
(4117) {953550} [953640]: This has the effect of creating the shell on the currently active display if there is one.
(5906) {1340891} [1340983]: This has the effect of creating the tracker on the currently active display if there is one.
*****************************************************************
========================= CLASS #413 =============================
(4099) {949675} [949751]: If there is no current display, the shell is created on a "default" display.
(4106) {951013} [951089]: If there is no current display, the shell is created on a "default" display.
(4111) {952192} [952268]: If there is no current display, the shell is created on a "default" display.
(4118) {953641} [953717]: If there is no current display, the shell is created on a "default" display.
(5907) {1340984} [1341062]: If there is no current display, the tracker is created on a "default" display.
*****************************************************************
========================= CLASS #414 =============================
(4157) {966012} [966133]: If the new minimum size is larger than the current size of the receiver, the receiver is resized to the new minimum size.
(4159) {966572} [966693]: If the new minimum size is larger than the current size of the receiver, the receiver is resized to the new minimum size.
*****************************************************************
========================= CLASS #415 =============================
(4308) {1002358} [1002759]: * @see org.eclipse.swt.widgets.Widget#addListener @see org.eclipse.swt.widgets.Display#addFilter @see org.eclipse.swt.widgets.Event * @see org.eclipse.swt.widgets.Control#addKeyListener @see org.eclipse.swt.widgets.Tracker#addKeyListener @see org.eclipse.swt.events.KeyListener#keyPressed @see org.eclipse.swt.events.KeyEvent public static final int KeyDown = 1; The key up event type (value is 2).
(4309) {1002760} [1003164]: * @see org.eclipse.swt.widgets.Widget#addListener @see org.eclipse.swt.widgets.Display#addFilter @see org.eclipse.swt.widgets.Event * @see org.eclipse.swt.widgets.Control#addKeyListener @see org.eclipse.swt.widgets.Tracker#addKeyListener @see org.eclipse.swt.events.KeyListener#keyReleased @see org.eclipse.swt.events.KeyEvent public static final int KeyUp = 2; The mouse down event type (value is 3).
(4310) {1003165} [1003523]: * @see org.eclipse.swt.widgets.Widget#addListener @see org.eclipse.swt.widgets.Display#addFilter @see org.eclipse.swt.widgets.Event * @see org.eclipse.swt.widgets.Control#addMouseListener @see org.eclipse.swt.events.MouseListener#mouseDown @see org.eclipse.swt.events.MouseEvent public static final int MouseDown = 3; The mouse up event type (value is 4).
(4311) {1003524} [1003880]: * @see org.eclipse.swt.widgets.Widget#addListener @see org.eclipse.swt.widgets.Display#addFilter @see org.eclipse.swt.widgets.Event * @see org.eclipse.swt.widgets.Control#addMouseListener @see org.eclipse.swt.events.MouseListener#mouseUp @see org.eclipse.swt.events.MouseEvent public static final int MouseUp = 4; The mouse move event type (value is 5).
(4312) {1003881} [1004250]: * @see org.eclipse.swt.widgets.Widget#addListener @see org.eclipse.swt.widgets.Display#addFilter @see org.eclipse.swt.widgets.Event * @see org.eclipse.swt.widgets.Control#addMouseMoveListener @see org.eclipse.swt.events.MouseMoveListener#mouseMove @see org.eclipse.swt.events.MouseEvent public static final int MouseMove = 5; The mouse enter event type (value is 6).
(4313) {1004251} [1004623]: * @see org.eclipse.swt.widgets.Widget#addListener @see org.eclipse.swt.widgets.Display#addFilter @see org.eclipse.swt.widgets.Event * @see org.eclipse.swt.widgets.Control#addMouseTrackListener @see org.eclipse.swt.events.MouseTrackListener#mouseEnter @see org.eclipse.swt.events.MouseEvent public static final int MouseEnter = 6; The mouse exit event type (value is 7).
(4314) {1004624} [1005002]: * @see org.eclipse.swt.widgets.Widget#addListener @see org.eclipse.swt.widgets.Display#addFilter @see org.eclipse.swt.widgets.Event * @see org.eclipse.swt.widgets.Control#addMouseTrackListener @see org.eclipse.swt.events.MouseTrackListener#mouseExit @see org.eclipse.swt.events.MouseEvent public static final int MouseExit = 7; The mouse double click event type (value is 8).
(4315) {1005003} [1005372]: * @see org.eclipse.swt.widgets.Widget#addListener @see org.eclipse.swt.widgets.Display#addFilter @see org.eclipse.swt.widgets.Event * @see org.eclipse.swt.widgets.Control#addMouseListener @see org.eclipse.swt.events.MouseListener#mouseDoubleClick @see org.eclipse.swt.events.MouseEvent public static final int MouseDoubleClick = 8; The paint event type (value is 9).
(4316) {1005373} [1005727]: * @see org.eclipse.swt.widgets.Widget#addListener @see org.eclipse.swt.widgets.Display#addFilter @see org.eclipse.swt.widgets.Event * @see org.eclipse.swt.widgets.Control#addPaintListener @see org.eclipse.swt.events.PaintListener#paintControl @see org.eclipse.swt.events.PaintEvent public static final int Paint = 9; The move event type (value is 10).
(4319) {1006809} [1007227]: * @see org.eclipse.swt.widgets.Widget#addListener @see org.eclipse.swt.widgets.Display#addListener @see org.eclipse.swt.widgets.Display#addFilter @see org.eclipse.swt.widgets.Event * @see org.eclipse.swt.widgets.Widget#addDisposeListener @see org.eclipse.swt.events.DisposeListener#widgetDisposed @see org.eclipse.swt.events.DisposeEvent public static final int Dispose = 12; The selection event type (value is 13).
(4338) {1015464} [1015838]: * @see org.eclipse.swt.widgets.Widget#addListener @see org.eclipse.swt.widgets.Display#addFilter @see org.eclipse.swt.widgets.Event * @see org.eclipse.swt.widgets.Control#addTraverseListener @see org.eclipse.swt.events.TraverseListener#keyTraversed @see org.eclipse.swt.events.TraverseEvent public static final int Traverse = 31; The mouse hover event type (value is 32).
(4339) {1015839} [1016220]: * @see org.eclipse.swt.widgets.Widget#addListener @see org.eclipse.swt.widgets.Display#addFilter @see org.eclipse.swt.widgets.Event * @see org.eclipse.swt.widgets.Control#addMouseTrackListener @see org.eclipse.swt.events.MouseTrackListener#mouseHover @see org.eclipse.swt.events.MouseEvent public static final int MouseHover = 32; The hardware key down event type (value is 33).
(4340) {1016221} [1016443]: * @see org.eclipse.swt.widgets.Widget#addListener @see org.eclipse.swt.widgets.Display#addFilter @see org.eclipse.swt.widgets.Event public static final int HardKeyDown = 33; The hardware key up event type (value is 34).
(4341) {1016444} [1016660]: * @see org.eclipse.swt.widgets.Widget#addListener @see org.eclipse.swt.widgets.Display#addFilter @see org.eclipse.swt.widgets.Event public static final int HardKeyUp = 34; The menu detect event type (value is 35).
*****************************************************************
========================= CLASS #416 =============================
(4317) {1005728} [1006265]: * @see org.eclipse.swt.widgets.Widget#addListener @see org.eclipse.swt.widgets.Display#addFilter @see org.eclipse.swt.widgets.Event * @see org.eclipse.swt.widgets.Control#addControlListener @see org.eclipse.swt.widgets.TableColumn#addControlListener @see org.eclipse.swt.widgets.Tracker#addControlListener @see org.eclipse.swt.widgets.TreeColumn#addControlListener @see org.eclipse.swt.events.ControlListener#controlMoved @see org.eclipse.swt.events.ControlEvent public static final int Move = 10; The resize event type (value is 11).
(4318) {1006266} [1006808]: * @see org.eclipse.swt.widgets.Widget#addListener @see org.eclipse.swt.widgets.Display#addFilter @see org.eclipse.swt.widgets.Event * @see org.eclipse.swt.widgets.Control#addControlListener @see org.eclipse.swt.widgets.TableColumn#addControlListener @see org.eclipse.swt.widgets.Tracker#addControlListener @see org.eclipse.swt.widgets.TreeColumn#addControlListener @see org.eclipse.swt.events.ControlListener#controlResized @see org.eclipse.swt.events.ControlEvent public static final int Resize = 11; The dispose event type (value is 12).
*****************************************************************
========================= CLASS #417 =============================
(4320) {1007228} [1008537]: * @see org.eclipse.swt.widgets.Widget#addListener @see org.eclipse.swt.widgets.Display#addFilter @see org.eclipse.swt.widgets.Event * @see org.eclipse.swt.widgets.Button#addSelectionListener @see org.eclipse.swt.widgets.Combo#addSelectionListener @see org.eclipse.swt.widgets.CoolItem#addSelectionListener @see org.eclipse.swt.widgets.Link#addSelectionListener @see org.eclipse.swt.widgets.List#addSelectionListener @see org.eclipse.swt.widgets.MenuItem#addSelectionListener @see org.eclipse.swt.widgets.Sash#addSelectionListener @see org.eclipse.swt.widgets.Scale#addSelectionListener @see org.eclipse.swt.widgets.ScrollBar#addSelectionListener @see org.eclipse.swt.widgets.Slider#addSelectionListener @see org.eclipse.swt.widgets.TabFolder#addSelectionListener @see org.eclipse.swt.widgets.Table#addSelectionListener @see org.eclipse.swt.widgets.TableColumn#addSelectionListener @see org.eclipse.swt.widgets.ToolItem#addSelectionListener @see org.eclipse.swt.widgets.TrayItem#addSelectionListener @see org.eclipse.swt.widgets.Tree#addSelectionListener @see org.eclipse.swt.widgets.TreeColumn#addSelectionListener @see org.eclipse.swt.events.SelectionListener#widgetSelected @see org.eclipse.swt.events.SelectionEvent public static final int Selection = 13; The default selection event type (value is 14).
(4321) {1008538} [1009265]: * @see org.eclipse.swt.widgets.Widget#addListener @see org.eclipse.swt.widgets.Display#addFilter @see org.eclipse.swt.widgets.Event * @see org.eclipse.swt.widgets.Combo#addSelectionListener @see org.eclipse.swt.widgets.List#addSelectionListener @see org.eclipse.swt.widgets.Spinner#addSelectionListener @see org.eclipse.swt.widgets.Table#addSelectionListener @see org.eclipse.swt.widgets.Text#addSelectionListener @see org.eclipse.swt.widgets.TrayItem#addSelectionListener @see org.eclipse.swt.widgets.Tree#addSelectionListener @see org.eclipse.swt.events.SelectionListener#widgetDefaultSelected @see org.eclipse.swt.events.SelectionEvent public static final int DefaultSelection = 14; The focus in event type (value is 15).
(4324) {1009986} [1010340]: * @see org.eclipse.swt.widgets.Widget#addListener @see org.eclipse.swt.widgets.Display#addFilter @see org.eclipse.swt.widgets.Event * @see org.eclipse.swt.widgets.Tree#addTreeListener @see org.eclipse.swt.events.TreeListener#treeExpanded @see org.eclipse.swt.events.TreeEvent public static final int Expand = 17; The collapse event type (value is 18).
(4325) {1010341} [1010697]: * @see org.eclipse.swt.widgets.Widget#addListener @see org.eclipse.swt.widgets.Display#addFilter @see org.eclipse.swt.widgets.Event * @see org.eclipse.swt.widgets.Tree#addTreeListener @see org.eclipse.swt.events.TreeListener#treeCollapsed @see org.eclipse.swt.events.TreeEvent public static final int Collapse = 18; The iconify event type (value is 19).
(4337) {1015112} [1015463]: * @see org.eclipse.swt.widgets.Widget#addListener @see org.eclipse.swt.widgets.Display#addFilter @see org.eclipse.swt.widgets.Event * @see org.eclipse.swt.widgets.MenuItem#addArmListener @see org.eclipse.swt.events.ArmListener#widgetArmed @see org.eclipse.swt.events.ArmEvent public static final int Arm = 30; The traverse event type (value is 31).
*****************************************************************
========================= CLASS #418 =============================
(4322) {1009266} [1009627]: * @see org.eclipse.swt.widgets.Widget#addListener @see org.eclipse.swt.widgets.Display#addFilter @see org.eclipse.swt.widgets.Event * @see org.eclipse.swt.widgets.Control#addFocusListener @see org.eclipse.swt.events.FocusListener#focusGained @see org.eclipse.swt.events.FocusEvent public static final int FocusIn = 15; The focus out event type (value is 16).
(4323) {1009628} [1009985]: * @see org.eclipse.swt.widgets.Widget#addListener @see org.eclipse.swt.widgets.Display#addFilter @see org.eclipse.swt.widgets.Event * @see org.eclipse.swt.widgets.Control#addFocusListener @see org.eclipse.swt.events.FocusListener#focusLost @see org.eclipse.swt.events.FocusEvent public static final int FocusOut = 16; The expand event type (value is 17).
*****************************************************************
========================= CLASS #419 =============================
(4326) {1010698} [1011061]: * @see org.eclipse.swt.widgets.Widget#addListener @see org.eclipse.swt.widgets.Display#addFilter @see org.eclipse.swt.widgets.Event * @see org.eclipse.swt.widgets.Shell#addShellListener @see org.eclipse.swt.events.ShellListener#shellIconified @see org.eclipse.swt.events.ShellEvent public static final int Iconify = 19; The de-iconify event type (value is 20).
(4327) {1011062} [1011424]: * @see org.eclipse.swt.widgets.Widget#addListener @see org.eclipse.swt.widgets.Display#addFilter @see org.eclipse.swt.widgets.Event * @see org.eclipse.swt.widgets.Shell#addShellListener @see org.eclipse.swt.events.ShellListener#shellDeiconified @see org.eclipse.swt.events.ShellEvent public static final int Deiconify = 20; The close event type (value is 21).
(4328) {1011425} [1011826]: * @see org.eclipse.swt.widgets.Widget#addListener @see org.eclipse.swt.widgets.Display#addListener @see org.eclipse.swt.widgets.Display#addFilter @see org.eclipse.swt.widgets.Event * @see org.eclipse.swt.widgets.Shell#addShellListener @see org.eclipse.swt.events.ShellListener#shellClosed @see org.eclipse.swt.events.ShellEvent public static final int Close = 21; The show event type (value is 22).
(4333) {1013509} [1013873]: * @see org.eclipse.swt.widgets.Widget#addListener @see org.eclipse.swt.widgets.Display#addFilter @see org.eclipse.swt.widgets.Event * @see org.eclipse.swt.widgets.Shell#addShellListener @see org.eclipse.swt.events.ShellListener#shellActivated @see org.eclipse.swt.events.ShellEvent public static final int Activate = 26; The deactivate event type (value is 27).
(4334) {1013874} [1014236]: * @see org.eclipse.swt.widgets.Widget#addListener @see org.eclipse.swt.widgets.Display#addFilter @see org.eclipse.swt.widgets.Event * @see org.eclipse.swt.widgets.Shell#addShellListener @see org.eclipse.swt.events.ShellListener#shellDeactivated @see org.eclipse.swt.events.ShellEvent public static final int Deactivate = 27; The help event type (value is 28).
*****************************************************************
========================= CLASS #420 =============================
(4329) {1011827} [1012172]: * @see org.eclipse.swt.widgets.Widget#addListener @see org.eclipse.swt.widgets.Display#addFilter @see org.eclipse.swt.widgets.Event * @see org.eclipse.swt.widgets.Menu#addMenuListener @see org.eclipse.swt.events.MenuListener#menuShown @see org.eclipse.swt.events.MenuEvent public static final int Show = 22; The hide event type (value is 23).
(4330) {1012173} [1012521]: * @see org.eclipse.swt.widgets.Widget#addListener @see org.eclipse.swt.widgets.Display#addFilter @see org.eclipse.swt.widgets.Event * @see org.eclipse.swt.widgets.Menu#addMenuListener @see org.eclipse.swt.events.MenuListener#menuHidden @see org.eclipse.swt.events.MenuEvent public static final int Hide = 23; The modify event type (value is 24).
*****************************************************************
========================= CLASS #421 =============================
(4342) {1016661} [1017113]: * @see org.eclipse.swt.widgets.Widget#addListener @see org.eclipse.swt.widgets.Display#addFilter @see org.eclipse.swt.widgets.Event * @see org.eclipse.swt.widgets.Control#addMenuDetectListener @see org.eclipse.swt.widgets.TrayItem#addMenuDetectListener @see org.eclipse.swt.events.MenuDetectListener#menuDetected @see org.eclipse.swt.events.MenuDetectEvent * @since 3.0 public static final int MenuDetect = 35; The set data event type (value is 36).
(4343) {1017114} [1017421]: * @see org.eclipse.swt.widgets.Widget#addListener @see org.eclipse.swt.widgets.Display#addFilter @see org.eclipse.swt.widgets.Event * @see org.eclipse.swt.widgets.Table @see org.eclipse.swt.widgets.Tree * @since 3.0 public static final int SetData = 36; The mouse vertical wheel event type (value is 37).
(4344) {1017422} [1017682]: * @see org.eclipse.swt.widgets.Control#addMouseWheelListener @see org.eclipse.swt.widgets.Display#addFilter @see org.eclipse.swt.widgets.Event * @since 3.6 public static final int MouseVerticalWheel = 37; The mouse horizontal wheel event type (value is 38).
(4345) {1017683} [1017923]: * @see org.eclipse.swt.widgets.Widget#addListener @see org.eclipse.swt.widgets.Display#addFilter @see org.eclipse.swt.widgets.Event * @since 3.6 public static final int MouseHorizontalWheel = 38; The mouse wheel event type (value is 37).
(4348) {1018112} [1018374]: * @see org.eclipse.swt.widgets.Control#addMouseWheelListener @see org.eclipse.swt.widgets.Display#addFilter @see org.eclipse.swt.widgets.Event * @since 3.1 public static final int MouseWheel = MouseVerticalWheel; The settings changed event type (value is 39).
(4355) {1019111} [1019341]: * @see org.eclipse.swt.widgets.Widget#addListener @see org.eclipse.swt.widgets.Display#addFilter @see org.eclipse.swt.widgets.Event * @since 3.2 public static final int EraseItem = 40; The measure item event type (value is 41).
(4356) {1019342} [1019572]: * @see org.eclipse.swt.widgets.Widget#addListener @see org.eclipse.swt.widgets.Display#addFilter @see org.eclipse.swt.widgets.Event * @since 3.2 public static final int MeasureItem = 41; The paint item event type (value is 42).
(4357) {1019573} [1019806]: * @see org.eclipse.swt.widgets.Widget#addListener @see org.eclipse.swt.widgets.Display#addFilter @see org.eclipse.swt.widgets.Event * @since 3.2 public static final int PaintItem = 42; The IME composition event type (value is 43).
*****************************************************************
========================= CLASS #422 =============================
(4347) {1017989} [1018111]: Newer applications should use {@link #MouseVerticalWheel} instead of {@link #MouseWheel} to make code more understandable.
(4580) {1061783} [1061912]: Newer applications should use {@link #LEAD} instead of {@link #LEFT} to make code more understandable on right-to-left platforms.
(4585) {1062844} [1062975]: Newer applications should use {@link #TRAIL} instead of {@link #RIGHT} to make code more understandable on right-to-left platforms.
*****************************************************************
========================= CLASS #423 =============================
(4365) {1021262} [1021357]: * &lt;p&gt; This event is sent when SWT receives notification that a document should be opened.
(4367) {1021549} [1021642]: * &lt;p&gt; This event is sent when a touch has been performed on a touch-based input source.
(4369) {1021829} [1021894]: * &lt;p&gt; This event is sent when a gesture has been performed.
(4371) {1022177} [1022243]: * &lt;p&gt; This event is sent when text content has been changed.
*****************************************************************
========================= CLASS #424 =============================
(4373) {1022576} [1022720]: * &lt;p&gt; This event is sent before an event other than {@link #PreExternalEventDispatch} or {@link #PostExternalEventDispatch} is dispatched.
(4376) {1022922} [1023065]: * &lt;p&gt; This event is sent after an event other than {@link #PreExternalEventDispatch} or {@link #PostExternalEventDispatch} is dispatched.
*****************************************************************
========================= CLASS #425 =============================
(4379) {1023279} [1023400]: * &lt;p&gt; This event is sent before calling a blocking method that does its own event dispatch outside of the SWT code.
(4381) {1023541} [1023661]: * &lt;p&gt; This event is sent after calling a blocking method that does its own event dispatch outside of the SWT code.
*****************************************************************
========================= CLASS #426 =============================
(4391) {1024718} [1024853]: The count field should be set to indicate whether the location is closer to the leading edge (0) or the trailing edge (1) (value is 2).
(5616) {1276932} [1277086]: For a typical character, the trailing argument will be filled in to indicate whether the point is closer to the leading edge (0) or the trailing edge (1).
(5619) {1277820} [1277974]: For a typical character, the trailing argument will be filled in to indicate whether the point is closer to the leading edge (0) or the trailing edge (1).
*****************************************************************
========================= CLASS #427 =============================
(4394) {1025352} [1025489]: public static final int DRAG = 1; Event detail field that indicates a user-interface component state is selected (value is 1&lt;&lt;1).
(4395) {1025490} [1025655]: * @since 3.2 public static final int SELECTED = 1 &lt;&lt; 1; Event detail field that indicates a user-interface component state is focused (value is 1&lt;&lt;2).
(4396) {1025656} [1025824]: * @since 3.2 public static final int FOCUSED = 1 &lt;&lt; 2; Event detail field that indicates a user-interface component draws the background (value is 1&lt;&lt;3).
(4397) {1025825} [1025996]: * @since 3.2 public static final int BACKGROUND = 1 &lt;&lt; 3; Event detail field that indicates a user-interface component draws the foreground (value is 1&lt;&lt;4).
(4398) {1025997} [1026160]: * @since 3.2 public static final int FOREGROUND = 1 &lt;&lt; 4; Event detail field that indicates a user-interface component state is hot (value is 1&lt;&lt;5).
(4422) {1030902} [1030924]: (value is 1&lt;&lt;1).
(4424) {1031276} [1031298]: (value is 1&lt;&lt;2).
*****************************************************************
========================= CLASS #428 =============================
(4399) {1026161} [1026613]: * @since 3.3 public static final int HOT = 1 &lt;&lt; 5; /* This code is intentionally commented */ //public static final int PRESSED = 1 &lt;&lt; 3; //public static final int ACTIVE = 1 &lt;&lt; 4; //public static final int DISABLED = 1 &lt;&lt; 5; //public static final int HOT = 1 &lt;&lt; 6; //public static final int DEFAULTED = 1 &lt;&lt; 7; Traversal event detail field value indicating that no traversal action should be taken (value is 0).
(4406) {1028174} [1028345]: public static final int TRAVERSE_ARROW_NEXT = 1 &lt;&lt; 6; Traversal event detail field value indicating that a mnemonic key sequence was pressed (value is 1&lt;&lt;7).
(5437) {1234291} [1234370]: public static final String DELIMITER; /* This code is intentionally commented.
*****************************************************************
========================= CLASS #429 =============================
(4400) {1026615} [1026836]: public static final int TRAVERSE_NONE = 0; Traversal event detail field value indicating that the key which designates that a dialog should be cancelled was pressed; typically, this is the ESC key (value is 1&lt;&lt;1).
(4401) {1026838} [1027070]: public static final int TRAVERSE_ESCAPE = 1 &lt;&lt; 1; Traversal event detail field value indicating that the key which activates the default button in a dialog was pressed; typically, this is the ENTER key (value is 1&lt;&lt;2).
(4402) {1027072} [1027340]: public static final int TRAVERSE_RETURN = 1 &lt;&lt; 2; Traversal event detail field value indicating that the key which designates that focus should be given to the previous tab group was pressed; typically, this is the SHIFT-TAB key sequence (value is 1&lt;&lt;3).
(4403) {1027342} [1027597]: public static final int TRAVERSE_TAB_PREVIOUS = 1 &lt;&lt; 3; Traversal event detail field value indicating that the key which designates that focus should be given to the next tab group was pressed; typically, this is the TAB key (value is 1&lt;&lt;4).
(4404) {1027599} [1027880]: public static final int TRAVERSE_TAB_NEXT = 1 &lt;&lt; 4; Traversal event detail field value indicating that the key which designates that focus should be given to the previous tab item was pressed; typically, this is either the LEFT-ARROW or UP-ARROW keys (value is 1&lt;&lt;5).
(4405) {1027882} [1028172]: public static final int TRAVERSE_ARROW_PREVIOUS = 1 &lt;&lt; 5; Traversal event detail field value indicating that the key which designates that focus should be given to the previous tab item was pressed; typically, this is either the RIGHT-ARROW or DOWN-ARROW keys (value is 1&lt;&lt;6).
(4407) {1028347} [1028628]: public static final int TRAVERSE_MNEMONIC = 1 &lt;&lt; 7; Traversal event detail field value indicating that the key which designates that the previous page of a multi-page window should be shown was pressed; typically, this is the CTRL-PAGEUP key sequence (value is 1&lt;&lt;8).
(4408) {1028630} [1028914]: public static final int TRAVERSE_PAGE_PREVIOUS = 1 &lt;&lt; 8; Traversal event detail field value indicating that the key which designates that the next page of a multi-page window should be shown was pressed; typically, this is the CTRL-PAGEDOWN key sequence (value is 1&lt;&lt;9).
*****************************************************************
========================= CLASS #430 =============================
(4409) {1028916} [1029065]: public static final int TRAVERSE_PAGE_NEXT = 1 &lt;&lt; 9; Gesture event detail field value indicating that a continuous gesture is about to begin.
(4410) {1029066} [1029216]: * @since 3.7 public static final int GESTURE_BEGIN = 1 &lt;&lt; 1; Gesture event detail field value indicating that a continuous gesture has ended.
(4411) {1029217} [1029366]: * @since 3.7 public static final int GESTURE_END = 1 &lt;&lt; 2; Gesture event detail field value indicating that a rotation gesture has happened.
(4413) {1029414} [1029563]: * @since 3.7 public static final int GESTURE_ROTATE = 1 &lt;&lt; 3; Gesture event detail field value indicating that a swipe gesture has happened.
(4414) {1029564} [1029720]: * @since 3.7 public static final int GESTURE_SWIPE = 1 &lt;&lt; 4; Gesture event detail field value indicating that a magnification gesture has happened.
(4415) {1029721} [1029893]: * @since 3.7 public static final int GESTURE_MAGNIFY = 1 &lt;&lt; 5; Gesture event detail field value indicating that a panning (two-finger scroll) gesture has happened.
*****************************************************************
========================= CLASS #431 =============================
(4416) {1029894} [1030017]: * @since 3.7 public static final int GESTURE_PAN = 1 &lt;&lt; 6; A constant indicating that a finger touched the device.
(4417) {1030018} [1030189]: * @see org.eclipse.swt.widgets.Touch#state * @since 3.7 public static final int TOUCHSTATE_DOWN = 1 &lt;&lt; 0; A constant indicating that a finger moved on the device.
(4418) {1030190} [1030368]: * @see org.eclipse.swt.widgets.Touch#state * @since 3.7 public static final int TOUCHSTATE_MOVE = 1 &lt;&lt; 1; A constant indicating that a finger was lifted from the device.
*****************************************************************
========================= CLASS #432 =============================
(4419) {1030369} [1030606]: * @see org.eclipse.swt.widgets.Touch#state * @since 3.7 public static final int TOUCHSTATE_UP = 1 &lt;&lt; 2; MenuDetect event detail value indicating that a context menu was requested by a mouse or other pointing device (value is 0).
(4420) {1030607} [1030793]: * @since 3.8 public static final int MENU_MOUSE = 0; MenuDetect event detail value indicating that a context menu was requested by a keyboard or other focus-based device (value is 1).
*****************************************************************
========================= CLASS #433 =============================
(4429) {1032020} [1032114]: * @since 3.1 public static final int OFF = 0; Indicates that a property is on (value is 1).
(4430) {1032115} [1032198]: * @since 3.1 public static final int ON = 1; Indicates low quality (value is 1).
(4431) {1032199} [1032284]: * @since 3.1 public static final int LOW = 1; Indicates high quality (value is 2).
*****************************************************************
========================= CLASS #434 =============================
(4457) {1039039} [1039080]: It is currently ignored on all platforms.
(4460) {1039388} [1039429]: It is currently ignored on all platforms.
*****************************************************************
========================= CLASS #435 =============================
(4523) {1050018} [1050118]: &lt;p&gt; By default, before a widget paints, the client area is filled with the current background.
(4556) {1055281} [1055381]: &lt;p&gt; By default, before a widget paints, the client area is filled with the current background.
*****************************************************************
========================= CLASS #436 =============================
(4524) {1050119} [1050257]: When this style is specified, the background is not filled, and the application is responsible for filling every pixel of the client area.
(4557) {1055382} [1055489]: When this style is specified, the background is not filled and widgets that are obscured will draw through.
*****************************************************************
========================= CLASS #437 =============================
(4542) {1052705} [1052786]: &lt;p&gt; When orientation is not explicitly specified, orientation is inherited.
(4547) {1053433} [1053514]: &lt;p&gt; When orientation is not explicitly specified, orientation is inherited.
*****************************************************************
========================= CLASS #438 =============================
(4543) {1052788} [1052862]: This means that children will be assigned the orientation of their parent.
(4548) {1053516} [1053590]: This means that children will be assigned the orientation of their parent.
*****************************************************************
========================= CLASS #439 =============================
(4544) {1052864} [1052999]: To override this behavior and force an orientation for a child, explicitly set the orientation of the child when that child is created.
(4549) {1053592} [1053727]: To override this behavior and force an orientation for a child, explicitly set the orientation of the child when that child is created.
*****************************************************************
========================= CLASS #440 =============================
(4581) {1061913} [1062016]: &lt;p&gt; This constant can also be used to representing the left keyboard location during a key event.
(4586) {1062976} [1063080]: &lt;p&gt; This constant can also be used to representing the right keyboard location during a key event.
*****************************************************************
========================= CLASS #441 =============================
(4599) {1066334} [1066385]: A medium time displays hours, minutes, and seconds.
(4603) {1066763} [1066812]: A long time displays hours, minutes, and seconds.
*****************************************************************
========================= CLASS #442 =============================
(4623) {1070219} [1070413]: * @since 3.7 public static final char SPACE = ' '; keyboard and/or mouse event mask indicating that the ALT key was pushed on the keyboard when the event was generated (value is 1&lt;&lt;16).
(4624) {1070415} [1070604]: public static final int ALT = 1 &lt;&lt; 16; Keyboard and/or mouse event mask indicating that the SHIFT key was pushed on the keyboard when the event was generated (value is 1&lt;&lt;17).
(4625) {1070606} [1070796]: public static final int SHIFT = 1 &lt;&lt; 17; Keyboard and/or mouse event mask indicating that the CTRL key was pushed on the keyboard when the event was generated (value is 1&lt;&lt;18).
(4626) {1070798} [1070964]: public static final int CTRL = 1 &lt;&lt; 18; Keyboard and/or mouse event mask indicating that the CTRL key was pushed on the keyboard when the event was generated.
(4628) {1071017} [1071203]: public static final int CONTROL = CTRL; Keyboard and/or mouse event mask indicating that the COMMAND key was pushed on the keyboard when the event was generated (value is 1&lt;&lt;22).
(4629) {1071204} [1071345]: * @since 2.1 public static final int COMMAND = 1 &lt;&lt; 22; Keyboard and/or mouse event mask indicating all possible keyboard modifiers.
(4633) {1071686} [1071864]: * @since 2.1 public static final int MODIFIER_MASK; Keyboard and/or mouse event mask indicating that mouse button one (usually 'left') was pushed when the event was generated.
(4635) {1071890} [1072066]: public static final int BUTTON1 = 1 &lt;&lt; 19; Keyboard and/or mouse event mask indicating that mouse button two (usually 'middle') was pushed when the event was generated.
(4637) {1072092} [1072269]: public static final int BUTTON2 = 1 &lt;&lt; 20; Keyboard and/or mouse event mask indicating that mouse button three (usually 'right') was pushed when the event was generated.
(4639) {1072295} [1072453]: public static final int BUTTON3 = 1 &lt;&lt; 21; Keyboard and/or mouse event mask indicating that mouse button four was pushed when the event was generated.
(4641) {1072478} [1072650]: * @since 3.1 public static final int BUTTON4 = 1 &lt;&lt; 23; Keyboard and/or mouse event mask indicating that mouse button five was pushed when the event was generated.
(4643) {1072675} [1072811]: * @since 3.1 public static final int BUTTON5 = 1 &lt;&lt; 25; Keyboard and/or mouse event mask indicating all possible mouse buttons.
(4647) {1073142} [1073313]: * @since 2.1 public static final int BUTTON_MASK; Keyboard and/or mouse event mask indicating that the MOD1 key was pushed on the keyboard when the event was generated.
(4650) {1073445} [1073620]: &lt;/p&gt; * @since 2.1 public static final int MOD1; Keyboard and/or mouse event mask indicating that the MOD2 key was pushed on the keyboard when the event was generated.
(4653) {1073725} [1073900]: &lt;/p&gt; * @since 2.1 public static final int MOD2; Keyboard and/or mouse event mask indicating that the MOD3 key was pushed on the keyboard when the event was generated.
(4655) {1073943} [1074118]: &lt;/p&gt; * @since 2.1 public static final int MOD3; Keyboard and/or mouse event mask indicating that the MOD4 key was pushed on the keyboard when the event was generated.
*****************************************************************
========================= CLASS #443 =============================
(4630) {1071346} [1071471]: * To allow for the future, this mask is intended to be used in place of code that references each individual keyboard mask.
(4644) {1072812} [1072934]: * To allow for the future, this mask is intended to be used in place of code that references each individual button mask.
*****************************************************************
========================= CLASS #444 =============================
(4631) {1071473} [1071616]: For example, the following expression will determine whether any modifier is pressed and will continue to work as new modifier masks are added.
(4645) {1072935} [1073074]: For example, the following expression will determine whether any button is pressed and will continue to work as new button masks are added.
*****************************************************************
========================= CLASS #445 =============================
(4648) {1073314} [1073371]: * This is the primary keyboard modifier for the platform.
(4651) {1073621} [1073680]: * This is the secondary keyboard modifier for the platform.
*****************************************************************
========================= CLASS #446 =============================
(4649) {1073372} [1073444]: &lt;p&gt; {@link #CTRL} on most platforms ({@link #COMMAND} on the Mac).
(4652) {1073681} [1073724]: &lt;p&gt; {@link #SHIFT} on most platforms.
(4654) {1073901} [1073942]: &lt;p&gt; {@link #ALT} on most platforms.
(4656) {1074119} [1074184]: &lt;p&gt; Undefined on most platforms ({@link #CTRL} on the Mac).
*****************************************************************
========================= CLASS #447 =============================
(4660) {1074784} [1074874]: * If this bit is set, then the key stroke portion of an accelerator represents a key code.
(4661) {1074876} [1074969]: If this bit is not set, then the key stroke portion of an accelerator is a unicode character.
*****************************************************************
========================= CLASS #448 =============================
(4667) {1075520} [1075674]: * @since 2.1 public static final int KEY_MASK = KEYCODE_BIT + 0xFFFF; Keyboard event constant representing the UP ARROW key (value is (1&lt;&lt;24)+1).
(4668) {1075676} [1075813]: public static final int ARROW_UP = KEYCODE_BIT + 1; Keyboard event constant representing the DOWN ARROW key (value is (1&lt;&lt;24)+2).
(4669) {1075815} [1075954]: public static final int ARROW_DOWN = KEYCODE_BIT + 2; Keyboard event constant representing the LEFT ARROW key (value is (1&lt;&lt;24)+3).
(4670) {1075956} [1076096]: public static final int ARROW_LEFT = KEYCODE_BIT + 3; Keyboard event constant representing the RIGHT ARROW key (value is (1&lt;&lt;24)+4).
(4671) {1076098} [1076235]: public static final int ARROW_RIGHT = KEYCODE_BIT + 4; Keyboard event constant representing the PAGE UP key (value is (1&lt;&lt;24)+5).
(4672) {1076237} [1076372]: public static final int PAGE_UP = KEYCODE_BIT + 5; Keyboard event constant representing the PAGE DOWN key (value is (1&lt;&lt;24)+6).
(4673) {1076374} [1076506]: public static final int PAGE_DOWN = KEYCODE_BIT + 6; Keyboard event constant representing the HOME key (value is (1&lt;&lt;24)+7).
(4674) {1076508} [1076634]: public static final int HOME = KEYCODE_BIT + 7; Keyboard event constant representing the END key (value is (1&lt;&lt;24)+8).
(4675) {1076636} [1076764]: public static final int END = KEYCODE_BIT + 8; Keyboard event constant representing the INSERT key (value is (1&lt;&lt;24)+9).
(4676) {1076766} [1076894]: public static final int INSERT = KEYCODE_BIT + 9; Keyboard event constant representing the F1 key (value is (1&lt;&lt;24)+10).
(4677) {1076896} [1077021]: public static final int F1 = KEYCODE_BIT + 10; Keyboard event constant representing the F2 key (value is (1&lt;&lt;24)+11).
(4678) {1077023} [1077148]: public static final int F2 = KEYCODE_BIT + 11; Keyboard event constant representing the F3 key (value is (1&lt;&lt;24)+12).
(4679) {1077150} [1077275]: public static final int F3 = KEYCODE_BIT + 12; Keyboard event constant representing the F4 key (value is (1&lt;&lt;24)+13).
(4680) {1077277} [1077402]: public static final int F4 = KEYCODE_BIT + 13; Keyboard event constant representing the F5 key (value is (1&lt;&lt;24)+14).
(4681) {1077404} [1077529]: public static final int F5 = KEYCODE_BIT + 14; Keyboard event constant representing the F6 key (value is (1&lt;&lt;24)+15).
(4682) {1077531} [1077656]: public static final int F6 = KEYCODE_BIT + 15; Keyboard event constant representing the F7 key (value is (1&lt;&lt;24)+16).
(4683) {1077658} [1077783]: public static final int F7 = KEYCODE_BIT + 16; Keyboard event constant representing the F8 key (value is (1&lt;&lt;24)+17).
(4684) {1077785} [1077910]: public static final int F8 = KEYCODE_BIT + 17; Keyboard event constant representing the F9 key (value is (1&lt;&lt;24)+18).
(4685) {1077912} [1078038]: public static final int F9 = KEYCODE_BIT + 18; Keyboard event constant representing the F10 key (value is (1&lt;&lt;24)+19).
(4686) {1078040} [1078167]: public static final int F10 = KEYCODE_BIT + 19; Keyboard event constant representing the F11 key (value is (1&lt;&lt;24)+20).
(4687) {1078169} [1078296]: public static final int F11 = KEYCODE_BIT + 20; Keyboard event constant representing the F12 key (value is (1&lt;&lt;24)+21).
(4688) {1078298} [1078425]: public static final int F12 = KEYCODE_BIT + 21; Keyboard event constant representing the F13 key (value is (1&lt;&lt;24)+22).
(4689) {1078426} [1078567]: * @since 3.0 public static final int F13 = KEYCODE_BIT + 22; Keyboard event constant representing the F14 key (value is (1&lt;&lt;24)+23).
(4690) {1078568} [1078709]: * @since 3.0 public static final int F14 = KEYCODE_BIT + 23; Keyboard event constant representing the F15 key (value is (1&lt;&lt;24)+24).
(4691) {1078710} [1078851]: * @since 3.0 public static final int F15 = KEYCODE_BIT + 24; Keyboard event constant representing the F16 key (value is (1&lt;&lt;25)+25).
(4692) {1078852} [1078993]: * @since 3.6 public static final int F16 = KEYCODE_BIT + 25; Keyboard event constant representing the F17 key (value is (1&lt;&lt;26)+26).
(4693) {1078994} [1079135]: * @since 3.6 public static final int F17 = KEYCODE_BIT + 26; Keyboard event constant representing the F18 key (value is (1&lt;&lt;27)+27).
(4694) {1079136} [1079277]: * @since 3.6 public static final int F18 = KEYCODE_BIT + 27; Keyboard event constant representing the F19 key (value is (1&lt;&lt;28)+28).
(4695) {1079278} [1079419]: * @since 3.6 public static final int F19 = KEYCODE_BIT + 28; Keyboard event constant representing the F20 key (value is (1&lt;&lt;29)+29).
(4696) {1079420} [1079541]: * @since 3.6 public static final int F20 = KEYCODE_BIT + 29; Keyboard event constant representing the keypad location.
(4698) {1079565} [1079726]: * @since 3.6 public static final int KEYPAD = 1 &lt;&lt; 1; Keyboard event constant representing the numeric key pad multiply key (value is (1&lt;&lt;24)+42).
(4699) {1079727} [1079896]: * @since 3.0 public static final int KEYPAD_MULTIPLY = KEYCODE_BIT + 42; Keyboard event constant representing the numeric key pad add key (value is (1&lt;&lt;24)+43).
(4700) {1079897} [1080066]: * @since 3.0 public static final int KEYPAD_ADD = KEYCODE_BIT + 43; Keyboard event constant representing the numeric key pad subtract key (value is (1&lt;&lt;24)+45).
(4701) {1080067} [1080240]: * @since 3.0 public static final int KEYPAD_SUBTRACT = KEYCODE_BIT + 45; Keyboard event constant representing the numeric key pad decimal key (value is (1&lt;&lt;24)+46).
(4702) {1080241} [1080412]: * @since 3.0 public static final int KEYPAD_DECIMAL = KEYCODE_BIT + 46; Keyboard event constant representing the numeric key pad divide key (value is (1&lt;&lt;24)+47).
(4703) {1080413} [1080581]: * @since 3.0 public static final int KEYPAD_DIVIDE = KEYCODE_BIT + 47; Keyboard event constant representing the numeric key pad zero key (value is (1&lt;&lt;24)+48).
(4704) {1080582} [1080744]: * @since 3.0 public static final int KEYPAD_0 = KEYCODE_BIT + 48; Keyboard event constant representing the numeric key pad one key (value is (1&lt;&lt;24)+49).
(4705) {1080745} [1080907]: * @since 3.0 public static final int KEYPAD_1 = KEYCODE_BIT + 49; Keyboard event constant representing the numeric key pad two key (value is (1&lt;&lt;24)+50).
(4706) {1080908} [1081072]: * @since 3.0 public static final int KEYPAD_2 = KEYCODE_BIT + 50; Keyboard event constant representing the numeric key pad three key (value is (1&lt;&lt;24)+51).
(4707) {1081073} [1081236]: * @since 3.0 public static final int KEYPAD_3 = KEYCODE_BIT + 51; Keyboard event constant representing the numeric key pad four key (value is (1&lt;&lt;24)+52).
(4708) {1081237} [1081400]: * @since 3.0 public static final int KEYPAD_4 = KEYCODE_BIT + 52; Keyboard event constant representing the numeric key pad five key (value is (1&lt;&lt;24)+53).
(4709) {1081401} [1081563]: * @since 3.0 public static final int KEYPAD_5 = KEYCODE_BIT + 53; Keyboard event constant representing the numeric key pad six key (value is (1&lt;&lt;24)+54).
(4710) {1081564} [1081728]: * @since 3.0 public static final int KEYPAD_6 = KEYCODE_BIT + 54; Keyboard event constant representing the numeric key pad seven key (value is (1&lt;&lt;24)+55).
(4711) {1081729} [1081893]: * @since 3.0 public static final int KEYPAD_7 = KEYCODE_BIT + 55; Keyboard event constant representing the numeric key pad eight key (value is (1&lt;&lt;24)+56).
(4712) {1081894} [1082057]: * @since 3.0 public static final int KEYPAD_8 = KEYCODE_BIT + 56; Keyboard event constant representing the numeric key pad nine key (value is (1&lt;&lt;24)+57).
(4713) {1082058} [1082222]: * @since 3.0 public static final int KEYPAD_9 = KEYCODE_BIT + 57; Keyboard event constant representing the numeric key pad equal key (value is (1&lt;&lt;24)+61).
(4714) {1082223} [1082391]: * @since 3.0 public static final int KEYPAD_EQUAL = KEYCODE_BIT + 61; Keyboard event constant representing the numeric key pad enter key (value is (1&lt;&lt;24)+80).
(4715) {1082392} [1082540]: * @since 3.0 public static final int KEYPAD_CR = KEYCODE_BIT + 80; Keyboard event constant representing the help key (value is (1&lt;&lt;24)+81).
(4719) {1082730} [1082894]: * @since 3.0 * @see SWT#Help public static final int HELP = KEYCODE_BIT + 81; Keyboard event constant representing the caps lock key (value is (1&lt;&lt;24)+82).
(4720) {1082895} [1083047]: * @since 3.0 public static final int CAPS_LOCK = KEYCODE_BIT + 82; Keyboard event constant representing the num lock key (value is (1&lt;&lt;24)+83).
(4721) {1083048} [1083202]: * @since 3.0 public static final int NUM_LOCK = KEYCODE_BIT + 83; Keyboard event constant representing the scroll lock key (value is (1&lt;&lt;24)+84).
(4722) {1083203} [1083354]: * @since 3.0 public static final int SCROLL_LOCK = KEYCODE_BIT + 84; Keyboard event constant representing the pause key (value is (1&lt;&lt;24)+85).
(4723) {1083355} [1083500]: * @since 3.0 public static final int PAUSE = KEYCODE_BIT + 85; Keyboard event constant representing the break key (value is (1&lt;&lt;24)+86).
(4724) {1083501} [1083653]: * @since 3.0 public static final int BREAK = KEYCODE_BIT + 86; Keyboard event constant representing the print screen key (value is (1&lt;&lt;24)+87).
*****************************************************************
========================= CLASS #449 =============================
(4771) {1089873} [1089991]: public static final int COLOR_WIDGET_DARK_SHADOW = 17; System color used to paint normal shadow areas (value is 18).
(4871) {1105535} [1105619]: public static final int CURSOR_SIZENW = 17; System up arrow cursor (value is 18).
*****************************************************************
========================= CLASS #450 =============================
(4772) {1089993} [1090112]: public static final int COLOR_WIDGET_NORMAL_SHADOW = 18; System color used to paint light shadow areas (value is 19).
(4872) {1105621} [1105703]: public static final int CURSOR_UPARROW = 18; System i-beam cursor (value is 19).
*****************************************************************
========================= CLASS #451 =============================
(4774) {1090238} [1090358]: public static final int COLOR_WIDGET_HIGHLIGHT_SHADOW = 20; System color used to paint foreground areas (value is 21).
(4874) {1105794} [1105869]: public static final int CURSOR_NO = 20; System hand cursor (value is 21).
*****************************************************************
========================= CLASS #452 =============================
(4793) {1092500} [1093126]: For example: &lt;ul&gt; &lt;li&gt;{@link org.eclipse.swt.widgets.Combo Combo}, {@link org.eclipse.swt.widgets.List List} and {@link org.eclipse.swt.widgets.Tree Tree} support transparent background on GTK3 and Windows only.&lt;/li&gt; &lt;li&gt;{@link org.eclipse.swt.widgets.Text Text} supports transparent background on Windows only whereas {@link org.eclipse.swt.widgets.Table Table} supports transparent background on GTK3 only.&lt;/li&gt; &lt;/ul&gt; * @since 3.104 public static final int COLOR_TRANSPARENT = 37; Draw constant indicating whether the drawing operation should fill the background (value is 1&lt;&lt;0).
(4794) {1093128} [1093301]: public static final int DRAW_TRANSPARENT = 1 &lt;&lt; 0; Draw constant indicating whether the string drawing operation should handle line-delimiters (value is 1&lt;&lt;1).
(4795) {1093303} [1093473]: public static final int DRAW_DELIMITER = 1 &lt;&lt; 1; Draw constant indicating whether the string drawing operation should expand TAB characters (value is 1&lt;&lt;2).
(4796) {1093475} [1093634]: public static final int DRAW_TAB = 1 &lt;&lt; 2; Draw constant indicating whether the string drawing operation should handle mnemonics (value is 1&lt;&lt;3).
*****************************************************************
========================= CLASS #453 =============================
(4806) {1095415} [1095590]: public static final int ERROR_CANNOT_BE_ZERO = 7; SWT error constant indicating that the underlying operating system was unable to provide the value of an item (value is 8).
(4807) {1095592} [1095761]: public static final int ERROR_CANNOT_GET_ITEM = 8; SWT error constant indicating that the underlying operating system was unable to provide the selection (value is 9).
(4809) {1095900} [1096098]: * @since 3.1 public static final int ERROR_CANNOT_INVERT_MATRIX = 10; SWT error constant indicating that the underlying operating system was unable to provide the height of an item (value is 11).
(4810) {1096100} [1096285]: public static final int ERROR_CANNOT_GET_ITEM_HEIGHT = 11; SWT error constant indicating that the underlying operating system was unable to provide the text of a widget (value is 12).
(4811) {1096287} [1096461]: public static final int ERROR_CANNOT_GET_TEXT = 12; SWT error constant indicating that the underlying operating system was unable to set the text of a widget (value is 13).
(4812) {1096463} [1096624]: public static final int ERROR_CANNOT_SET_TEXT = 13; SWT error constant indicating that the underlying operating system was unable to add an item (value is 14).
(4813) {1096626} [1096789]: public static final int ERROR_ITEM_NOT_ADDED = 14; SWT error constant indicating that the underlying operating system was unable to remove an item (value is 15).
(4820) {1097913} [1098097]: public static final int ERROR_MENUITEM_NOT_CASCADE = 27; SWT error constant indicating that the underlying operating system was unable to set the selection of a widget (value is 28).
(4821) {1098099} [1098266]: public static final int ERROR_CANNOT_SET_SELECTION = 28; SWT error constant indicating that the underlying operating system was unable to set the menu (value is 29).
(4822) {1098268} [1098439]: public static final int ERROR_CANNOT_SET_MENU = 29; SWT error constant indicating that the underlying operating system was unable to set the enabled state (value is 30).
(4823) {1098441} [1098636]: public static final int ERROR_CANNOT_SET_ENABLED = 30; SWT error constant indicating that the underlying operating system was unable to provide enabled/disabled state information (value is 31).
(4826) {1098997} [1099169]: public static final int ERROR_MENU_NOT_BAR = 33; SWT error constant indicating that the underlying operating system was unable to provide count information (value is 36).
*****************************************************************
========================= CLASS #454 =============================
(4816) {1097107} [1097287]: public static final int ERROR_NOT_IMPLEMENTED = 20; SWT error constant indicating that a menu which needed to have the drop down style had some other style instead (value is 21).
(4819) {1097728} [1097911]: public static final int ERROR_WIDGET_DISPOSED = 24; SWT error constant indicating that a menu item which needed to have the cascade style had some other style instead (value is 27).
(4825) {1098817} [1098995]: public static final int ERROR_INVALID_PARENT = 32; SWT error constant indicating that a menu which needed to have the menu bar style had some other style instead (value is 33).
(4827) {1099171} [1099354]: public static final int ERROR_CANNOT_GET_COUNT = 36; SWT error constant indicating that a menu which needed to have the pop up menu style had some other style instead (value is 37).
*****************************************************************
========================= CLASS #455 =============================
(4818) {1097523} [1097726]: public static final int ERROR_THREAD_INVALID_ACCESS = 22; SWT error constant indicating that an attempt was made to invoke an SWT operation using a widget which had already been disposed (value is 24).
(4834) {1100400} [1100660]: * @see org.eclipse.swt.widgets.Widget#checkSubclass public static final int ERROR_INVALID_SUBCLASS = 43; SWT error constant indicating that an attempt was made to invoke an SWT operation using a graphics object which had already been disposed (value is 44).
(4835) {1100662} [1100860]: public static final int ERROR_GRAPHIC_DISPOSED = 44; SWT error constant indicating that an attempt was made to invoke an SWT operation using a device which had already been disposed (value is 45).
(4839) {1101327} [1101526]: * @since 3.1 public static final int ERROR_INVALID_FONT = 48; SWT error constant indicating that an attempt was made to use an BrowserFunction object which had already been disposed (value is 49).
*****************************************************************
========================= CLASS #456 =============================
(4828) {1099356} [1099532]: public static final int ERROR_MENU_NOT_POP_UP = 37; SWT error constant indicating that a graphics operation was attempted with an image of an unsupported depth (value is 38).
(4830) {1099715} [1099879]: public static final int ERROR_IO = 39; SWT error constant indicating that a graphics operation was attempted with an image having an invalid format (value is 40).
(4831) {1099881} [1100069]: public static final int ERROR_INVALID_IMAGE = 40; SWT error constant indicating that a graphics operation was attempted with an image having a valid but unsupported format (value is 42).
*****************************************************************
========================= CLASS #457 =============================
(4876) {1105966} [1106170]: * @see org.eclipse.swt.graphics.GC#setLineCap(int) @see org.eclipse.swt.graphics.GC#getLineCap() * @since 3.1 public static final int CAP_FLAT = 1; Line drawing style for rounded end caps (value is 2).
(4877) {1106171} [1106375]: * @see org.eclipse.swt.graphics.GC#setLineCap(int) @see org.eclipse.swt.graphics.GC#getLineCap() * @since 3.1 public static final int CAP_ROUND = 2; Line drawing style for square end caps (value is 3).
(4878) {1106376} [1106577]: * @see org.eclipse.swt.graphics.GC#setLineCap(int) @see org.eclipse.swt.graphics.GC#getLineCap() * @since 3.1 public static final int CAP_SQUARE = 3; Line drawing style for miter joins (value is 1).
(4879) {1106578} [1106784]: * @see org.eclipse.swt.graphics.GC#setLineJoin(int) @see org.eclipse.swt.graphics.GC#getLineJoin() * @since 3.1 public static final int JOIN_MITER = 1; Line drawing style for rounded joins (value is 2).
(4880) {1106785} [1106988]: * @see org.eclipse.swt.graphics.GC#setLineJoin(int) @see org.eclipse.swt.graphics.GC#getLineJoin() * @since 3.1 public static final int JOIN_ROUND = 2; Line drawing style for bevel joins (value is 3).
(4881) {1106989} [1107193]: * @see org.eclipse.swt.graphics.GC#setLineJoin(int) @see org.eclipse.swt.graphics.GC#getLineJoin() * @since 3.1 public static final int JOIN_BEVEL = 3; Line drawing style for solid lines (value is 1).
(4882) {1107195} [1107286]: public static final int LINE_SOLID = 1; Line drawing style for dashed lines (value is 2).
(4883) {1107288} [1107378]: public static final int LINE_DASH = 2; Line drawing style for dotted lines (value is 3).
*****************************************************************
========================= CLASS #458 =============================
(4887) {1107690} [1107913]: * @see org.eclipse.swt.graphics.GC#setLineDash(int[]) @see org.eclipse.swt.graphics.GC#getLineDash() * @since 3.1 public static final int LINE_CUSTOM = 6; Path constant that represents a "move to" operation (value is 1).
(4888) {1107914} [1108037]: * @since 3.1 public static final int PATH_MOVE_TO = 1; Path constant that represents a "line to" operation (value is 2).
(4889) {1108038} [1108172]: * @since 3.1 public static final int PATH_LINE_TO = 2; Path constant that represents a "quadratic curve to" operation (value is 3).
(4890) {1108173} [1108303]: * @since 3.1 public static final int PATH_QUAD_TO = 3; Path constant that represents a "cubic curve to" operation (value is 4).
(4891) {1108304} [1108426]: * @since 3.1 public static final int PATH_CUBIC_TO = 4; Path constant that represents a "close" operation (value is 5).
*****************************************************************
========================= CLASS #459 =============================
(4904) {1109839} [1110036]: public static final int DM_UNSPECIFIED = 0x0; GIF image disposal method constants indicating that the disposal method is to do nothing; that is, to leave the previous image in place (value is 1).
(4906) {1110252} [1110424]: public static final int DM_FILL_BACKGROUND = 0x2; GIF image disposal method constants indicating that the disposal method is to restore the previous picture (value is 3).
*****************************************************************
========================= CLASS #460 =============================
(4912) {1111198} [1111259]: This constant is used to move a text offset over a character.
(4914) {1111515} [1111574]: This constant is used to move a text offset over a cluster.
(4918) {1111974} [1112030]: This constant is used to move a text offset over a word.
*****************************************************************
========================= CLASS #461 =============================
(4923) {1112582} [1112659]: This constant is used to move a text offset to the next or previous word end.
(4926) {1112987} [1113066]: This constant is used to move a text offset to the next or previous word start.
*****************************************************************
========================= CLASS #462 =============================
(4924) {1112660} [1112722]: The behavior of this constant does not depend on the platform.
(4927) {1113067} [1113129]: The behavior of this constant does not depend on the platform.
*****************************************************************
========================= CLASS #463 =============================
(4930) {1113769} [1113968]: * @see org.eclipse.swt.widgets.MenuItem#setID(int) @see org.eclipse.swt.widgets.MenuItem#getID() * @since 3.7 public static final int ID_ABOUT = -1; ID for the Preferences menu item (value is -2).
(4931) {1113969} [1114167]: * @see org.eclipse.swt.widgets.MenuItem#setID(int) @see org.eclipse.swt.widgets.MenuItem#getID() * @since 3.7 public static final int ID_PREFERENCES = -2; ID for the Hide menu item (value is -3).
(4932) {1114168} [1114366]: * @see org.eclipse.swt.widgets.MenuItem#setID(int) @see org.eclipse.swt.widgets.MenuItem#getID() * @since 3.7 public static final int ID_HIDE = -3; ID for the Hide Others menu item (value is -4).
(4933) {1114367} [1114569]: * @see org.eclipse.swt.widgets.MenuItem#setID(int) @see org.eclipse.swt.widgets.MenuItem#getID() * @since 3.7 public static final int ID_HIDE_OTHERS = -4; ID for the Show All menu item (value is -5).
(4934) {1114570} [1114765]: * @see org.eclipse.swt.widgets.MenuItem#setID(int) @see org.eclipse.swt.widgets.MenuItem#getID() * @since 3.7 public static final int ID_SHOW_ALL = -5; ID for the Quit menu item (value is -6).
(4935) {1114766} [1114977]: * @see org.eclipse.swt.widgets.MenuItem#setID(int) @see org.eclipse.swt.widgets.MenuItem#getID() * @since 3.7 public static final int ID_QUIT = -6; Key name for setting and getting the skin class of a widget.
*****************************************************************
========================= CLASS #464 =============================
(4936) {1114978} [1115046]: &lt;p&gt; Note: SWT currently doesn't read or process this property.
(4939) {1115446} [1115514]: &lt;p&gt; Note: SWT currently doesn't read or process this property.
*****************************************************************
========================= CLASS #465 =============================
(4937) {1115047} [1115162]: The only effect of setting this property is to trigger a call to {@link Widget#reskin(int) Widget#reskin(SWT.ALL)}.
(4940) {1115515} [1115630]: The only effect of setting this property is to trigger a call to {@link Widget#reskin(int) Widget#reskin(SWT.ALL)}.
*****************************************************************
========================= CLASS #466 =============================
(4951) {1117308} [1117443]: Example: "SWT051" == 51 @return the SWT version number ------------ Throws an appropriate exception based on the passed in error code.
(4952) {1117445} [1117555]: @param code the SWT error code ------------ Throws an appropriate exception based on the passed in error code.
(4957) {1118486} [1118627]: @see SWTError @see SWTException @see IllegalArgumentException ------------ Throws an appropriate exception based on the passed in error code.
*****************************************************************
========================= CLASS #467 =============================
(4953) {1117556} [1117683]: The &lt;code&gt;throwable&lt;/code&gt; argument should be either null, or the throwable which caused SWT to throw an exception.
(4958) {1118628} [1118755]: The &lt;code&gt;throwable&lt;/code&gt; argument should be either null, or the throwable which caused SWT to throw an exception.
*****************************************************************
========================= CLASS #468 =============================
(4956) {1118421} [1118484]: @param throwable the exception which caused the error to occur.
(4961) {1119493} [1119556]: @param throwable the exception which caused the error to occur.
*****************************************************************
========================= CLASS #469 =============================
(4966) {1120148} [1120225]: The message text and error code provide a further description of the problem.
(5001) {1124487} [1124564]: The message text and error code provide a further description of the problem.
*****************************************************************
========================= CLASS #470 =============================
(4967) {1120226} [1120387]: The exception has a &lt;code&gt;throwable&lt;/code&gt; field which holds the underlying throwable that caused the problem (if this information is available (i.e.
(5002) {1124565} [1124726]: The exception has a &lt;code&gt;throwable&lt;/code&gt; field which holds the underlying exception that caused the problem (if this information is available (i.e.
*****************************************************************
========================= CLASS #471 =============================
(4968) {1120388} [1120405]: it may be null)).
(5003) {1124727} [1124744]: it may be null)).
*****************************************************************
========================= CLASS #472 =============================
(4975) {1121236} [1121352]: / public int code; The underlying throwable that caused the problem, or null if this information is not available.
(5007) {1125160} [1125274]: public int code; The underlying throwable that caused the problem, or null if this information is not available.
*****************************************************************
========================= CLASS #473 =============================
(4976) {1121354} [1121515]: public Throwable throwable; static final long serialVersionUID = 3833467327105808433L; Constructs a new instance of this class with its stack trace filled in.
(5008) {1125276} [1125437]: public Throwable throwable; static final long serialVersionUID = 3257282552304842547L; Constructs a new instance of this class with its stack trace filled in.
*****************************************************************
========================= CLASS #474 =============================
(4977) {1121516} [1121562]: The error code is set to an unspecified value.
(4979) {1121660} [1121706]: The error code is set to an unspecified value.
(5009) {1125438} [1125484]: The error code is set to an unspecified value.
(5011) {1125582} [1125628]: The error code is set to an unspecified value.
*****************************************************************
========================= CLASS #475 =============================
(4985) {1122405} [1122489]: &lt;p&gt; NOTE: This method overrides Throwable.getCause() that was added to JDK1.4.
(5017) {1126327} [1126411]: &lt;p&gt; NOTE: This method overrides Throwable.getCause() that was added to JDK1.4.
*****************************************************************
========================= CLASS #476 =============================
(4986) {1122490} [1122587]: It is necessary to override this method in order for inherited printStackTrace() methods to work.
(5018) {1126412} [1126509]: It is necessary to override this method in order for inherited printStackTrace() methods to work.
*****************************************************************
========================= CLASS #477 =============================
(4988) {1122709} [1122837]: &lt;p&gt; It is combined with the message string of the Throwable which caused this SWTError (if this information is available).
(5020) {1126635} [1126767]: &lt;p&gt; It is combined with the message string of the Throwable which caused this SWTException (if this information is available).
*****************************************************************
========================= CLASS #478 =============================
(4989) {1122838} [1123011]: &lt;/p&gt; @return the error message string of this SWTError object ------------ Outputs a printable representation of this error's stack trace on the standard error stream.
(5021) {1126768} [1126949]: &lt;/p&gt; @return the error message string of this SWTException object ------------ Outputs a printable representation of this exception's stack trace on the standard error stream.
*****************************************************************
========================= CLASS #479 =============================
(4990) {1123012} [1123152]: &lt;p&gt; Note: printStackTrace(PrintStream) and printStackTrace(PrintWriter) are not provided in order to maintain compatibility with CLDC.
(5022) {1126950} [1127090]: &lt;p&gt; Note: printStackTrace(PrintStream) and printStackTrace(PrintWriter) are not provided in order to maintain compatibility with CLDC.
*****************************************************************
========================= CLASS #480 =============================
(5060) {1134186} [1134240]: The point is in the coordinate system of the receiver.
(5175) {1163869} [1163923]: The point is in the coordinate system of the receiver.
(5488) {1246878} [1246932]: The point is in the coordinate system of the receiver.
(5735) {1300845} [1300899]: The point is in the coordinate system of the receiver.
(6100) {1393544} [1393598]: The point is in the coordinate system of the receiver.
*****************************************************************
========================= CLASS #481 =============================
(5114) {1148260} [1148474]: This can provide significant performance improvements for tables that are very large or for which &lt;code&gt;TableItem&lt;/code&gt; population is expensive (for example, retrieving values from an external source).
(6047) {1378279} [1378491]: This can provide significant performance improvements for trees that are very large or for which &lt;code&gt;TreeItem&lt;/code&gt; population is expensive (for example, retrieving values from an external source).
*****************************************************************
========================= CLASS #482 =============================
(5127) {1152080} [1152180]: The item field of the event object is valid for default selection, but the detail field is not used.
(6067) {1383814} [1383914]: The item field of the event object is valid for default selection, but the detail field is not used.
*****************************************************************
========================= CLASS #483 =============================
(5129) {1152807} [1152884]: The text, icon and other attributes of the item are set to the default value.
(5132) {1153656} [1153737]: The text, icon and other attributes of the items are set to their default values.
(5135) {1154530} [1154611]: The text, icon and other attributes of the items are set to their default values.
(5138) {1155384} [1155465]: The text, icon and other attributes of the items are set to their default values.
(6070) {1385235} [1385312]: The text, icon and other attributes of the item are set to the default value.
(6073) {1386163} [1386244]: The text, icon and other attributes of the items are set to their default values.
(6259) {1434119} [1434196]: The text, icon and other attributes of the item are set to the default value.
(6262) {1435047} [1435128]: The text, icon and other attributes of the items are set to their default values.
*****************************************************************
========================= CLASS #484 =============================
(5130) {1152886} [1153011]: If the table was created with the &lt;code&gt;SWT.VIRTUAL&lt;/code&gt; style, these attributes are requested again as needed.
(5133) {1153738} [1153863]: If the table was created with the &lt;code&gt;SWT.VIRTUAL&lt;/code&gt; style, these attributes are requested again as needed.
(5136) {1154613} [1154738]: If the table was created with the &lt;code&gt;SWT.VIRTUAL&lt;/code&gt; style, these attributes are requested again as needed.
(5139) {1155466} [1155591]: If the table was created with the &lt;code&gt;SWT.VIRTUAL&lt;/code&gt; style, these attributes are requested again as needed.
(6071) {1385314} [1385438]: If the tree was created with the &lt;code&gt;SWT.VIRTUAL&lt;/code&gt; style, these attributes are requested again as needed.
(6074) {1386245} [1386369]: If the tree was created with the &lt;code&gt;SWT.VIRTUAL&lt;/code&gt; style, these attributes are requested again as needed.
(6260) {1434198} [1434322]: If the tree was created with the &lt;code&gt;SWT.VIRTUAL&lt;/code&gt; style, these attributes are requested again as needed.
(6263) {1435129} [1435253]: If the tree was created with the &lt;code&gt;SWT.VIRTUAL&lt;/code&gt; style, these attributes are requested again as needed.
*****************************************************************
========================= CLASS #485 =============================
(5157) {1158459} [1158560]: This occurs when the programmer uses the table like a list, adding items but never creating a column.
(5160) {1159451} [1159552]: This occurs when the programmer uses the table like a list, adding items but never creating a column.
(5167) {1161094} [1161195]: This occurs when the programmer uses the table like a list, adding items but never creating a column.
(6085) {1389463} [1389563]: This occurs when the programmer uses the tree like a list, adding items but never creating a column.
(6088) {1390461} [1390561]: This occurs when the programmer uses the tree like a list, adding items but never creating a column.
(6095) {1392109} [1392209]: This occurs when the programmer uses the tree like a list, adding items but never creating a column.
*****************************************************************
========================= CLASS #486 =============================
(5177) {1164015} [1164141]: For example, if selection only occurs in items in the first column, then null is returned if the point is outside of the item.
(6102) {1393690} [1393816]: For example, if selection only occurs in items in the first column, then null is returned if the point is outside of the item.
*****************************************************************
========================= CLASS #487 =============================
(5178) {1164142} [1164264]: Note that the SWT.FULL_SELECTION style hint, which specifies the selection policy, determines the extent of the selection.
(6103) {1393817} [1393939]: Note that the SWT.FULL_SELECTION style hint, which specifies the selection policy, determines the extent of the selection.
*****************************************************************
========================= CLASS #488 =============================
(5184) {1166184} [1166270]: Note that some platforms draw grid lines while others may draw alternating row colors.
(5237) {1179699} [1179785]: Note that some platforms draw grid lines while others may draw alternating row colors.
(6111) {1395990} [1396076]: Note that some platforms draw grid lines while others may draw alternating row colors.
(6141) {1403903} [1403989]: Note that some platforms draw grid lines while others may draw alternating row colors.
*****************************************************************
========================= CLASS #489 =============================
(5197) {1168899} [1168959]: The value may be null if no column shows the sort indicator.
(6120) {1398078} [1398138]: The value may be null if no column shows the sort indicator.
*****************************************************************
========================= CLASS #490 =============================
(5258) {1184380} [1184423]: A null value will clear the sort indicator.
(6158) {1408569} [1408612]: A null value will clear the sort indicator.
*****************************************************************
========================= CLASS #491 =============================
(5259) {1184425} [1184489]: The current sort column is cleared before the new column is set.
(6159) {1408614} [1408678]: The current sort column is cleared before the new column is set.
*****************************************************************
========================= CLASS #492 =============================
(5266) {1186010} [1186074]: Otherwise, the columns are scrolled until the column is visible.
(6166) {1410419} [1410483]: Otherwise, the columns are scrolled until the column is visible.
*****************************************************************
========================= CLASS #493 =============================
(5297) {1194300} [1194424]: A column that is not moveable cannot be reordered by the user by dragging the header but may be reordered by the programmer.
(5310) {1198122} [1198200]: A column that is moveable can be reordered by the user by dragging the header.
(5311) {1198201} [1198300]: A column that is not moveable cannot be dragged by the user but may be reordered by the programmer.
(6204) {1419504} [1419628]: A column that is not moveable cannot be reordered by the user by dragging the header but may be reordered by the programmer.
(6218) {1423679} [1423757]: A column that is moveable can be reordered by the user by dragging the header.
(6219) {1423758} [1423857]: A column that is not moveable cannot be dragged by the user but may be reordered by the programmer.
*****************************************************************
========================= CLASS #494 =============================
(5299) {1194860} [1194958]: A column that is not resizable cannot be dragged by the user but may be resized by the programmer.
(5314) {1198826} [1198924]: A column that is not resizable cannot be dragged by the user but may be resized by the programmer.
(6207) {1420417} [1420515]: A column that is not resizable cannot be dragged by the user but may be resized by the programmer.
(6221) {1424292} [1424390]: A column that is not resizable cannot be dragged by the user but may be resized by the programmer.
*****************************************************************
========================= CLASS #495 =============================
(5348) {1208901} [1208986]: An empty rectangle is returned if index exceeds the index of the table's last column.
(5353) {1210551} [1210636]: An empty rectangle is returned if index exceeds the index of the table's last column.
*****************************************************************
========================= CLASS #496 =============================
(5401) {1225839} [1225926]: The application code can check if it is supported by calling the respective get method.
(5406) {1227204} [1227291]: The application code can check if it is supported by calling the respective get method.
(5410) {1228316} [1228403]: The application code can check if it is supported by calling the respective get method.
(5414) {1229452} [1229539]: The application code can check if it is supported by calling the respective get method.
(5418) {1230901} [1230988]: The application code can check if it is supported by calling the respective get method.
*****************************************************************
========================= CLASS #497 =============================
(5476) {1243628} [1243746]: &lt;p&gt; The double click flag enables or disables the default action of the text widget when the user double clicks.
(5530) {1256376} [1256494]: &lt;p&gt; The double click flag enables or disables the default action of the text widget when the user double clicks.
*****************************************************************
========================= CLASS #498 =============================
(5478) {1244081} [1244212]: &lt;p&gt; The echo character is the character that is displayed when the user enters text or the text is changed by the programmer.
(5533) {1256940} [1257071]: &lt;p&gt; The echo character is the character that is displayed when the user enters text or the text is changed by the programmer.
*****************************************************************
========================= CLASS #499 =============================
(5485) {1246299} [1246389]: The message text is displayed as a hint for the user, indicating the purpose of the field.
(5538) {1257967} [1258057]: The message text is displayed as a hint for the user, indicating the purpose of the field.
*****************************************************************
========================= CLASS #500 =============================
(5498) {1248728} [1248806]: &lt;p&gt; Tab stop spacing is specified in terms of the space (' ') character.
(5558) {1261747} [1261825]: &lt;p&gt; Tab stop spacing is specified in terms of the space (' ') character.
*****************************************************************
========================= CLASS #501 =============================
(5499) {1248808} [1248872]: The width of a single tab stop is the pixel width of the spaces.
(5559) {1261827} [1261891]: The width of a single tab stop is the pixel width of the spaces.
*****************************************************************
========================= CLASS #502 =============================
(5504) {1249763} [1249906]: &lt;/p&gt; &lt;p&gt; Note: Use this API to prevent the text from being written into a String object whose lifecycle is outside of your control.
(5566) {1263203} [1263335]: &lt;p&gt; Note: Use this API to prevent the text from being written into a String object whose lifecycle is outside of your control.
*****************************************************************
========================= CLASS #503 =============================
(5505) {1249907} [1249996]: This can help protect the text, for example, when the widget is used as a password field.
(5567) {1263336} [1263425]: This can help protect the text, for example, when the widget is used as a password field.
*****************************************************************
========================= CLASS #504 =============================
(5506) {1249997} [1250121]: However, the text can't be protected if an {@link SWT#Segments} or {@link SWT#Verify} listener has been added to the widget.
(5568) {1263426} [1263550]: However, the text can't be protected if an {@link SWT#Segments} or {@link SWT#Verify} listener has been added to the widget.
*****************************************************************
========================= CLASS #505 =============================
(5514) {1251671} [1251761]: &lt;p&gt; This index can change when lines are scrolled or new lines are added or removed.
(5574) {1264986} [1265067]: This index can change when lines are scrolled or new lines are added and removed.
*****************************************************************
========================= CLASS #506 =============================
(5546) {1259382} [1259605]: In a text widget that contains N characters, there are N+1 caret positions, ranging from 0..N. This differs from other functions that address character position such as getText () that use the regular array indexing rules.
(5551) {1260179} [1260400]: In a text widget that contains N characters, there are N+1 caret positions, ranging from 0..N. This differs from other functions that address character position such as getText () that use the usual array indexing rules.
(5556) {1261091} [1261312]: In a text widget that contains N characters, there are N+1 caret positions, ranging from 0..N. This differs from other functions that address character position such as getText () that use the usual array indexing rules.
*****************************************************************
========================= CLASS #507 =============================
(5597) {1271561} [1271637]: The start and end offsets are inclusive and will be clamped if out of range.
(5672) {1288399} [1288475]: The start and end offsets are inclusive and will be clamped if out of range.
*****************************************************************
========================= CLASS #508 =============================
(5617) {1277088} [1277270]: When the point is over a cluster composed of multiple characters, the trailing argument will be filled with the position of the character in the cluster that is closest to the point.
(5620) {1277976} [1278158]: When the point is over a cluster composed of multiple characters, the trailing argument will be filled with the position of the character in the cluster that is closest to the point.
*****************************************************************
========================= CLASS #509 =============================
(5645) {1283717} [1283822]: The ascent is distance in pixels from the baseline to the top of the line and it is applied to all lines.
(5648) {1284349} [1284458]: The descent is distance in pixels from the baseline to the bottom of the line and it is applied to all lines.
*****************************************************************
========================= CLASS #510 =============================
(5698) {1293129} [1293483]: &lt;/p&gt; * @see SWT#UNDERLINE_SINGLE @see SWT#UNDERLINE_DOUBLE @see SWT#UNDERLINE_ERROR @see SWT#UNDERLINE_SQUIGGLE @see SWT#UNDERLINE_LINK * @since 3.4 public int underlineStyle; the strikeout flag of the style * @since 3.1 public boolean strikeout; the strikeout color of the style * @since 3.4 public Color strikeoutColor; the border style.
(5701) {1293747} [1294055]: &lt;/p&gt; * @see SWT#BORDER_SOLID @see SWT#BORDER_DASH @see SWT#BORDER_DOT @see SWT#NONE * @since 3.4 public int borderStyle; the border color of the style * @since 3.4 public Color borderColor; the GlyphMetrics of the style * @since 3.2 public GlyphMetrics metrics; the baseline rise of the style.
*****************************************************************
========================= CLASS #511 =============================
(5967) {1358596} [1358903]: For example, when a right arrow key is pressed in a text control, the detail field is &lt;code&gt;TRAVERSE_ARROW_NEXT&lt;/code&gt; and the doit field is &lt;code&gt;false&lt;/code&gt;, indicating that the system will not traverse to the next tab item and the arrow key will be delivered to the text control.
(5977) {1360135} [1360307]: The text widget implementor sets doit to &lt;code&gt;false&lt;/code&gt;, ensuring that the system will not traverse and that the tab key will be delivered to key listeners.
(5978) {1360308} [1360496]: The list widget implementor sets doit to &lt;code&gt;true&lt;/code&gt;, indicating that the system should perform tab traversal and that the key should not be delivered to the list widget.
(5980) {1360583} [1360758]: When the return key is pressed in a single line text control, the detail field is &lt;code&gt;TRAVERSE_RETURN&lt;/code&gt; and the doit field is &lt;code&gt;true&lt;/code&gt;.
*****************************************************************
========================= CLASS #512 =============================
(6058) {1382159} [1382327]: When TVM_SETBKCOLOR is used more than once to set the background color of a tree, the background color of the lines and the plus/minus does not change to the new color.
(6061) {1382603} [1382707]: When TVM_SETBKCOLOR is used to set the background color of a tree, the plus/minus animation draws badly.
*****************************************************************
========================= CLASS #513 =============================
(6325) {1455407} [1455462]: This is the name of the class without the package name.
(6425) {1473068} [1473123]: This is the name of the class without the package name.
*****************************************************************
========================= CLASS #514 =============================
(6468) {1482335} [1482392]: Method modified to use the passed data if it is not null.
(6471) {1482537} [1482594]: Method modified to use the passed data if it is not null.
*****************************************************************
========================= CLASS #515 =============================
(6478) {1483375} [1483419]: The data is flipped vertically and inverted.
(6480) {1483468} [1483499]: The data is flipped vertically.
*****************************************************************
